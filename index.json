{
  "api/Animals.Aging.AnimalsAging.html": {
    "href": "api/Animals.Aging.AnimalsAging.html",
    "title": "Class AnimalsAging | Harvest Grove code documentation",
    "keywords": "Class AnimalsAging Handles the aging process of animals, updates their stages, and manages deaths due to old age. Inheritance object AnimalsAging Namespace: Animals.Aging Assembly: cs.temp.dll.dll Syntax public class AnimalsAging : MonoBehaviour Methods Construct(IManagerData, ICanvasData, IGameData, IOtherData) Injects required dependencies for animal aging logic. Declaration public void Construct(IManagerData managerData, ICanvasData canvasData, IGameData gameData, IOtherData otherData) Parameters Type Name Description IManagerData managerData ICanvasData canvasData IGameData gameData IOtherData otherData"
  },
  "api/Animals.Aging.html": {
    "href": "api/Animals.Aging.html",
    "title": "Namespace Animals.Aging | Harvest Grove code documentation",
    "keywords": "Namespace Animals.Aging Classes AnimalsAging Handles the aging process of animals, updates their stages, and manages deaths due to old age."
  },
  "api/Animals.AI.AnimalMovement.html": {
    "href": "api/Animals.AI.AnimalMovement.html",
    "title": "Class AnimalMovement | Harvest Grove code documentation",
    "keywords": "Class AnimalMovement Inheritance object AnimalMovement Namespace: Animals.AI Assembly: cs.temp.dll.dll Syntax public class AnimalMovement : MonoBehaviour Methods ChangeDirectionTo(Vector2, bool, bool, CancellationToken) Declaration public UniTask<bool> ChangeDirectionTo(Vector2 targetPos, bool isStrictlyToGoal = false, bool isStopWandering = true, CancellationToken destroyCancellationToken = null) Parameters Type Name Description Vector2 targetPos bool isStrictlyToGoal bool isStopWandering CancellationToken destroyCancellationToken Returns Type Description UniTask<><bool> Wander() Declaration public void Wander()"
  },
  "api/Animals.AI.FarmAnimal_AI.html": {
    "href": "api/Animals.AI.FarmAnimal_AI.html",
    "title": "Class FarmAnimal_AI | Harvest Grove code documentation",
    "keywords": "Class FarmAnimal_AI Inheritance object FarmAnimal_AI Namespace: Animals.AI Assembly: cs.temp.dll.dll Syntax public class FarmAnimal_AI : MonoBehaviour Fields IsBreeding Declaration public bool IsBreeding Field Value Type Description bool Properties AnimalMovement Declaration public AnimalMovement AnimalMovement { get; } Property Value Type Description AnimalMovement ID Declaration public int ID { get; } Property Value Type Description int Methods AssignInfo(int, MainAnimalsEnum, AnimalStagesEnum, string) Declaration public void AssignInfo(int id, MainAnimalsEnum animalType, AnimalStagesEnum stage, string animalName) Parameters Type Name Description int id MainAnimalsEnum animalType AnimalStagesEnum stage string animalName Construst(IOtherData, IGameData, IManagerData) Declaration public void Construst(IOtherData otherData, IGameData gameData, IManagerData managerData) Parameters Type Name Description IOtherData otherData IGameData gameData IManagerData managerData TimeForFood() Declaration public void TimeForFood()"
  },
  "api/Animals.AI.html": {
    "href": "api/Animals.AI.html",
    "title": "Namespace Animals.AI | Harvest Grove code documentation",
    "keywords": "Namespace Animals.AI Classes AnimalMovement FarmAnimal_AI PlayerPet Enums PetState"
  },
  "api/Animals.AI.PetState.html": {
    "href": "api/Animals.AI.PetState.html",
    "title": "Enum PetState | Harvest Grove code documentation",
    "keywords": "Enum PetState Namespace: Animals.AI Assembly: cs.temp.dll.dll Syntax public enum PetState Fields Name Description Following Waiting"
  },
  "api/Animals.AI.PlayerPet.html": {
    "href": "api/Animals.AI.PlayerPet.html",
    "title": "Class PlayerPet | Harvest Grove code documentation",
    "keywords": "Class PlayerPet Inheritance object PlayerPet Namespace: Animals.AI Assembly: cs.temp.dll.dll Syntax public class PlayerPet : MonoBehaviour Methods Construct(ITileMapService, Transform) Declaration public void Construct(ITileMapService tilemapService, Transform playerTransform) Parameters Type Name Description ITileMapService tilemapService Transform playerTransform"
  },
  "api/Animals.AnimalsHungry.html": {
    "href": "api/Animals.AnimalsHungry.html",
    "title": "Class AnimalsHungry | Harvest Grove code documentation",
    "keywords": "Class AnimalsHungry Inheritance object AnimalsHungry Namespace: Animals Assembly: cs.temp.dll.dll Syntax public class AnimalsHungry : MonoBehaviour Fields OnAnimalsGoEat Declaration public static Action OnAnimalsGoEat Field Value Type Description Action OnCheckBees Event should be called whenever the bees could die, so it would check if they are any bees left in the hive Declaration public static Action OnCheckBees Field Value Type Description Action Methods Construct(IGameData, ICanvasData, IManagerData, IOtherData) Declaration public void Construct(IGameData gameData, ICanvasData canvasData, IManagerData managerData, IOtherData otherData) Parameters Type Name Description IGameData gameData ICanvasData canvasData IManagerData managerData IOtherData otherData"
  },
  "api/Animals.Buying.AnimalBuying.html": {
    "href": "api/Animals.Buying.AnimalBuying.html",
    "title": "Class AnimalBuying | Harvest Grove code documentation",
    "keywords": "Class AnimalBuying Inheritance object AnimalBuying Namespace: Animals.Buying Assembly: cs.temp.dll.dll Syntax public class AnimalBuying : MonoBehaviour Methods Construct(InputsMap) Declaration public void Construct(InputsMap inputsMap) Parameters Type Name Description InputsMap inputsMap"
  },
  "api/Animals.Buying.AnimalBuyingCell.html": {
    "href": "api/Animals.Buying.AnimalBuyingCell.html",
    "title": "Class AnimalBuyingCell | Harvest Grove code documentation",
    "keywords": "Class AnimalBuyingCell Inheritance object AnimalBuyingCell Namespace: Animals.Buying Assembly: cs.temp.dll.dll Syntax public class AnimalBuyingCell : MonoBehaviour Fields OnAnimalBought Event is triggered when animal is bought, constructionSO it can check each animal if can be bought again Declaration public static Action OnAnimalBought Field Value Type Description Action Methods CheckBuyButton() Checks if the buy button should be interactive based on player's housing and money. Declaration public void CheckBuyButton() UpdateCell(AnimalInfo, AnimalStage, MapBuildingsDataSO) Get the needed info and show it in the animal cell. Also checks if the player can buy the animal Declaration public void UpdateCell(AnimalInfo animalInfo, AnimalStage stage, MapBuildingsDataSO buildingsData) Parameters Type Name Description AnimalInfo animalInfo AnimalStage stage MapBuildingsDataSO buildingsData"
  },
  "api/Animals.Buying.html": {
    "href": "api/Animals.Buying.html",
    "title": "Namespace Animals.Buying | Harvest Grove code documentation",
    "keywords": "Namespace Animals.Buying Classes AnimalBuying AnimalBuyingCell"
  },
  "api/Animals.DeathCaseEnum.html": {
    "href": "api/Animals.DeathCaseEnum.html",
    "title": "Enum DeathCaseEnum | Harvest Grove code documentation",
    "keywords": "Enum DeathCaseEnum Namespace: Animals Assembly: cs.temp.dll.dll Syntax public enum DeathCaseEnum Fields Name Description Killed NoFood NoWater OldAge"
  },
  "api/Animals.FillingThroughs.FillingTroughsManager.html": {
    "href": "api/Animals.FillingThroughs.FillingTroughsManager.html",
    "title": "Class FillingTroughsManager | Harvest Grove code documentation",
    "keywords": "Class FillingTroughsManager When the feed in the Trough is decreasedm the manager will take care of setting the correct tile on the position Inheritance object FillingTroughsManager Namespace: Animals.FillingThroughs Assembly: cs.temp.dll.dll Syntax public class FillingTroughsManager : MonoBehaviour Methods Construct(ITileMapService) Declaration public void Construct(ITileMapService tileMapService) Parameters Type Name Description ITileMapService tileMapService"
  },
  "api/Animals.FillingThroughs.html": {
    "href": "api/Animals.FillingThroughs.html",
    "title": "Namespace Animals.FillingThroughs | Harvest Grove code documentation",
    "keywords": "Namespace Animals.FillingThroughs Classes FillingTroughsManager When the feed in the Trough is decreasedm the manager will take care of setting the correct tile on the position"
  },
  "api/Animals.GettingNames.AnimalNames.html": {
    "href": "api/Animals.GettingNames.AnimalNames.html",
    "title": "Class AnimalNames | Harvest Grove code documentation",
    "keywords": "Class AnimalNames Inheritance object AnimalNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Animals.GettingNames Assembly: cs.temp.dll.dll Syntax public static class AnimalNames Methods GetRandomName() Declaration public static string GetRandomName() Returns Type Description string"
  },
  "api/Animals.GettingNames.html": {
    "href": "api/Animals.GettingNames.html",
    "title": "Namespace Animals.GettingNames | Harvest Grove code documentation",
    "keywords": "Namespace Animals.GettingNames Classes AnimalNames"
  },
  "api/Animals.Housing.AnimalHouseBase.html": {
    "href": "api/Animals.Housing.AnimalHouseBase.html",
    "title": "Class AnimalHouseBase | Harvest Grove code documentation",
    "keywords": "Class AnimalHouseBase Inheritance object AnimalHouseBase BeeHive ChickenHouse CowHouse OstrichHouse PigHouse SheepHouse Namespace: Animals.Housing Assembly: cs.temp.dll.dll Syntax public class AnimalHouseBase : SpritableBase Fields animalType Declaration protected MainAnimalsEnum animalType Field Value Type Description MainAnimalsEnum GetAnimalHousingManager Declaration protected AnimalHousingManager GetAnimalHousingManager Field Value Type Description AnimalHousingManager OnOpenUI Declaration public static Action<string, Vector2> OnOpenUI Field Value Type Description Action<, ><string, Vector2> spriteRenderer Declaration protected SpriteRenderer spriteRenderer Field Value Type Description SpriteRenderer Properties GetAnimalType Declaration public MainAnimalsEnum GetAnimalType { get; } Property Value Type Description MainAnimalsEnum Methods AssignSprite(SideEnum) Declaration public override void AssignSprite(SideEnum side) Parameters Type Name Description SideEnum side Construct(IManagerData) Declaration public void Construct(IManagerData managerData) Parameters Type Name Description IManagerData managerData Interact(CallbackContext) Declaration protected override void Interact(InputAction.CallbackContext _) Parameters Type Name Description InputAction.CallbackContext _ ShowOpenSprite() Declaration protected virtual void ShowOpenSprite()"
  },
  "api/Animals.Housing.BeeHive.BeeHive.html": {
    "href": "api/Animals.Housing.BeeHive.BeeHive.html",
    "title": "Class BeeHive | Harvest Grove code documentation",
    "keywords": "Class BeeHive Inheritance object AnimalHouseBase BeeHive Inherited Members AnimalHouseBase.OnOpenUI AnimalHouseBase.GetAnimalType AnimalHouseBase.spriteRenderer AnimalHouseBase.animalType AnimalHouseBase.GetAnimalHousingManager AnimalHouseBase.Construct(IManagerData) AnimalHouseBase.Interact(InputAction.CallbackContext) AnimalHouseBase.ShowOpenSprite() Namespace: Animals.Housing.BeeHive Assembly: cs.temp.dll.dll Syntax public class BeeHive : AnimalHouseBase Fields OnHoneyAdded Declaration public static Action<Vector3, bool> OnHoneyAdded Field Value Type Description Action<, ><Vector3, bool> Methods AddJar() Add jar to the honey manager and update to the correct sprite Declaration public void AddJar() AssignSprite(SideEnum) Declaration public override void AssignSprite(SideEnum side) Parameters Type Name Description SideEnum side Overrides AnimalHouseBase.AssignSprite(SideEnum) CanAddJar() Check if the player can even add the jar Declaration public bool CanAddJar() Returns Type Description bool"
  },
  "api/Animals.Housing.BeeHive.CollectingHoneyStatusEnum.html": {
    "href": "api/Animals.Housing.BeeHive.CollectingHoneyStatusEnum.html",
    "title": "Enum CollectingHoneyStatusEnum | Harvest Grove code documentation",
    "keywords": "Enum CollectingHoneyStatusEnum Namespace: Animals.Housing.BeeHive Assembly: cs.temp.dll.dll Syntax public enum CollectingHoneyStatusEnum Fields Name Description BothCollecting BothComplete BothNull FirstCollectingSecondComplete FirstCollectingSecondNull FirstCompleteSecondCollecting FirstCompleteSecondNull FirstNullSecondCollecting FirstNullSecondComplete"
  },
  "api/Animals.Housing.BeeHive.HoneyData.html": {
    "href": "api/Animals.Housing.BeeHive.HoneyData.html",
    "title": "Class HoneyData | Harvest Grove code documentation",
    "keywords": "Class HoneyData Inheritance object HoneyData Namespace: Animals.Housing.BeeHive Assembly: cs.temp.dll.dll Syntax public class HoneyData : IComparable<HoneyData> Constructors HoneyData() Declaration public HoneyData() HoneyData(Vector3, TimeSpan, bool) Declaration public HoneyData(Vector3 beeHivePosition, TimeSpan finishTime, bool isFirstJar) Parameters Type Name Description Vector3 beeHivePosition TimeSpan finishTime bool isFirstJar Properties FinishTime Declaration public TimeSpan FinishTime { get; set; } Property Value Type Description TimeSpan Id Declaration public Guid Id { get; set; } Property Value Type Description Guid IsFirstJar Declaration public bool IsFirstJar { get; set; } Property Value Type Description bool IsReady Declaration public bool IsReady { get; set; } Property Value Type Description bool Position Declaration public Vector2 Position { get; set; } Property Value Type Description Vector2 Methods CompareTo(HoneyData) Declaration public int CompareTo(HoneyData other) Parameters Type Name Description HoneyData other Returns Type Description int"
  },
  "api/Animals.Housing.BeeHive.HoneyManager.html": {
    "href": "api/Animals.Housing.BeeHive.HoneyManager.html",
    "title": "Class HoneyManager | Harvest Grove code documentation",
    "keywords": "Class HoneyManager Class is taking care of updating honey Inheritance object HoneyManager Implements ISavableWithPath Namespace: Animals.Housing.BeeHive Assembly: cs.temp.dll.dll Syntax public class HoneyManager : MonoBehaviour, ISavableWithPath Fields OnHoneyReady Declaration public static Action<Vector2, bool> OnHoneyReady Field Value Type Description Action<, ><Vector2, bool> OnRemoveHoney Declaration public static Action<Vector2> OnRemoveHoney Field Value Type Description Action<><Vector2> Properties Priority Declaration public int Priority { get; } Property Value Type Description int Methods Construct(IManagerData, ITileMapService, IPlayerData) Declaration public void Construct(IManagerData managerData, ITileMapService tileMapService, IPlayerData playerData) Parameters Type Name Description IManagerData managerData ITileMapService tileMapService IPlayerData playerData Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask SavingPath(IslandsDictionaryNames) Declaration public string SavingPath(IslandsDictionaryNames currentIsland) Parameters Type Name Description IslandsDictionaryNames currentIsland Returns Type Description string Implements ISavableWithPath"
  },
  "api/Animals.Housing.BeeHive.html": {
    "href": "api/Animals.Housing.BeeHive.html",
    "title": "Namespace Animals.Housing.BeeHive | Harvest Grove code documentation",
    "keywords": "Namespace Animals.Housing.BeeHive Classes BeeHive HoneyData HoneyManager Class is taking care of updating honey Enums CollectingHoneyStatusEnum"
  },
  "api/Animals.Housing.ChickenHouse.html": {
    "href": "api/Animals.Housing.ChickenHouse.html",
    "title": "Class ChickenHouse | Harvest Grove code documentation",
    "keywords": "Class ChickenHouse Inheritance object AnimalHouseBase ChickenHouse Implements IAnimalHouseClosable Inherited Members AnimalHouseBase.OnOpenUI AnimalHouseBase.GetAnimalType AnimalHouseBase.spriteRenderer AnimalHouseBase.animalType AnimalHouseBase.GetAnimalHousingManager AnimalHouseBase.Construct(IManagerData) AnimalHouseBase.Interact(InputAction.CallbackContext) Namespace: Animals.Housing Assembly: cs.temp.dll.dll Syntax public class ChickenHouse : AnimalHouseBase, IAnimalHouseClosable Methods AssignSprite(SideEnum) Declaration public override void AssignSprite(SideEnum side) Parameters Type Name Description SideEnum side Overrides AnimalHouseBase.AssignSprite(SideEnum) Construct(IPlayerTransfromService) Declaration public void Construct(IPlayerTransfromService playerTransfromService) Parameters Type Name Description IPlayerTransfromService playerTransfromService ReturnCorrectSprite() Declaration public void ReturnCorrectSprite() ShowOpenSprite() Declaration protected override void ShowOpenSprite() Overrides AnimalHouseBase.ShowOpenSprite() Implements IAnimalHouseClosable"
  },
  "api/Animals.Housing.CowHouse.html": {
    "href": "api/Animals.Housing.CowHouse.html",
    "title": "Class CowHouse | Harvest Grove code documentation",
    "keywords": "Class CowHouse Inheritance object AnimalHouseBase CowHouse Inherited Members AnimalHouseBase.OnOpenUI AnimalHouseBase.GetAnimalType AnimalHouseBase.spriteRenderer AnimalHouseBase.animalType AnimalHouseBase.GetAnimalHousingManager AnimalHouseBase.Construct(IManagerData) AnimalHouseBase.Interact(InputAction.CallbackContext) AnimalHouseBase.ShowOpenSprite() Namespace: Animals.Housing Assembly: cs.temp.dll.dll Syntax public class CowHouse : AnimalHouseBase Methods AssignSprite(SideEnum) Declaration public override void AssignSprite(SideEnum side) Parameters Type Name Description SideEnum side Overrides AnimalHouseBase.AssignSprite(SideEnum)"
  },
  "api/Animals.Housing.html": {
    "href": "api/Animals.Housing.html",
    "title": "Namespace Animals.Housing | Harvest Grove code documentation",
    "keywords": "Namespace Animals.Housing Classes AnimalHouseBase ChickenHouse CowHouse OstrichHouse PigHouse SheepHouse Interfaces IAnimalHouseClosable"
  },
  "api/Animals.Housing.IAnimalHouseClosable.html": {
    "href": "api/Animals.Housing.IAnimalHouseClosable.html",
    "title": "Interface IAnimalHouseClosable | Harvest Grove code documentation",
    "keywords": "Interface IAnimalHouseClosable Namespace: Animals.Housing Assembly: cs.temp.dll.dll Syntax public interface IAnimalHouseClosable Methods ReturnCorrectSprite() Declaration void ReturnCorrectSprite()"
  },
  "api/Animals.Housing.OstrichHouse.html": {
    "href": "api/Animals.Housing.OstrichHouse.html",
    "title": "Class OstrichHouse | Harvest Grove code documentation",
    "keywords": "Class OstrichHouse Inheritance object AnimalHouseBase OstrichHouse Inherited Members AnimalHouseBase.OnOpenUI AnimalHouseBase.GetAnimalType AnimalHouseBase.spriteRenderer AnimalHouseBase.animalType AnimalHouseBase.GetAnimalHousingManager AnimalHouseBase.Construct(IManagerData) AnimalHouseBase.AssignSprite(SideEnum) AnimalHouseBase.Interact(InputAction.CallbackContext) AnimalHouseBase.ShowOpenSprite() Namespace: Animals.Housing Assembly: cs.temp.dll.dll Syntax public class OstrichHouse : AnimalHouseBase"
  },
  "api/Animals.Housing.PigHouse.html": {
    "href": "api/Animals.Housing.PigHouse.html",
    "title": "Class PigHouse | Harvest Grove code documentation",
    "keywords": "Class PigHouse Inheritance object AnimalHouseBase PigHouse Implements IAnimalHouseClosable Inherited Members AnimalHouseBase.OnOpenUI AnimalHouseBase.GetAnimalType AnimalHouseBase.spriteRenderer AnimalHouseBase.animalType AnimalHouseBase.GetAnimalHousingManager AnimalHouseBase.Construct(IManagerData) AnimalHouseBase.Interact(InputAction.CallbackContext) Namespace: Animals.Housing Assembly: cs.temp.dll.dll Syntax public class PigHouse : AnimalHouseBase, IAnimalHouseClosable Methods AssignSprite(SideEnum) Declaration public override void AssignSprite(SideEnum side) Parameters Type Name Description SideEnum side Overrides AnimalHouseBase.AssignSprite(SideEnum) ReturnCorrectSprite() Declaration public void ReturnCorrectSprite() ShowOpenSprite() Declaration protected override void ShowOpenSprite() Overrides AnimalHouseBase.ShowOpenSprite() Implements IAnimalHouseClosable"
  },
  "api/Animals.Housing.SheepHouse.html": {
    "href": "api/Animals.Housing.SheepHouse.html",
    "title": "Class SheepHouse | Harvest Grove code documentation",
    "keywords": "Class SheepHouse Inheritance object AnimalHouseBase SheepHouse Inherited Members AnimalHouseBase.OnOpenUI AnimalHouseBase.GetAnimalType AnimalHouseBase.spriteRenderer AnimalHouseBase.animalType AnimalHouseBase.GetAnimalHousingManager AnimalHouseBase.Construct(IManagerData) AnimalHouseBase.Interact(InputAction.CallbackContext) AnimalHouseBase.ShowOpenSprite() Namespace: Animals.Housing Assembly: cs.temp.dll.dll Syntax public class SheepHouse : AnimalHouseBase Methods AssignSprite(SideEnum) Declaration public override void AssignSprite(SideEnum side) Parameters Type Name Description SideEnum side Overrides AnimalHouseBase.AssignSprite(SideEnum)"
  },
  "api/Animals.html": {
    "href": "api/Animals.html",
    "title": "Namespace Animals | Harvest Grove code documentation",
    "keywords": "Namespace Animals Classes AnimalsHungry Interfaces IFeedSource Enums DeathCaseEnum"
  },
  "api/Animals.IFeedSource.html": {
    "href": "api/Animals.IFeedSource.html",
    "title": "Interface IFeedSource | Harvest Grove code documentation",
    "keywords": "Interface IFeedSource Namespace: Animals Assembly: cs.temp.dll.dll Syntax public interface IFeedSource Methods DecreaseFeed(Vector2, ushort, FeedType) Declaration void DecreaseFeed(Vector2 position, ushort feedAmount, FeedType feedType) Parameters Type Name Description Vector2 position ushort feedAmount FeedType feedType DecrementAnimalsGoingAmount(Vector2) Declaration void DecrementAnimalsGoingAmount(Vector2 position) Parameters Type Name Description Vector2 position IncrementAnimalsGoingAmount(Vector2) Declaration void IncrementAnimalsGoingAmount(Vector2 position) Parameters Type Name Description Vector2 position"
  },
  "api/Animals.Mating.html": {
    "href": "api/Animals.Mating.html",
    "title": "Namespace Animals.Mating | Harvest Grove code documentation",
    "keywords": "Namespace Animals.Mating Classes MatingManager"
  },
  "api/Animals.Mating.MatingManager.html": {
    "href": "api/Animals.Mating.MatingManager.html",
    "title": "Class MatingManager | Harvest Grove code documentation",
    "keywords": "Class MatingManager Inheritance object MatingManager Namespace: Animals.Mating Assembly: cs.temp.dll.dll Syntax public class MatingManager : MonoBehaviour Fields OnAnimalsBred Declaration public static Action OnAnimalsBred Field Value Type Description Action Methods AssignFood(ConsumableSO) Declaration public void AssignFood(ConsumableSO food) Parameters Type Name Description ConsumableSO food Construct(IManagerData, IGameData, InputsMap) Declaration public void Construct(IManagerData managerData, IGameData gameData, InputsMap inputsMap) Parameters Type Name Description IManagerData managerData IGameData gameData InputsMap inputsMap"
  },
  "api/Animals.SOs.AnimalFoodType.html": {
    "href": "api/Animals.SOs.AnimalFoodType.html",
    "title": "Enum AnimalFoodType | Harvest Grove code documentation",
    "keywords": "Enum AnimalFoodType Namespace: Animals.SOs Assembly: cs.temp.dll.dll Syntax public enum AnimalFoodType Fields Name Description BeeFood ChickenFood Herbivore"
  },
  "api/Animals.SOs.AnimalInfo.html": {
    "href": "api/Animals.SOs.AnimalInfo.html",
    "title": "Class AnimalInfo | Harvest Grove code documentation",
    "keywords": "Class AnimalInfo Inheritance object AnimalInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Animals.SOs Assembly: cs.temp.dll.dll Syntax [Serializable] public class AnimalInfo Fields AnimalHouseConstruction Declaration public ConstructionSO AnimalHouseConstruction Field Value Type Description ConstructionSO Food Declaration public AnimalFoodType Food Field Value Type Description AnimalFoodType MainAnimalType Declaration public MainAnimalsEnum MainAnimalType Field Value Type Description MainAnimalsEnum MatingFood Declaration public InventoryItemData MatingFood Field Value Type Description InventoryItemData MaximumAnimalsInPen Declaration public byte MaximumAnimalsInPen Field Value Type Description byte Scale Declaration public float Scale Field Value Type Description float SecondaryAnimalType Declaration public SecondaryAnimalsEnum SecondaryAnimalType Field Value Type Description SecondaryAnimalsEnum Stages Declaration public List<AnimalStage> Stages Field Value Type Description List<><AnimalStage>"
  },
  "api/Animals.SOs.AnimalsDatabase.html": {
    "href": "api/Animals.SOs.AnimalsDatabase.html",
    "title": "Class AnimalsDatabase | Harvest Grove code documentation",
    "keywords": "Class AnimalsDatabase Inheritance object AnimalsDatabase Namespace: Animals.SOs Assembly: cs.temp.dll.dll Syntax public class AnimalsDatabase : ScriptableObject Fields Animals Declaration public List<AnimalInfo> Animals Field Value Type Description List<><AnimalInfo> Methods AvailableAnimalsForMating(InventoryItemData) Declaration public List<MainAnimalsEnum> AvailableAnimalsForMating(InventoryItemData food) Parameters Type Name Description InventoryItemData food Returns Type Description List<><MainAnimalsEnum> GetAnimalFoodType(MainAnimalsEnum) Get the animal food type {based on its type} Declaration public AnimalFoodType GetAnimalFoodType(MainAnimalsEnum animal) Parameters Type Name Description MainAnimalsEnum animal Returns Type Description AnimalFoodType GetAnimalSprite(MainAnimalsEnum, SecondaryAnimalsEnum, AnimalStagesEnum) Declaration public Sprite GetAnimalSprite(MainAnimalsEnum animal, SecondaryAnimalsEnum secondary, AnimalStagesEnum stage) Parameters Type Name Description MainAnimalsEnum animal SecondaryAnimalsEnum secondary AnimalStagesEnum stage Returns Type Description Sprite GetAnimator(MainAnimalsEnum, AnimalStagesEnum) Declaration public RuntimeAnimatorController GetAnimator(MainAnimalsEnum animal, AnimalStagesEnum stage) Parameters Type Name Description MainAnimalsEnum animal AnimalStagesEnum stage Returns Type Description RuntimeAnimatorController GetBabyGrowthDays(MainAnimalsEnum) Returns how many days the animal is baby Declaration public byte GetBabyGrowthDays(MainAnimalsEnum animal) Parameters Type Name Description MainAnimalsEnum animal Returns Type Description byte GetConstruction(MainAnimalsEnum) Declaration public ConstructionSO GetConstruction(MainAnimalsEnum animal) Parameters Type Name Description MainAnimalsEnum animal Returns Type Description ConstructionSO GetDaysWithoutFood(MainAnimalsEnum, AnimalStagesEnum) How many days without food the animal can survive Declaration public byte GetDaysWithoutFood(MainAnimalsEnum animal, AnimalStagesEnum stage) Parameters Type Name Description MainAnimalsEnum animal AnimalStagesEnum stage Returns Type Description byte GetDaysWithoutWater(MainAnimalsEnum, AnimalStagesEnum) How many days without water the animal can survive Declaration public byte GetDaysWithoutWater(MainAnimalsEnum animal, AnimalStagesEnum stage) Parameters Type Name Description MainAnimalsEnum animal AnimalStagesEnum stage Returns Type Description byte GetGivenItems(MainAnimalsEnum, AnimalStagesEnum, SecondaryAnimalsEnum) Which items the animal can give {based on its type} Declaration public List<ItemAndAmount> GetGivenItems(MainAnimalsEnum animal, AnimalStagesEnum stage, SecondaryAnimalsEnum secondary = SecondaryAnimalsEnum.None) Parameters Type Name Description MainAnimalsEnum animal AnimalStagesEnum stage SecondaryAnimalsEnum secondary Returns Type Description List<><ItemAndAmount> GetMatingFood(MainAnimalsEnum) Get the animal mating food {based on its type} Declaration public InventoryItemData GetMatingFood(MainAnimalsEnum animal) Parameters Type Name Description MainAnimalsEnum animal Returns Type Description InventoryItemData GetMaximumAnimalsInPen(MainAnimalsEnum) Get the maximum amount of animals in the pen {based on its type} Declaration public byte GetMaximumAnimalsInPen(MainAnimalsEnum animal) Parameters Type Name Description MainAnimalsEnum animal Returns Type Description byte GetScale(MainAnimalsEnum) Declaration public float GetScale(MainAnimalsEnum animal) Parameters Type Name Description MainAnimalsEnum animal Returns Type Description float GetSellPrice(MainAnimalsEnum, AnimalStagesEnum, SecondaryAnimalsEnum) Get the sell price of the animal {based on its type and stage} Declaration public ushort GetSellPrice(MainAnimalsEnum animal, AnimalStagesEnum stage, SecondaryAnimalsEnum secondary = SecondaryAnimalsEnum.None) Parameters Type Name Description MainAnimalsEnum animal AnimalStagesEnum stage SecondaryAnimalsEnum secondary Returns Type Description ushort GetStage(MainAnimalsEnum, SecondaryAnimalsEnum, AnimalStagesEnum) Declaration public AnimalStage GetStage(MainAnimalsEnum animal, SecondaryAnimalsEnum secondary, AnimalStagesEnum stage) Parameters Type Name Description MainAnimalsEnum animal SecondaryAnimalsEnum secondary AnimalStagesEnum stage Returns Type Description AnimalStage GetStages(MainAnimalsEnum, SecondaryAnimalsEnum) Which stages of the animal {based on its type} Declaration public List<AnimalStage> GetStages(MainAnimalsEnum animal, SecondaryAnimalsEnum secondary = SecondaryAnimalsEnum.None) Parameters Type Name Description MainAnimalsEnum animal SecondaryAnimalsEnum secondary Returns Type Description List<><AnimalStage>"
  },
  "api/Animals.SOs.AnimalStage.html": {
    "href": "api/Animals.SOs.AnimalStage.html",
    "title": "Class AnimalStage | Harvest Grove code documentation",
    "keywords": "Class AnimalStage Inheritance object AnimalStage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Animals.SOs Assembly: cs.temp.dll.dll Syntax [Serializable] public class AnimalStage Fields Animator Declaration public RuntimeAnimatorController Animator Field Value Type Description RuntimeAnimatorController BuyPrice Declaration public ushort BuyPrice Field Value Type Description ushort DaysToGrow Declaration public byte DaysToGrow Field Value Type Description byte GivenItems Declaration public List<ItemAndAmount> GivenItems Field Value Type Description List<><ItemAndAmount> GivesItems Declaration public bool GivesItems Field Value Type Description bool MaxDaysWithoutFood Declaration public byte MaxDaysWithoutFood Field Value Type Description byte MaxDaysWithoutWater Declaration public byte MaxDaysWithoutWater Field Value Type Description byte SellPrice Declaration public ushort SellPrice Field Value Type Description ushort Sprite Declaration public Sprite Sprite Field Value Type Description Sprite StageType Declaration public AnimalStagesEnum StageType Field Value Type Description AnimalStagesEnum"
  },
  "api/Animals.SOs.AnimalStagesEnum.html": {
    "href": "api/Animals.SOs.AnimalStagesEnum.html",
    "title": "Enum AnimalStagesEnum | Harvest Grove code documentation",
    "keywords": "Enum AnimalStagesEnum Namespace: Animals.SOs Assembly: cs.temp.dll.dll Syntax public enum AnimalStagesEnum Fields Name Description Adult Baby"
  },
  "api/Animals.SOs.html": {
    "href": "api/Animals.SOs.html",
    "title": "Namespace Animals.SOs | Harvest Grove code documentation",
    "keywords": "Namespace Animals.SOs Classes AnimalInfo AnimalsDatabase AnimalStage Enums AnimalFoodType AnimalStagesEnum MainAnimalsEnum SecondaryAnimalsEnum"
  },
  "api/Animals.SOs.MainAnimalsEnum.html": {
    "href": "api/Animals.SOs.MainAnimalsEnum.html",
    "title": "Enum MainAnimalsEnum | Harvest Grove code documentation",
    "keywords": "Enum MainAnimalsEnum Namespace: Animals.SOs Assembly: cs.temp.dll.dll Syntax public enum MainAnimalsEnum Fields Name Description Bee Chicken Cow Deer None Ostrich Pig Sheep"
  },
  "api/Animals.SOs.SecondaryAnimalsEnum.html": {
    "href": "api/Animals.SOs.SecondaryAnimalsEnum.html",
    "title": "Enum SecondaryAnimalsEnum | Harvest Grove code documentation",
    "keywords": "Enum SecondaryAnimalsEnum Namespace: Animals.SOs Assembly: cs.temp.dll.dll Syntax public enum SecondaryAnimalsEnum Fields Name Description BlackChicken BlackCow BrownChicken BrownCow None WhiteChicken"
  },
  "api/Animals.Spawner.AnimalGameobjectInfo.html": {
    "href": "api/Animals.Spawner.AnimalGameobjectInfo.html",
    "title": "Class AnimalGameobjectInfo | Harvest Grove code documentation",
    "keywords": "Class AnimalGameobjectInfo Some info which should be put in the \"animal gameobject\" Inheritance object AnimalGameobjectInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Animals.Spawner Assembly: cs.temp.dll.dll Syntax [Serializable] public class AnimalGameobjectInfo Fields AnimalType Declaration public MainAnimalsEnum AnimalType Field Value Type Description MainAnimalsEnum HomePosition Declaration public Vector2 HomePosition Field Value Type Description Vector2 ID Declaration public int ID Field Value Type Description int Name Declaration public string Name Field Value Type Description string Stage Declaration public AnimalStagesEnum Stage Field Value Type Description AnimalStagesEnum"
  },
  "api/Animals.Spawner.html": {
    "href": "api/Animals.Spawner.html",
    "title": "Namespace Animals.Spawner | Harvest Grove code documentation",
    "keywords": "Namespace Animals.Spawner Classes AnimalGameobjectInfo Some info which should be put in the \"animal gameobject\" Spawner SpawnerList"
  },
  "api/Animals.Spawner.Spawner.html": {
    "href": "api/Animals.Spawner.Spawner.html",
    "title": "Class Spawner | Harvest Grove code documentation",
    "keywords": "Class Spawner Inheritance object Spawner Implements ISavableWithPath Namespace: Animals.Spawner Assembly: cs.temp.dll.dll Syntax public class Spawner : MonoBehaviour, ISavableWithPath Fields OnAddAnimal Declaration public static Action<int, MainAnimalsEnum, Vector2, AnimalStagesEnum, string> OnAddAnimal Field Value Type Description Action<, , , , ><int, MainAnimalsEnum, Vector2, AnimalStagesEnum, string> OnGetAnimalCount Declaration public static Func<ushort> OnGetAnimalCount Field Value Type Description Func<><ushort> OnRemoveAnimal Declaration public static Action<int, ObjectPooling> OnRemoveAnimal Field Value Type Description Action<, ><int, ObjectPooling> OnSpawnedValueChange Declaration public static Action OnSpawnedValueChange Field Value Type Description Action OnSpawnSpecificAnimal Declaration public static Func<int, GameObject> OnSpawnSpecificAnimal Field Value Type Description Func<, ><int, GameObject> Properties Priority Declaration public int Priority { get; } Property Value Type Description int Methods Construct(IOtherData, IGameData) Declaration public void Construct(IOtherData otherData, IGameData gameData) Parameters Type Name Description IOtherData otherData IGameData gameData Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask SavingPath(IslandsDictionaryNames) Declaration public string SavingPath(IslandsDictionaryNames currentIsland) Parameters Type Name Description IslandsDictionaryNames currentIsland Returns Type Description string SpawnAllAnimals() Initiliazes all animals near their home position Declaration public void SpawnAllAnimals() Implements ISavableWithPath"
  },
  "api/Animals.Spawner.SpawnerList.html": {
    "href": "api/Animals.Spawner.SpawnerList.html",
    "title": "Class SpawnerList | Harvest Grove code documentation",
    "keywords": "Class SpawnerList Inheritance object SpawnerList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Animals.Spawner Assembly: cs.temp.dll.dll Syntax public class SpawnerList Fields AnimalGameobjects This dictionary is used for faster access of IDs and gameobjects {i.e. animals} Declaration public Dictionary<int, FarmAnimal_AI> AnimalGameobjects Field Value Type Description Dictionary<, ><int, FarmAnimal_AI> AvailableAnimals Animal, which can be spawned Declaration public Dictionary<int, AnimalGameobjectInfo> AvailableAnimals Field Value Type Description Dictionary<, ><int, AnimalGameobjectInfo> Methods AddToList(int, AnimalGameobjectInfo) Declaration public void AddToList(int id, AnimalGameobjectInfo info) Parameters Type Name Description int id AnimalGameobjectInfo info AddToList(int, MainAnimalsEnum, Vector2, AnimalStagesEnum, string) Adds a new animal to the list of spawnable animals Declaration public void AddToList(int id, MainAnimalsEnum animalType, Vector2 homePos, AnimalStagesEnum stage, string name) Parameters Type Name Description int id MainAnimalsEnum animalType Vector2 homePos AnimalStagesEnum stage string name RemoveAnimal(int, ObjectPooling) Remove the animal from the spawner list Declaration public void RemoveAnimal(int id, ObjectPooling objectPooling) Parameters Type Name Description int id ObjectPooling objectPooling RenameAnimal(int, string) Declaration public void RenameAnimal(int id, string name) Parameters Type Name Description int id string name"
  },
  "api/Animals.SpritesHolder.BeeHiveSpritesSO.html": {
    "href": "api/Animals.SpritesHolder.BeeHiveSpritesSO.html",
    "title": "Class BeeHiveSpritesSO | Harvest Grove code documentation",
    "keywords": "Class BeeHiveSpritesSO Inheritance object BeeHiveSpritesSO Namespace: Animals.SpritesHolder Assembly: cs.temp.dll.dll Syntax public class BeeHiveSpritesSO : ScriptableObject Fields DownBothCollecting Declaration public Sprite DownBothCollecting Field Value Type Description Sprite DownBothComplete Declaration public Sprite DownBothComplete Field Value Type Description Sprite DownFirstCollectingSecondComplete Declaration public Sprite DownFirstCollectingSecondComplete Field Value Type Description Sprite DownFirstCollectingSecondNull Declaration public Sprite DownFirstCollectingSecondNull Field Value Type Description Sprite DownFirstCompleteSecondCollecting Declaration public Sprite DownFirstCompleteSecondCollecting Field Value Type Description Sprite DownFirstCompleteSecondNull Declaration public Sprite DownFirstCompleteSecondNull Field Value Type Description Sprite DownFirstNullSecondCollecting Declaration public Sprite DownFirstNullSecondCollecting Field Value Type Description Sprite DownFirstNullSecondComplete Declaration public Sprite DownFirstNullSecondComplete Field Value Type Description Sprite LeftBothCollecting Declaration public Sprite LeftBothCollecting Field Value Type Description Sprite LeftBothComplete Declaration public Sprite LeftBothComplete Field Value Type Description Sprite LeftFirstCollectingSecondComplete Declaration public Sprite LeftFirstCollectingSecondComplete Field Value Type Description Sprite LeftFirstCollectingSecondNull Declaration public Sprite LeftFirstCollectingSecondNull Field Value Type Description Sprite LeftFirstCompleteSecondCollecting Declaration public Sprite LeftFirstCompleteSecondCollecting Field Value Type Description Sprite LeftFirstCompleteSecondNull Declaration public Sprite LeftFirstCompleteSecondNull Field Value Type Description Sprite LeftFirstNullSecondCollecting Declaration public Sprite LeftFirstNullSecondCollecting Field Value Type Description Sprite LeftFirstNullSecondComplete Declaration public Sprite LeftFirstNullSecondComplete Field Value Type Description Sprite RightBothCollecting Declaration public Sprite RightBothCollecting Field Value Type Description Sprite RightBothComplete Declaration public Sprite RightBothComplete Field Value Type Description Sprite RightFirstCollectingSecondComplete Declaration public Sprite RightFirstCollectingSecondComplete Field Value Type Description Sprite RightFirstCollectingSecondNull Declaration public Sprite RightFirstCollectingSecondNull Field Value Type Description Sprite RightFirstCompleteSecondCollecting Declaration public Sprite RightFirstCompleteSecondCollecting Field Value Type Description Sprite RightFirstCompleteSecondNull Declaration public Sprite RightFirstCompleteSecondNull Field Value Type Description Sprite RightFirstNullSecondCollecting Declaration public Sprite RightFirstNullSecondCollecting Field Value Type Description Sprite RightFirstNullSecondComplete Declaration public Sprite RightFirstNullSecondComplete Field Value Type Description Sprite UpBothCollecting Declaration public Sprite UpBothCollecting Field Value Type Description Sprite UpBothComplete Declaration public Sprite UpBothComplete Field Value Type Description Sprite UpFirstCollectingSecondComplete Declaration public Sprite UpFirstCollectingSecondComplete Field Value Type Description Sprite UpFirstCollectingSecondNull Declaration public Sprite UpFirstCollectingSecondNull Field Value Type Description Sprite UpFirstCompleteSecondCollecting Declaration public Sprite UpFirstCompleteSecondCollecting Field Value Type Description Sprite UpFirstCompleteSecondNull Declaration public Sprite UpFirstCompleteSecondNull Field Value Type Description Sprite UpFirstNullSecondCollecting Declaration public Sprite UpFirstNullSecondCollecting Field Value Type Description Sprite UpFirstNullSecondComplete Declaration public Sprite UpFirstNullSecondComplete Field Value Type Description Sprite Methods GetSprite(SideEnum, CollectingHoneyStatusEnum) Declaration public Sprite GetSprite(SideEnum side, CollectingHoneyStatusEnum status) Parameters Type Name Description SideEnum side CollectingHoneyStatusEnum status Returns Type Description Sprite"
  },
  "api/Animals.SpritesHolder.ChickenPenSpritesSO.html": {
    "href": "api/Animals.SpritesHolder.ChickenPenSpritesSO.html",
    "title": "Class ChickenPenSpritesSO | Harvest Grove code documentation",
    "keywords": "Class ChickenPenSpritesSO Inheritance object ChickenPenSpritesSO Namespace: Animals.SpritesHolder Assembly: cs.temp.dll.dll Syntax public class ChickenPenSpritesSO : ScriptableObject Fields DownDownOpen Declaration public Sprite DownDownOpen Field Value Type Description Sprite DownTopOpen Declaration public Sprite DownTopOpen Field Value Type Description Sprite LeftLeftOpen Declaration public Sprite LeftLeftOpen Field Value Type Description Sprite LeftRightOpen Declaration public Sprite LeftRightOpen Field Value Type Description Sprite RightLeftOpen Declaration public Sprite RightLeftOpen Field Value Type Description Sprite RightRightOpen Declaration public Sprite RightRightOpen Field Value Type Description Sprite TopDownOpen Declaration public Sprite TopDownOpen Field Value Type Description Sprite TopTopOpen Declaration public Sprite TopTopOpen Field Value Type Description Sprite"
  },
  "api/Animals.SpritesHolder.html": {
    "href": "api/Animals.SpritesHolder.html",
    "title": "Namespace Animals.SpritesHolder | Harvest Grove code documentation",
    "keywords": "Namespace Animals.SpritesHolder Classes BeeHiveSpritesSO ChickenPenSpritesSO PigPenSpritesSO"
  },
  "api/Animals.SpritesHolder.PigPenSpritesSO.html": {
    "href": "api/Animals.SpritesHolder.PigPenSpritesSO.html",
    "title": "Class PigPenSpritesSO | Harvest Grove code documentation",
    "keywords": "Class PigPenSpritesSO Inheritance object PigPenSpritesSO Namespace: Animals.SpritesHolder Assembly: cs.temp.dll.dll Syntax public class PigPenSpritesSO : ScriptableObject Fields OpenDown Declaration public Sprite OpenDown Field Value Type Description Sprite OpenLeft Declaration public Sprite OpenLeft Field Value Type Description Sprite OpenRight Declaration public Sprite OpenRight Field Value Type Description Sprite OpenUp Declaration public Sprite OpenUp Field Value Type Description Sprite ThingDown Declaration public Sprite ThingDown Field Value Type Description Sprite ThingLeft Declaration public Sprite ThingLeft Field Value Type Description Sprite ThingRight Declaration public Sprite ThingRight Field Value Type Description Sprite ThingUp Declaration public Sprite ThingUp Field Value Type Description Sprite"
  },
  "api/Animals.UI.AnimalHousingCell.html": {
    "href": "api/Animals.UI.AnimalHousingCell.html",
    "title": "Class AnimalHousingCell | Harvest Grove code documentation",
    "keywords": "Class AnimalHousingCell Inheritance object AnimalHousingCell Namespace: Animals.UI Assembly: cs.temp.dll.dll Syntax public class AnimalHousingCell : MonoBehaviour Fields OnAnimalSold Animal was sold, update the free slosts in the housing Declaration public static Action<int> OnAnimalSold Field Value Type Description Action<><int> Properties GetID Declaration public int GetID { get; } Property Value Type Description int Methods CheckSellBtn(bool) Set the sell button's interactable to false/true Declaration public void CheckSellBtn(bool activate) Parameters Type Name Description bool activate Construct(IManagerData, IGameData, IOtherData) Declaration public void Construct(IManagerData managerData, IGameData gameData, IOtherData otherData) Parameters Type Name Description IManagerData managerData IGameData gameData IOtherData otherData UpdateCell(AnimalHousingUI, Sprite, string, AnimalStagesEnum, MainAnimalsEnum, SecondaryAnimalsEnum, int, Vector2, string, bool) Update's the cell with new and correct info Declaration public void UpdateCell(AnimalHousingUI animalHousingUI, Sprite animalSprite, string daysOld, AnimalStagesEnum stage, MainAnimalsEnum animal, SecondaryAnimalsEnum secondary, int animalID, Vector2 animalHousePos, string name, bool canSellAnimal) Parameters Type Name Description AnimalHousingUI animalHousingUI Sprite animalSprite string daysOld AnimalStagesEnum stage MainAnimalsEnum animal SecondaryAnimalsEnum secondary int animalID Vector2 animalHousePos string name bool canSellAnimal UpdateName(string) Declaration public void UpdateName(string name) Parameters Type Name Description string name"
  },
  "api/Animals.UI.AnimalHousingUI.html": {
    "href": "api/Animals.UI.AnimalHousingUI.html",
    "title": "Class AnimalHousingUI | Harvest Grove code documentation",
    "keywords": "Class AnimalHousingUI Inheritance object AnimalHousingUI Namespace: Animals.UI Assembly: cs.temp.dll.dll Syntax public class AnimalHousingUI : MonoBehaviour Fields IsOpened Declaration public static bool IsOpened Field Value Type Description bool OnHousingInfoClosed Declaration public static Action OnHousingInfoClosed Field Value Type Description Action OnNameChanged Declaration public static Action<int, string> OnNameChanged Field Value Type Description Action<, ><int, string> Properties CanOpen Declaration public static bool CanOpen { get; } Property Value Type Description bool Methods CheckSellBtn() Check if the sell button in the cells can be interactable or not Declaration public void CheckSellBtn() CollectAllItems() Method is on the button, which can collect all the items. if there's no space in the iventory, it will add as many items as possible and the rest will be spawned around the player Declaration public void CollectAllItems() Construct(IManagerData, IGameData, InputsMap) Declaration public void Construct(IManagerData managerData, IGameData gameData, InputsMap inputsMap) Parameters Type Name Description IManagerData managerData IGameData gameData InputsMap inputsMap EnableRenameCanvas(AnimalHousingCell) Declaration public void EnableRenameCanvas(AnimalHousingCell cell) Parameters Type Name Description AnimalHousingCell cell SetOpeningHousingUI(bool) Declaration public void SetOpeningHousingUI(bool canBeOpened) Parameters Type Name Description bool canBeOpened"
  },
  "api/Animals.UI.GiveItemsToHouses.html": {
    "href": "api/Animals.UI.GiveItemsToHouses.html",
    "title": "Class GiveItemsToHouses | Harvest Grove code documentation",
    "keywords": "Class GiveItemsToHouses Inheritance object GiveItemsToHouses Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Animals.UI Assembly: cs.temp.dll.dll Syntax [Serializable] public class GiveItemsToHouses Methods GiveItems(AnimalHousingManager, AnimalsDatabase) Iterates over all animal housings and animals and give the items which animals should give Declaration public UniTask GiveItems(AnimalHousingManager animalHousingManager, AnimalsDatabase animalsDatabase) Parameters Type Name Description AnimalHousingManager animalHousingManager AnimalsDatabase animalsDatabase Returns Type Description UniTask"
  },
  "api/Animals.UI.GiveItemsUI.html": {
    "href": "api/Animals.UI.GiveItemsUI.html",
    "title": "Class GiveItemsUI | Harvest Grove code documentation",
    "keywords": "Class GiveItemsUI Inheritance object GiveItemsUI Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Animals.UI Assembly: cs.temp.dll.dll Syntax public class GiveItemsUI Fields CollectAllBtn Declaration public Button CollectAllBtn Field Value Type Description Button ItemsBtns Declaration public Button[] ItemsBtns Field Value Type Description Button[] ItemsImages Declaration public Image[] ItemsImages Field Value Type Description Image[] ItemsTexts Declaration public TextMeshProUGUI[] ItemsTexts Field Value Type Description TextMeshProUGUI[] OnBeeItemDecreased The item - which is collected - is bee related Vector2 => beehive position bool => collected everything Declaration public static Action<Vector2, bool> OnBeeItemDecreased Field Value Type Description Action<, ><Vector2, bool> Methods CollectEverything(Vector2, AnimalHousingManager, AnimalHousingUI) Collect every item available in this housing If there's not enough space in the inventory, add as many items as possible and the rest leave untouched Declaration public void CollectEverything(Vector2 housingPosition, AnimalHousingManager animalHousingManager, AnimalHousingUI animalHousingUI) Parameters Type Name Description Vector2 housingPosition Position of the animal housing AnimalHousingManager animalHousingManager AnimalHousingUI animalHousingUI ResetGameobjects() Reset the items, so the correct items would be shown when the menu is opened Declaration public void ResetGameobjects() ShowItems(Vector2, AnimalHousingUI, AnimalHousingManager) Show the given items with sprite and amount Declaration public void ShowItems(Vector2 housingPosition, AnimalHousingUI animalHousingUI, AnimalHousingManager animalHousingManager) Parameters Type Name Description Vector2 housingPosition Animal house position AnimalHousingUI animalHousingUI AnimalHousingManager animalHousingManager"
  },
  "api/Animals.UI.html": {
    "href": "api/Animals.UI.html",
    "title": "Namespace Animals.UI | Harvest Grove code documentation",
    "keywords": "Namespace Animals.UI Classes AnimalHousingCell AnimalHousingUI GiveItemsToHouses GiveItemsUI"
  },
  "api/Audio.AudioManager.html": {
    "href": "api/Audio.AudioManager.html",
    "title": "Class AudioManager | Harvest Grove code documentation",
    "keywords": "Class AudioManager Inheritance object AudioManager Namespace: Audio Assembly: cs.temp.dll.dll Syntax public class AudioManager : MonoBehaviour Properties BirdSound Declaration public EventReference BirdSound { get; } Property Value Type Description EventReference ClickSound Declaration public EventReference ClickSound { get; } Property Value Type Description EventReference Instance Declaration public static AudioManager Instance { get; } Property Value Type Description AudioManager Music Declaration public EventReference Music { get; } Property Value Type Description EventReference RainSound Declaration public EventReference RainSound { get; } Property Value Type Description EventReference RunningSound Declaration public EventReference RunningSound { get; } Property Value Type Description EventReference WalkSound Declaration public EventReference WalkSound { get; } Property Value Type Description EventReference Methods CreateInstance(EventReference) Declaration public EventInstance CreateInstance(EventReference eventReference) Parameters Type Name Description EventReference eventReference Returns Type Description EventInstance PlayClickSound() Declaration public void PlayClickSound() PlayRainSound(bool) Declaration public void PlayRainSound(bool startRain) Parameters Type Name Description bool startRain SetMusicArea(IslandsDictionaryNames) Declaration public void SetMusicArea(IslandsDictionaryNames musicEnum) Parameters Type Name Description IslandsDictionaryNames musicEnum SetRainParemeter(float) Declaration public void SetRainParemeter(float rain) Parameters Type Name Description float rain"
  },
  "api/Audio.html": {
    "href": "api/Audio.html",
    "title": "Namespace Audio | Harvest Grove code documentation",
    "keywords": "Namespace Audio Classes AudioManager"
  },
  "api/BETA.FreeBottles.html": {
    "href": "api/BETA.FreeBottles.html",
    "title": "Class FreeBottles | Harvest Grove code documentation",
    "keywords": "Class FreeBottles Inheritance object FreeBottles Namespace: BETA Assembly: cs.temp.dll.dll Syntax public class FreeBottles : MonoBehaviour Fields ShouldInstantiateBottles Declaration public static bool ShouldInstantiateBottles Field Value Type Description bool Methods Construct(IInventoryService) Declaration public void Construct(IInventoryService inventoryService) Parameters Type Name Description IInventoryService inventoryService"
  },
  "api/BETA.html": {
    "href": "api/BETA.html",
    "title": "Namespace BETA | Harvest Grove code documentation",
    "keywords": "Namespace BETA Classes FreeBottles ItemShop MerchantBeta MerchantQuests MerchantShop MerchantShopUI"
  },
  "api/BETA.ItemShop.html": {
    "href": "api/BETA.ItemShop.html",
    "title": "Class ItemShop | Harvest Grove code documentation",
    "keywords": "Class ItemShop Inheritance object ItemShop Namespace: BETA Assembly: cs.temp.dll.dll Syntax public class ItemShop : MonoBehaviour Properties ItemData Declaration public InventoryItemData ItemData { get; set; } Property Value Type Description InventoryItemData ItemIcon Declaration public Image ItemIcon { get; } Property Value Type Description Image ItemName Declaration public TextMeshProUGUI ItemName { get; } Property Value Type Description TextMeshProUGUI ItemPriceText Declaration public TextMeshProUGUI ItemPriceText { get; } Property Value Type Description TextMeshProUGUI Methods BuyItem() Declaration public void BuyItem() Construct(IInventoryService) Declaration public void Construct(IInventoryService inventoryService) Parameters Type Name Description IInventoryService inventoryService SellItem() Declaration public void SellItem()"
  },
  "api/BETA.MerchantBeta.html": {
    "href": "api/BETA.MerchantBeta.html",
    "title": "Class MerchantBeta | Harvest Grove code documentation",
    "keywords": "Class MerchantBeta Inheritance object MerchantBeta Implements ITaskSavable Namespace: BETA Assembly: cs.temp.dll.dll Syntax public class MerchantBeta : MonoBehaviour, ITaskSavable Properties IsChatting Declaration public static bool IsChatting { get; set; } Property Value Type Description bool Priority Declaration public int Priority { get; } Property Value Type Description int Methods Construct(ITileMapService, IManagerData, IGameData) Declaration public void Construct(ITileMapService tileMapService, IManagerData managerData, IGameData gameData) Parameters Type Name Description ITileMapService tileMapService IManagerData managerData IGameData gameData Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Implements ITaskSavable"
  },
  "api/BETA.MerchantQuests.html": {
    "href": "api/BETA.MerchantQuests.html",
    "title": "Class MerchantQuests | Harvest Grove code documentation",
    "keywords": "Class MerchantQuests Inheritance object MerchantQuests Namespace: BETA Assembly: cs.temp.dll.dll Syntax public class MerchantQuests : MonoBehaviour Fields OnSetQuest Declaration public static Action OnSetQuest Field Value Type Description Action"
  },
  "api/BETA.MerchantShop.html": {
    "href": "api/BETA.MerchantShop.html",
    "title": "Class MerchantShop | Harvest Grove code documentation",
    "keywords": "Class MerchantShop Inheritance object MerchantShop Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: BETA Assembly: cs.temp.dll.dll Syntax public static class MerchantShop Methods BuyItem(InventoryItemData, IInventoryService) Declaration public static void BuyItem(InventoryItemData item, IInventoryService inventoryService) Parameters Type Name Description InventoryItemData item IInventoryService inventoryService GenerateRandomItemsForFoodSection(int) Declaration public static List<InventoryItemData> GenerateRandomItemsForFoodSection(int foodSectionSize) Parameters Type Name Description int foodSectionSize Returns Type Description List<><InventoryItemData> GenerateRandomItemsForUtilitySection(int) Declaration public static List<InventoryItemData> GenerateRandomItemsForUtilitySection(int utilitySectionSize) Parameters Type Name Description int utilitySectionSize Returns Type Description List<><InventoryItemData> SellItem(InventoryItemData, IInventoryService) Declaration public static void SellItem(InventoryItemData item, IInventoryService inventoryService) Parameters Type Name Description InventoryItemData item IInventoryService inventoryService"
  },
  "api/BETA.MerchantShopUI.html": {
    "href": "api/BETA.MerchantShopUI.html",
    "title": "Class MerchantShopUI | Harvest Grove code documentation",
    "keywords": "Class MerchantShopUI Inheritance object MerchantShopUI Namespace: BETA Assembly: cs.temp.dll.dll Syntax public class MerchantShopUI : MonoBehaviour Fields OnBalanceReload Declaration public static Action OnBalanceReload Field Value Type Description Action OnMerchantShopUIRequested Declaration public static Action OnMerchantShopUIRequested Field Value Type Description Action ShopUIOpened Declaration public static bool ShopUIOpened Field Value Type Description bool Methods Construct(ICanvasData) Declaration public void Construct(ICanvasData canvasData) Parameters Type Name Description ICanvasData canvasData DisableShopUI() Declaration public void DisableShopUI() ShowAnimalShop() Declaration public void ShowAnimalShop()"
  },
  "api/Buildable.Buildings.BuildingsBase.BuildingsType.html": {
    "href": "api/Buildable.Buildings.BuildingsBase.BuildingsType.html",
    "title": "Enum BuildingsType | Harvest Grove code documentation",
    "keywords": "Enum BuildingsType Namespace: Buildable.Buildings.BuildingsBase Assembly: cs.temp.dll.dll Syntax public enum BuildingsType Fields Name Description Barn Campfire FarmHouse Furnace GreenHouse None Sawmill Silo Windmill"
  },
  "api/Buildable.Buildings.BuildingsBase.FarmBuildingsBase.html": {
    "href": "api/Buildable.Buildings.BuildingsBase.FarmBuildingsBase.html",
    "title": "Class FarmBuildingsBase | Harvest Grove code documentation",
    "keywords": "Class FarmBuildingsBase Base for all the farm-based buildings Inheritance object SpritableBase FarmBuildingsBase FarmHouse Namespace: Buildable.Buildings.BuildingsBase Assembly: cs.temp.dll.dll Syntax public abstract class FarmBuildingsBase : SpritableBase Fields GetTimeManager Declaration protected TimeManager GetTimeManager Field Value Type Description TimeManager spriteRenderer Declaration protected SpriteRenderer spriteRenderer Field Value Type Description SpriteRenderer Properties GetBuildingsType Declaration public BuildingsType GetBuildingsType { get; } Property Value Type Description BuildingsType Methods AssignSprite(SideEnum) Declaration public override void AssignSprite(SideEnum side) Parameters Type Name Description SideEnum side Overrides SpritableBase.AssignSprite(SideEnum) Construct(IManagerData) Declaration public void Construct(IManagerData managerData) Parameters Type Name Description IManagerData managerData"
  },
  "api/Buildable.Buildings.BuildingsBase.html": {
    "href": "api/Buildable.Buildings.BuildingsBase.html",
    "title": "Namespace Buildable.Buildings.BuildingsBase | Harvest Grove code documentation",
    "keywords": "Namespace Buildable.Buildings.BuildingsBase Classes FarmBuildingsBase Base for all the farm-based buildings Enums BuildingsType"
  },
  "api/Buildable.Buildings.BuildingsBase.SpecifiedBuildings.FarmHouse.html": {
    "href": "api/Buildable.Buildings.BuildingsBase.SpecifiedBuildings.FarmHouse.html",
    "title": "Class FarmHouse | Harvest Grove code documentation",
    "keywords": "Class FarmHouse Inheritance object SpritableBase FarmBuildingsBase FarmHouse Inherited Members FarmBuildingsBase.GetBuildingsType FarmBuildingsBase.GetTimeManager FarmBuildingsBase.spriteRenderer FarmBuildingsBase.Construct(IManagerData) Namespace: Buildable.Buildings.BuildingsBase.SpecifiedBuildings Assembly: cs.temp.dll.dll Syntax public class FarmHouse : FarmBuildingsBase Fields campfireManagerSO Declaration protected CampfireManagerSO campfireManagerSO Field Value Type Description CampfireManagerSO IsSleeping Declaration public static bool IsSleeping Field Value Type Description bool mapBuildingsData Declaration protected MapBuildingsDataSO mapBuildingsData Field Value Type Description MapBuildingsDataSO OnPlayerSleep Declaration public static Action OnPlayerSleep Field Value Type Description Action OnPlayerWentSleep Player went sleep Declaration public static Func<int, int, UniTask> OnPlayerWentSleep Field Value Type Description Func<, , ><int, int, UniTask> playerData Declaration protected PlayerDataSO playerData Field Value Type Description PlayerDataSO playerMovement Declaration protected PlayerMovement playerMovement Field Value Type Description PlayerMovement sleepingImage Declaration protected Image sleepingImage Field Value Type Description Image sleepingUI Declaration protected GameObject sleepingUI Field Value Type Description GameObject Methods AssignSprite(SideEnum) Declaration public override void AssignSprite(SideEnum side) Parameters Type Name Description SideEnum side Overrides FarmBuildingsBase.AssignSprite(SideEnum) Construct(ICanvasData, IPlayerData, IManagerData, IGameData, InputsMap) Declaration public void Construct(ICanvasData canvasData, IPlayerData playerData, IManagerData managerData, IGameData gameData, InputsMap inputsMap) Parameters Type Name Description ICanvasData canvasData IPlayerData playerData IManagerData managerData IGameData gameData InputsMap inputsMap EndInteraction() Declaration public override void EndInteraction() Interact(CallbackContext) Declaration protected override void Interact(InputAction.CallbackContext _) Parameters Type Name Description InputAction.CallbackContext _ StartInteraction() Declaration public override void StartInteraction()"
  },
  "api/Buildable.Buildings.BuildingsBase.SpecifiedBuildings.FarmhouseSmoke.html": {
    "href": "api/Buildable.Buildings.BuildingsBase.SpecifiedBuildings.FarmhouseSmoke.html",
    "title": "Struct FarmhouseSmoke | Harvest Grove code documentation",
    "keywords": "Struct FarmhouseSmoke Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Buildable.Buildings.BuildingsBase.SpecifiedBuildings Assembly: cs.temp.dll.dll Syntax [Serializable] public struct FarmhouseSmoke Fields Position Declaration public Vector2 Position Field Value Type Description Vector2 Side Declaration public SideEnum Side Field Value Type Description SideEnum"
  },
  "api/Buildable.Buildings.BuildingsBase.SpecifiedBuildings.html": {
    "href": "api/Buildable.Buildings.BuildingsBase.SpecifiedBuildings.html",
    "title": "Namespace Buildable.Buildings.BuildingsBase.SpecifiedBuildings | Harvest Grove code documentation",
    "keywords": "Namespace Buildable.Buildings.BuildingsBase.SpecifiedBuildings Classes FarmHouse Structs FarmhouseSmoke"
  },
  "api/Buildable.Buildings.BuildingsShop.BuildingsShop.html": {
    "href": "api/Buildable.Buildings.BuildingsShop.BuildingsShop.html",
    "title": "Class BuildingsShop | Harvest Grove code documentation",
    "keywords": "Class BuildingsShop Inheritance object BuildingsShop Namespace: Buildable.Buildings.BuildingsShop Assembly: cs.temp.dll.dll Syntax public class BuildingsShop : MonoBehaviour Methods Close() Declaration public void Close()"
  },
  "api/Buildable.Buildings.BuildingsShop.html": {
    "href": "api/Buildable.Buildings.BuildingsShop.html",
    "title": "Namespace Buildable.Buildings.BuildingsShop | Harvest Grove code documentation",
    "keywords": "Namespace Buildable.Buildings.BuildingsShop Classes BuildingsShop"
  },
  "api/Buildable.Buildings.Campfire.Campfire.html": {
    "href": "api/Buildable.Buildings.Campfire.Campfire.html",
    "title": "Class Campfire | Harvest Grove code documentation",
    "keywords": "Class Campfire Inheritance object Campfire Namespace: Buildable.Buildings.Campfire Assembly: cs.temp.dll.dll Syntax public class Campfire : FarmHouse Fields OnRemoveCampfire Declaration public static Action<Vector2> OnRemoveCampfire Field Value Type Description Action<><Vector2> Methods AssignInfo(bool) Declaration public void AssignInfo(bool isLightened) Parameters Type Name Description bool isLightened EndInteraction() Declaration public override void EndInteraction() Interact(CallbackContext) Declaration protected override void Interact(InputAction.CallbackContext _) Parameters Type Name Description InputAction.CallbackContext _ StartInteraction() Declaration public override void StartInteraction()"
  },
  "api/Buildable.Buildings.Campfire.CampfireFireManager.html": {
    "href": "api/Buildable.Buildings.Campfire.CampfireFireManager.html",
    "title": "Class CampfireFireManager | Harvest Grove code documentation",
    "keywords": "Class CampfireFireManager Inheritance object CampfireFireManager Namespace: Buildable.Buildings.Campfire Assembly: cs.temp.dll.dll Syntax public class CampfireFireManager : MonoBehaviour Fields OnCampfireDestroyed Removes the campfire from all the necessary sources Declaration public static Action<Vector2Int> OnCampfireDestroyed Field Value Type Description Action<><Vector2Int> OnDistinguishFire Declaration public static Action<Vector2> OnDistinguishFire Field Value Type Description Action<><Vector2> OnStartFire Declaration public static Action<Vector2> OnStartFire Field Value Type Description Action<><Vector2> OnUpdateFire It either adds or updates the fire finish time returns: True if the fire could be updated; false otherwise Declaration public static Func<Vector2, ushort, bool> OnUpdateFire Field Value Type Description Func<, , ><Vector2, ushort, bool> Methods Construct(IManagerData) Declaration public void Construct(IManagerData managerData) Parameters Type Name Description IManagerData managerData"
  },
  "api/Buildable.Buildings.Campfire.html": {
    "href": "api/Buildable.Buildings.Campfire.html",
    "title": "Namespace Buildable.Buildings.Campfire | Harvest Grove code documentation",
    "keywords": "Namespace Buildable.Buildings.Campfire Classes Campfire CampfireFireManager"
  },
  "api/Buildable.Buildings.Destroyable.html": {
    "href": "api/Buildable.Buildings.Destroyable.html",
    "title": "Class Destroyable | Harvest Grove code documentation",
    "keywords": "Class Destroyable Inheritance object Destroyable Namespace: Buildable.Buildings Assembly: cs.temp.dll.dll Syntax public class Destroyable : ScriptableObject Fields Droppables Declaration public InventoryItemData[] Droppables Field Value Type Description InventoryItemData[] HealthAmount Declaration public short HealthAmount Field Value Type Description short"
  },
  "api/Buildable.Buildings.DestroyableObject.html": {
    "href": "api/Buildable.Buildings.DestroyableObject.html",
    "title": "Class DestroyableObject | Harvest Grove code documentation",
    "keywords": "Class DestroyableObject Inheritance object DestroyableObject Implements IDestroyable Namespace: Buildable.Buildings Assembly: cs.temp.dll.dll Syntax public class DestroyableObject : MonoBehaviour, IDestroyable Properties DestroyableObjectHealth Declaration public short DestroyableObjectHealth { get; set; } Property Value Type Description short Methods Construct(IInventoryService) Declaration public void Construct(IInventoryService inventoryService) Parameters Type Name Description IInventoryService inventoryService DecreaseToolDurability() Declaration public void DecreaseToolDurability() DestroyObject() Declaration public void DestroyObject() Implements IDestroyable"
  },
  "api/Buildable.Buildings.html": {
    "href": "api/Buildable.Buildings.html",
    "title": "Namespace Buildable.Buildings | Harvest Grove code documentation",
    "keywords": "Namespace Buildable.Buildings Classes Destroyable DestroyableObject SpritableBase Interfaces IDestroyable Enums InteractionType LocationType"
  },
  "api/Buildable.Buildings.IDestroyable.html": {
    "href": "api/Buildable.Buildings.IDestroyable.html",
    "title": "Interface IDestroyable | Harvest Grove code documentation",
    "keywords": "Interface IDestroyable Namespace: Buildable.Buildings Assembly: cs.temp.dll.dll Syntax public interface IDestroyable Methods DecreaseToolDurability() Declaration void DecreaseToolDurability() DestroyObject() Declaration void DestroyObject()"
  },
  "api/Buildable.Buildings.InteractionType.html": {
    "href": "api/Buildable.Buildings.InteractionType.html",
    "title": "Enum InteractionType | Harvest Grove code documentation",
    "keywords": "Enum InteractionType Namespace: Buildable.Buildings Assembly: cs.temp.dll.dll Syntax public enum InteractionType Fields Name Description BuildingInteraction ChestInteraction NPC_Interaction Unknown"
  },
  "api/Buildable.Buildings.LocationType.html": {
    "href": "api/Buildable.Buildings.LocationType.html",
    "title": "Enum LocationType | Harvest Grove code documentation",
    "keywords": "Enum LocationType Namespace: Buildable.Buildings Assembly: cs.temp.dll.dll Syntax public enum LocationType Fields Name Description Blacksmith Harbor Shop Unknown"
  },
  "api/Buildable.Buildings.SpritableBase.html": {
    "href": "api/Buildable.Buildings.SpritableBase.html",
    "title": "Class SpritableBase | Harvest Grove code documentation",
    "keywords": "Class SpritableBase Inheritance object SpritableBase FarmBuildingsBase Namespace: Buildable.Buildings Assembly: cs.temp.dll.dll Syntax public abstract class SpritableBase : InteractionСontroller Methods AssignSprite(SideEnum) Declaration public abstract void AssignSprite(SideEnum side) Parameters Type Name Description SideEnum side"
  },
  "api/Buildable.Buildings.UnlockedBuildings.html": {
    "href": "api/Buildable.Buildings.UnlockedBuildings.html",
    "title": "Namespace Buildable.Buildings.UnlockedBuildings | Harvest Grove code documentation",
    "keywords": "Namespace Buildable.Buildings.UnlockedBuildings Classes UnlockedBuildingBookSide UnlockedBuildingsShowcase UnlockedBuildingsSO UnlockedBuildingsUI"
  },
  "api/Buildable.Buildings.UnlockedBuildings.UnlockedBuildingBookSide.html": {
    "href": "api/Buildable.Buildings.UnlockedBuildings.UnlockedBuildingBookSide.html",
    "title": "Class UnlockedBuildingBookSide | Harvest Grove code documentation",
    "keywords": "Class UnlockedBuildingBookSide Inheritance object UnlockedBuildingBookSide Namespace: Buildable.Buildings.UnlockedBuildings Assembly: cs.temp.dll.dll Syntax public class UnlockedBuildingBookSide : MonoBehaviour Methods ShowBuildings(List<ushort>, BuildableHolderSO) Declaration public void ShowBuildings(List<ushort> ids, BuildableHolderSO buildable) Parameters Type Name Description List<><ushort> ids BuildableHolderSO buildable"
  },
  "api/Buildable.Buildings.UnlockedBuildings.UnlockedBuildingsShowcase.html": {
    "href": "api/Buildable.Buildings.UnlockedBuildings.UnlockedBuildingsShowcase.html",
    "title": "Class UnlockedBuildingsShowcase | Harvest Grove code documentation",
    "keywords": "Class UnlockedBuildingsShowcase Inheritance object UnlockedBuildingsShowcase Namespace: Buildable.Buildings.UnlockedBuildings Assembly: cs.temp.dll.dll Syntax public class UnlockedBuildingsShowcase : MonoBehaviour Methods Construct(IGameData, IPlayerTransfromService) Declaration public void Construct(IGameData gameData, IPlayerTransfromService playerTransfromService) Parameters Type Name Description IGameData gameData IPlayerTransfromService playerTransfromService UpdateBuilding(ConstructionSO, SideEnum) Updates the Building with the given construction parameters. Declaration public void UpdateBuilding(ConstructionSO construction, SideEnum side) Parameters Type Name Description ConstructionSO construction The construction parameters to update the Building with. SideEnum side"
  },
  "api/Buildable.Buildings.UnlockedBuildings.UnlockedBuildingsSO.html": {
    "href": "api/Buildable.Buildings.UnlockedBuildings.UnlockedBuildingsSO.html",
    "title": "Class UnlockedBuildingsSO | Harvest Grove code documentation",
    "keywords": "Class UnlockedBuildingsSO Inheritance object UnlockedBuildingsSO Namespace: Buildable.Buildings.UnlockedBuildings Assembly: cs.temp.dll.dll Syntax public class UnlockedBuildingsSO : ScriptableObject Fields ListIDs Declaration public List<ushort> ListIDs Field Value Type Description List<><ushort> Methods AddID(ushort) Declaration public bool AddID(ushort ID) Parameters Type Name Description ushort ID Returns Type Description bool LoadList() Declaration public UniTask LoadList() Returns Type Description UniTask SaveList() Declaration public UniTask SaveList() Returns Type Description UniTask"
  },
  "api/Buildable.Buildings.UnlockedBuildings.UnlockedBuildingsUI.html": {
    "href": "api/Buildable.Buildings.UnlockedBuildings.UnlockedBuildingsUI.html",
    "title": "Class UnlockedBuildingsUI | Harvest Grove code documentation",
    "keywords": "Class UnlockedBuildingsUI Inheritance object UnlockedBuildingsUI Namespace: Buildable.Buildings.UnlockedBuildings Assembly: cs.temp.dll.dll Syntax public class UnlockedBuildingsUI : MonoBehaviour Fields IsCanvasEnabled Declaration public static bool IsCanvasEnabled Field Value Type Description bool OnUpdateBuildingsUI Bool is whether we are closing or opening the canvas Declaration public static Action<bool> OnUpdateBuildingsUI Field Value Type Description Action<><bool> Methods Construct(IInventoryService, InputsMap) Declaration public void Construct(IInventoryService inventoryService, InputsMap inputsMap) Parameters Type Name Description IInventoryService inventoryService InputsMap inputsMap MoveLeft() Declaration public void MoveLeft() MoveRight() Declaration public void MoveRight()"
  },
  "api/Buildable.BuildingSystem.BuildableSO.html": {
    "href": "api/Buildable.BuildingSystem.BuildableSO.html",
    "title": "Class BuildableSO | Harvest Grove code documentation",
    "keywords": "Class BuildableSO Inheritance object BuildableSO BuildingSO Namespace: Buildable.BuildingSystem Assembly: cs.temp.dll.dll Syntax public abstract class BuildableSO : ScriptableObject Fields ID Declaration public ushort ID Field Value Type Description ushort Properties BuildablePrefab Declaration public abstract GameObject BuildablePrefab { get; } Property Value Type Description GameObject"
  },
  "api/Buildable.BuildingSystem.BuildingManager.html": {
    "href": "api/Buildable.BuildingSystem.BuildingManager.html",
    "title": "Class BuildingManager | Harvest Grove code documentation",
    "keywords": "Class BuildingManager Inheritance object BuildingManager Implements IToggleable Namespace: Buildable.BuildingSystem Assembly: cs.temp.dll.dll Syntax public class BuildingManager : MonoBehaviour, IToggleable Properties GetBuildingSO Declaration public BuildingSO GetBuildingSO { get; } Property Value Type Description BuildingSO GetConstructionSO Declaration public ConstructionSO GetConstructionSO { get; } Property Value Type Description ConstructionSO Methods Construct(InputsMap) Declaration public void Construct(InputsMap inputsMap) Parameters Type Name Description InputsMap inputsMap EnablePlacing(BuildingSO) Declaration public void EnablePlacing(BuildingSO buildingSO) Parameters Type Name Description BuildingSO buildingSO EnablePlacing(ConstructionSO) Declaration public void EnablePlacing(ConstructionSO constructionSO) Parameters Type Name Description ConstructionSO constructionSO Implements IToggleable"
  },
  "api/Buildable.BuildingSystem.BuildingSO.html": {
    "href": "api/Buildable.BuildingSystem.BuildingSO.html",
    "title": "Class BuildingSO | Harvest Grove code documentation",
    "keywords": "Class BuildingSO Inheritance object BuildableSO BuildingSO Inherited Members BuildableSO.ID Namespace: Buildable.BuildingSystem Assembly: cs.temp.dll.dll Syntax public class BuildingSO : BuildableSO Fields BuildingBuilt Declaration public Transform BuildingBuilt Field Value Type Description Transform BuildingPlaceholderSprite Declaration public Sprite BuildingPlaceholderSprite Field Value Type Description Sprite BuildingTile Declaration public ObjectTileTypeEnum BuildingTile Field Value Type Description ObjectTileTypeEnum BuildingType Declaration public BuildingType BuildingType Field Value Type Description BuildingType ChestSize Declaration public ushort ChestSize Field Value Type Description ushort CustomPlacingRule Declaration public CustomPlacingRule CustomPlacingRule Field Value Type Description CustomPlacingRule Forbidden Declaration public List<ObjectTileTypeEnum> Forbidden Field Value Type Description List<><ObjectTileTypeEnum> HasCustomPlacingRules Declaration public bool HasCustomPlacingRules Field Value Type Description bool HasForbiddenNeighbors Declaration public bool HasForbiddenNeighbors Field Value Type Description bool IsRotatable Declaration public bool IsRotatable Field Value Type Description bool IsTileBased Declaration public bool IsTileBased Field Value Type Description bool ScareCrowSize Declaration public Vector2Int ScareCrowSize Field Value Type Description Vector2Int Sides Declaration public List<SideBuilding> Sides Field Value Type Description List<><SideBuilding> Size Declaration public Vector2Int Size Field Value Type Description Vector2Int TroughType Declaration public TroughType TroughType Field Value Type Description TroughType Properties BuildablePrefab Declaration public override GameObject BuildablePrefab { get; } Property Value Type Description GameObject Overrides BuildableSO.BuildablePrefab RootItemID Declaration public ushort RootItemID { get; set; } Property Value Type Description ushort Methods BuildBuilding(Vector2, MapBuildingsDataSO) Declaration public void BuildBuilding(Vector2 mousePosition, MapBuildingsDataSO mapBuildingsData) Parameters Type Name Description Vector2 mousePosition MapBuildingsDataSO mapBuildingsData BuildTiles(TilemapStructure, Vector2Int, int) Check if the building can be placed on the specific tile Declaration public bool BuildTiles(TilemapStructure tilemap, Vector2Int pos, int currentSide) Parameters Type Name Description TilemapStructure tilemap The tilemap structure Vector2Int pos The position of the building int currentSide The current side of the building (left, right, up, down) Returns Type Description bool True if the building can be placed, otherwise false DecreaseItem() Building is placed, constructionSO remove it from the inventory Declaration public void DecreaseItem()"
  },
  "api/Buildable.BuildingSystem.CollisionChecking.html": {
    "href": "api/Buildable.BuildingSystem.CollisionChecking.html",
    "title": "Class CollisionChecking | Harvest Grove code documentation",
    "keywords": "Class CollisionChecking Inheritance object CollisionChecking Namespace: Buildable.BuildingSystem Assembly: cs.temp.dll.dll Syntax public class CollisionChecking : MonoBehaviour Properties IsColliding Declaration public static bool IsColliding { get; } Property Value Type Description bool"
  },
  "api/Buildable.BuildingSystem.CurrentBuildable.BuildableBuilding.html": {
    "href": "api/Buildable.BuildingSystem.CurrentBuildable.BuildableBuilding.html",
    "title": "Class BuildableBuilding | Harvest Grove code documentation",
    "keywords": "Class BuildableBuilding Inheritance object CurrentBuildableBase BuildableBuilding Inherited Members CurrentBuildableBase.PlacingBuilding object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Buildable.BuildingSystem.CurrentBuildable Assembly: cs.temp.dll.dll Syntax public class BuildableBuilding : CurrentBuildableBase Constructors BuildableBuilding(PlacingBuilding) Declaration public BuildableBuilding(PlacingBuilding placingBuilding) Parameters Type Name Description PlacingBuilding placingBuilding Methods BuildBuilding() Declaration public override void BuildBuilding() Overrides CurrentBuildableBase.BuildBuilding() DisableBuilding() Declaration public override UniTask DisableBuilding() Returns Type Description UniTask Overrides CurrentBuildableBase.DisableBuilding() PrepareBuildingPlaceholder() Declaration public override void PrepareBuildingPlaceholder() Overrides CurrentBuildableBase.PrepareBuildingPlaceholder() Rotation() Declaration public override void Rotation() Overrides CurrentBuildableBase.Rotation()"
  },
  "api/Buildable.BuildingSystem.CurrentBuildable.BuildableConstruction.html": {
    "href": "api/Buildable.BuildingSystem.CurrentBuildable.BuildableConstruction.html",
    "title": "Class BuildableConstruction | Harvest Grove code documentation",
    "keywords": "Class BuildableConstruction Inheritance object CurrentBuildableBase BuildableConstruction Inherited Members CurrentBuildableBase.PlacingBuilding object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Buildable.BuildingSystem.CurrentBuildable Assembly: cs.temp.dll.dll Syntax public class BuildableConstruction : CurrentBuildableBase Constructors BuildableConstruction(PlacingBuilding) Declaration public BuildableConstruction(PlacingBuilding placingBuilding) Parameters Type Name Description PlacingBuilding placingBuilding Methods BuildBuilding() Declaration public override void BuildBuilding() Overrides CurrentBuildableBase.BuildBuilding() DisableBuilding() Declaration public override UniTask DisableBuilding() Returns Type Description UniTask Overrides CurrentBuildableBase.DisableBuilding() PrepareBuildingPlaceholder() Declaration public override void PrepareBuildingPlaceholder() Overrides CurrentBuildableBase.PrepareBuildingPlaceholder() Rotation() Declaration public override void Rotation() Overrides CurrentBuildableBase.Rotation()"
  },
  "api/Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.html": {
    "href": "api/Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.html",
    "title": "Class CurrentBuildableBase | Harvest Grove code documentation",
    "keywords": "Class CurrentBuildableBase Inheritance object CurrentBuildableBase BuildableBuilding BuildableConstruction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Buildable.BuildingSystem.CurrentBuildable Assembly: cs.temp.dll.dll Syntax public abstract class CurrentBuildableBase Constructors CurrentBuildableBase(PlacingBuilding) Declaration public CurrentBuildableBase(PlacingBuilding placingBuilding) Parameters Type Name Description PlacingBuilding placingBuilding Fields PlacingBuilding Declaration protected PlacingBuilding PlacingBuilding Field Value Type Description PlacingBuilding Methods BuildBuilding() This method checks if the Building can be placed If it can, it builds the Building at the current mouse position Declaration public abstract void BuildBuilding() DisableBuilding() Declaration public abstract UniTask DisableBuilding() Returns Type Description UniTask PrepareBuildingPlaceholder() Declaration public abstract void PrepareBuildingPlaceholder() Rotation() Declaration public abstract void Rotation()"
  },
  "api/Buildable.BuildingSystem.CurrentBuildable.html": {
    "href": "api/Buildable.BuildingSystem.CurrentBuildable.html",
    "title": "Namespace Buildable.BuildingSystem.CurrentBuildable | Harvest Grove code documentation",
    "keywords": "Namespace Buildable.BuildingSystem.CurrentBuildable Classes BuildableBuilding BuildableConstruction CurrentBuildableBase"
  },
  "api/Buildable.BuildingSystem.CustomPlacingRules.CustomPlacingRule.html": {
    "href": "api/Buildable.BuildingSystem.CustomPlacingRules.CustomPlacingRule.html",
    "title": "Class CustomPlacingRule | Harvest Grove code documentation",
    "keywords": "Class CustomPlacingRule Inheritance object CustomPlacingRule WoodenBridgeEdgePlacingRule WoodenBridgePlacingRule Namespace: Buildable.BuildingSystem.CustomPlacingRules Assembly: cs.temp.dll.dll Syntax public abstract class CustomPlacingRule : ScriptableObject Properties ShowBuildingMap Declaration public abstract bool ShowBuildingMap { get; } Property Value Type Description bool Methods Build(Vector3) Declaration public abstract void Build(Vector3 clickedPos) Parameters Type Name Description Vector3 clickedPos CanPlace(Vector2Int) Declaration public abstract bool CanPlace(Vector2Int clickedPos) Parameters Type Name Description Vector2Int clickedPos Returns Type Description bool CanSetTakenTile(Vector3Int, TilemapStructure) Declaration public abstract bool CanSetTakenTile(Vector3Int tilePosition, TilemapStructure buildingTilemap) Parameters Type Name Description Vector3Int tilePosition TilemapStructure buildingTilemap Returns Type Description bool"
  },
  "api/Buildable.BuildingSystem.CustomPlacingRules.html": {
    "href": "api/Buildable.BuildingSystem.CustomPlacingRules.html",
    "title": "Namespace Buildable.BuildingSystem.CustomPlacingRules | Harvest Grove code documentation",
    "keywords": "Namespace Buildable.BuildingSystem.CustomPlacingRules Classes CustomPlacingRule WoodenBridgeEdgePlacingRule WoodenBridgePlacingRule"
  },
  "api/Buildable.BuildingSystem.CustomPlacingRules.WoodenBridgeEdgePlacingRule.html": {
    "href": "api/Buildable.BuildingSystem.CustomPlacingRules.WoodenBridgeEdgePlacingRule.html",
    "title": "Class WoodenBridgeEdgePlacingRule | Harvest Grove code documentation",
    "keywords": "Class WoodenBridgeEdgePlacingRule Inheritance object CustomPlacingRule WoodenBridgeEdgePlacingRule Namespace: Buildable.BuildingSystem.CustomPlacingRules Assembly: cs.temp.dll.dll Syntax public class WoodenBridgeEdgePlacingRule : CustomPlacingRule Properties ShowBuildingMap Declaration public override bool ShowBuildingMap { get; } Property Value Type Description bool Overrides CustomPlacingRule.ShowBuildingMap Methods Build(Vector3) Declaration public override void Build(Vector3 clickedPos) Parameters Type Name Description Vector3 clickedPos Overrides CustomPlacingRule.Build(Vector3) CanPlace(Vector2Int) Declaration public override bool CanPlace(Vector2Int clickedPos) Parameters Type Name Description Vector2Int clickedPos Returns Type Description bool Overrides CustomPlacingRule.CanPlace(Vector2Int) CanSetTakenTile(Vector3Int, TilemapStructure) Declaration public override bool CanSetTakenTile(Vector3Int tilePosition, TilemapStructure buildingTilemap) Parameters Type Name Description Vector3Int tilePosition TilemapStructure buildingTilemap Returns Type Description bool Overrides CustomPlacingRule.CanSetTakenTile(Vector3Int, TilemapStructure)"
  },
  "api/Buildable.BuildingSystem.CustomPlacingRules.WoodenBridgePlacingRule.html": {
    "href": "api/Buildable.BuildingSystem.CustomPlacingRules.WoodenBridgePlacingRule.html",
    "title": "Class WoodenBridgePlacingRule | Harvest Grove code documentation",
    "keywords": "Class WoodenBridgePlacingRule Inheritance object CustomPlacingRule WoodenBridgePlacingRule Namespace: Buildable.BuildingSystem.CustomPlacingRules Assembly: cs.temp.dll.dll Syntax public class WoodenBridgePlacingRule : CustomPlacingRule Properties ShowBuildingMap Declaration public override bool ShowBuildingMap { get; } Property Value Type Description bool Overrides CustomPlacingRule.ShowBuildingMap Methods Build(Vector3) Declaration public override void Build(Vector3 clickedPos) Parameters Type Name Description Vector3 clickedPos Overrides CustomPlacingRule.Build(Vector3) CanPlace(Vector2Int) Declaration public override bool CanPlace(Vector2Int clickedPos) Parameters Type Name Description Vector2Int clickedPos Returns Type Description bool Overrides CustomPlacingRule.CanPlace(Vector2Int) CanSetTakenTile(Vector3Int, TilemapStructure) Declaration public override bool CanSetTakenTile(Vector3Int tilePosition, TilemapStructure buildingTilemap) Parameters Type Name Description Vector3Int tilePosition TilemapStructure buildingTilemap Returns Type Description bool Overrides CustomPlacingRule.CanSetTakenTile(Vector3Int, TilemapStructure)"
  },
  "api/Buildable.BuildingSystem.html": {
    "href": "api/Buildable.BuildingSystem.html",
    "title": "Namespace Buildable.BuildingSystem | Harvest Grove code documentation",
    "keywords": "Namespace Buildable.BuildingSystem Classes BuildableSO BuildingManager BuildingSO CollisionChecking PlacingBuilding PlacingHandeling"
  },
  "api/Buildable.BuildingSystem.PlacingBuilding.html": {
    "href": "api/Buildable.BuildingSystem.PlacingBuilding.html",
    "title": "Class PlacingBuilding | Harvest Grove code documentation",
    "keywords": "Class PlacingBuilding Inheritance object PlacingBuilding Namespace: Buildable.BuildingSystem Assembly: cs.temp.dll.dll Syntax public class PlacingBuilding : MonoBehaviour Fields IsPlacing Declaration public static bool IsPlacing Field Value Type Description bool Properties BuildingManager Declaration public BuildingManager BuildingManager { get; } Property Value Type Description BuildingManager BuildingPlaceholder Declaration public GameObject BuildingPlaceholder { get; set; } Property Value Type Description GameObject BuildingPosition Declaration public Vector3 BuildingPosition { get; } Property Value Type Description Vector3 BuildingTilemap Declaration public TilemapStructure BuildingTilemap { get; } Property Value Type Description TilemapStructure CurrentBuildingSize Declaration public Vector2Int CurrentBuildingSize { get; set; } Property Value Type Description Vector2Int CurrentBuildingSo Declaration public BuildingSO CurrentBuildingSo { get; set; } Property Value Type Description BuildingSO CurrentConstructionSo Declaration public ConstructionSO CurrentConstructionSo { get; set; } Property Value Type Description ConstructionSO CurrentSide Declaration public SideEnum CurrentSide { get; set; } Property Value Type Description SideEnum CurrentSpriteIndex Declaration public short CurrentSpriteIndex { get; set; } Property Value Type Description short GridPosition Declaration public Vector2Int GridPosition { get; } Property Value Type Description Vector2Int LastGridPosition Declaration public Vector2Int LastGridPosition { get; } Property Value Type Description Vector2Int ObjectStructure Declaration public TilemapStructure ObjectStructure { get; } Property Value Type Description TilemapStructure PauseAction Declaration public InputAction PauseAction { get; } Property Value Type Description InputAction PlaceholderSpriterender Declaration public SpriteRenderer PlaceholderSpriterender { get; set; } Property Value Type Description SpriteRenderer PlacingHandeling Declaration public PlacingHandeling PlacingHandeling { get; } Property Value Type Description PlacingHandeling Tilemap Declaration public Tilemap Tilemap { get; } Property Value Type Description Tilemap Methods Construct(IGameData, ITileMapService, IBuildingData, IInventoryService, InputsMap) Declaration public void Construct(IGameData gameData, ITileMapService tileMapService, IBuildingData constructionData, IInventoryService inventoryService, InputsMap inputsMap) Parameters Type Name Description IGameData gameData ITileMapService tileMapService IBuildingData constructionData IInventoryService inventoryService InputsMap inputsMap DisableBuilding() Declaration public void DisableBuilding()"
  },
  "api/Buildable.BuildingSystem.PlacingHandeling.html": {
    "href": "api/Buildable.BuildingSystem.PlacingHandeling.html",
    "title": "Class PlacingHandeling | Harvest Grove code documentation",
    "keywords": "Class PlacingHandeling Inheritance object PlacingHandeling Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Buildable.BuildingSystem Assembly: cs.temp.dll.dll Syntax public class PlacingHandeling Constructors PlacingHandeling(IGameData, ITileMapService) Declaration public PlacingHandeling(IGameData gameData, ITileMapService tileMapService) Parameters Type Name Description IGameData gameData ITileMapService tileMapService Methods HandleCurrentBuilding(PlacingBuilding) Handles the current building based on its type Declaration public void HandleCurrentBuilding(PlacingBuilding placingBuilding) Parameters Type Name Description PlacingBuilding placingBuilding HandleCurrentConstruction(PlacingBuilding) Handles the current construction by building the construction and adding it to the mapSO Declaration public void HandleCurrentConstruction(PlacingBuilding placingBuilding) Parameters Type Name Description PlacingBuilding placingBuilding"
  },
  "api/Buildable.BuildingType.html": {
    "href": "api/Buildable.BuildingType.html",
    "title": "Enum BuildingType | Harvest Grove code documentation",
    "keywords": "Enum BuildingType Namespace: Buildable Assembly: cs.temp.dll.dll Syntax public enum BuildingType Fields Name Description Building Campfire Chest ScareCrow SingleTile Trough"
  },
  "api/Buildable.Construction.AddAnyMaterial.html": {
    "href": "api/Buildable.Construction.AddAnyMaterial.html",
    "title": "Class AddAnyMaterial | Harvest Grove code documentation",
    "keywords": "Class AddAnyMaterial Inheritance object AddAnyMaterial Namespace: Buildable.Construction Assembly: cs.temp.dll.dll Syntax public class AddAnyMaterial : MonoBehaviour Fields NeededAmount Declaration public static short NeededAmount Field Value Type Description short OnAnyMaterialsOpened Declaration public static Action OnAnyMaterialsOpened Field Value Type Description Action OnChosenMaterial This item was selected, move it to right side Declaration public static Action<InventoryItemData> OnChosenMaterial Field Value Type Description Action<><InventoryItemData> OnUpdateText Declaration public static Action OnUpdateText Field Value Type Description Action Methods SendEvent() Some events in ConstructionMaterial.cs are disabled, because the UI holding the scripts is getting disabled constructionSO, i need to reenable again Declaration public void SendEvent()"
  },
  "api/Buildable.Construction.ChosenMaterial.html": {
    "href": "api/Buildable.Construction.ChosenMaterial.html",
    "title": "Class ChosenMaterial | Harvest Grove code documentation",
    "keywords": "Class ChosenMaterial Inheritance object ChosenMaterial Namespace: Buildable.Construction Assembly: cs.temp.dll.dll Syntax public class ChosenMaterial : MonoBehaviour Fields OnMaterialAdded Declaration public static Action OnMaterialAdded Field Value Type Description Action OnReturnItem Returning item to the \"inventory\" (the left side showing all the items from the inventory) Declaration public static Action<InventoryItemData> OnReturnItem Field Value Type Description Action<><InventoryItemData> OnUpdateButtons This works with the inventory (the left side). If I have selected enough items, set interactable to false, constructionSO An can't break it If I have some items left, set interactable to true, constructionSO player can add more to the construction Declaration public static Action<bool> OnUpdateButtons Field Value Type Description Action<><bool> Methods AddToConstruction() Declaration public void AddToConstruction() Construct(IGameData) Declaration public void Construct(IGameData gameData) Parameters Type Name Description IGameData gameData"
  },
  "api/Buildable.Construction.Construction.html": {
    "href": "api/Buildable.Construction.Construction.html",
    "title": "Class Construction | Harvest Grove code documentation",
    "keywords": "Class Construction This script goes on the Building GameObject Inheritance object Construction Namespace: Buildable.Construction Assembly: cs.temp.dll.dll Syntax public class Construction : InteractionСontroller Methods Construct(IGameData) Declaration public void Construct(IGameData gameData) Parameters Type Name Description IGameData gameData Initialize(Sprite) Declaration public void Initialize(Sprite sprite) Parameters Type Name Description Sprite sprite Interact(CallbackContext) Declaration protected override void Interact(InputAction.CallbackContext _) Parameters Type Name Description InputAction.CallbackContext _"
  },
  "api/Buildable.Construction.ConstructionMaterial.html": {
    "href": "api/Buildable.Construction.ConstructionMaterial.html",
    "title": "Class ConstructionMaterial | Harvest Grove code documentation",
    "keywords": "Class ConstructionMaterial Inheritance object ConstructionMaterial Namespace: Buildable.Construction Assembly: cs.temp.dll.dll Syntax public class ConstructionMaterial : MonoBehaviour Fields AddOneBtn Declaration public Button AddOneBtn Field Value Type Description Button AmountText Declaration public TextMeshProUGUI AmountText Field Value Type Description TextMeshProUGUI MaterialImage Declaration public Image MaterialImage Field Value Type Description Image MaterialNameText Declaration public TextMeshProUGUI MaterialNameText Field Value Type Description TextMeshProUGUI MaxBtn Declaration public Button MaxBtn Field Value Type Description Button Properties AddedItemAmount Gets the amount of added materials Declaration public int AddedItemAmount { get; } Property Value Type Description int AddedTypeAmount Declaration public int AddedTypeAmount { get; } Property Value Type Description int Pos Declaration public Vector2 Pos { get; set; } Property Value Type Description Vector2 RequiredItemAmount Gets the required amount of materials Declaration public int RequiredItemAmount { get; } Property Value Type Description int RequiredMaterial Declaration public RequiredMaterials RequiredMaterial { get; set; } Property Value Type Description RequiredMaterials Methods Construct(IGameData, ShowSpecificMaterial, ShowAnyMaterial) Declaration public void Construct(IGameData gameData, ShowSpecificMaterial showSpecificMaterial, ShowAnyMaterial showAnyMaterial) Parameters Type Name Description IGameData gameData ShowSpecificMaterial showSpecificMaterial ShowAnyMaterial showAnyMaterial ShowMaterial(RequiredMaterials, Vector2) Shows the required materials for a Building at the given position Declaration public void ShowMaterial(RequiredMaterials requiredMaterial, Vector2 buildingPosition) Parameters Type Name Description RequiredMaterials requiredMaterial The required materials Vector2 buildingPosition The position of the Building"
  },
  "api/Buildable.Construction.ConstructionUI.html": {
    "href": "api/Buildable.Construction.ConstructionUI.html",
    "title": "Class ConstructionUI | Harvest Grove code documentation",
    "keywords": "Class ConstructionUI Inheritance object ConstructionUI Namespace: Buildable.Construction Assembly: cs.temp.dll.dll Syntax public class ConstructionUI : MonoBehaviour Fields OnHarborFinish Declaration public static Action<GameObject> OnHarborFinish Field Value Type Description Action<><GameObject> OnShowConstructionInfo Declaration public static Action<ConstructionSO, List<RequiredMaterials>, Vector2, GameObject> OnShowConstructionInfo Field Value Type Description Action<, , , ><ConstructionSO, List<><RequiredMaterials>, Vector2, GameObject> Properties ConstructionPosition Declaration public Vector2 ConstructionPosition { get; } Property Value Type Description Vector2 Methods Build() Finish the construction and make it a Building Declaration public void Build() CloseMenu() Closes the menu by setting the game object to inactive Declaration public void CloseMenu() Construct(IGameData, ITileMapService, InputsMap) Declaration public void Construct(IGameData gameData, ITileMapService tileMapService, InputsMap inputsMap) Parameters Type Name Description IGameData gameData ITileMapService tileMapService InputsMap inputsMap DestroyConstruction() Destroy the construction and add all the added material back to the inventory Declaration public void DestroyConstruction()"
  },
  "api/Buildable.Construction.html": {
    "href": "api/Buildable.Construction.html",
    "title": "Namespace Buildable.Construction | Harvest Grove code documentation",
    "keywords": "Namespace Buildable.Construction Classes AddAnyMaterial ChosenMaterial Construction This script goes on the Building GameObject ConstructionMaterial ConstructionUI"
  },
  "api/Buildable.Construction.ScriptableObjects.BuildableHolderSO.html": {
    "href": "api/Buildable.Construction.ScriptableObjects.BuildableHolderSO.html",
    "title": "Class BuildableHolderSO | Harvest Grove code documentation",
    "keywords": "Class BuildableHolderSO Inheritance object BuildableHolderSO Namespace: Buildable.Construction.ScriptableObjects Assembly: cs.temp.dll.dll Syntax public class BuildableHolderSO : ScriptableObject Fields BuildableList Declaration public BuildableSO[] BuildableList Field Value Type Description BuildableSO[] Methods GetBuildable(int) Declaration public BuildableSO GetBuildable(int id) Parameters Type Name Description int id Returns Type Description BuildableSO GetBuilding(int) Declaration public BuildingSO GetBuilding(int id) Parameters Type Name Description int id Returns Type Description BuildingSO GetConstruction(int) Declaration public ConstructionSO GetConstruction(int id) Parameters Type Name Description int id Returns Type Description ConstructionSO"
  },
  "api/Buildable.Construction.ScriptableObjects.ConstructionSO.html": {
    "href": "api/Buildable.Construction.ScriptableObjects.ConstructionSO.html",
    "title": "Class ConstructionSO | Harvest Grove code documentation",
    "keywords": "Class ConstructionSO This ScriptableObject represents a construction object in the game Inheritance object ConstructionSO Namespace: Buildable.Construction.ScriptableObjects Assembly: cs.temp.dll.dll Syntax public class ConstructionSO : BuildableSO Fields AnimalType Declaration public MainAnimalsEnum AnimalType Field Value Type Description MainAnimalsEnum BuildingPrefab Declaration public GameObject BuildingPrefab Field Value Type Description GameObject ConstructionName Declaration public string ConstructionName Field Value Type Description string ConstructionPrefab Declaration public GameObject ConstructionPrefab Field Value Type Description GameObject IsAnimalHousing Declaration public bool IsAnimalHousing Field Value Type Description bool IsTesting Declaration public bool IsTesting Field Value Type Description bool LeftSprite Declaration public Sprite LeftSprite Field Value Type Description Sprite RequiredMaterials Declaration public List<RequiredMaterials> RequiredMaterials Field Value Type Description List<><RequiredMaterials> RightSprite Declaration public Sprite RightSprite Field Value Type Description Sprite SideSpritesList Declaration public List<SideSprites> SideSpritesList Field Value Type Description List<><SideSprites> Properties BuildablePrefab Declaration public override GameObject BuildablePrefab { get; } Property Value Type Description GameObject Methods BuildConstruction(Vector2, short) Built the construction on the position Declaration public void BuildConstruction(Vector2 mousePosition, short currentIndex) Parameters Type Name Description Vector2 mousePosition short currentIndex GetSideSprite(SideEnum) Declaration public SideSprites GetSideSprite(SideEnum side) Parameters Type Name Description SideEnum side Returns Type Description SideSprites"
  },
  "api/Buildable.Construction.ScriptableObjects.html": {
    "href": "api/Buildable.Construction.ScriptableObjects.html",
    "title": "Namespace Buildable.Construction.ScriptableObjects | Harvest Grove code documentation",
    "keywords": "Namespace Buildable.Construction.ScriptableObjects Classes BuildableHolderSO ConstructionSO This ScriptableObject represents a construction object in the game RequiredMaterials This class represents a required material for a construction (material type + amount) Structs SideSprites Each side has its own sprites - for construction, built and even open This is the easiest way how to manage those different sprites"
  },
  "api/Buildable.Construction.ScriptableObjects.RequiredMaterials.html": {
    "href": "api/Buildable.Construction.ScriptableObjects.RequiredMaterials.html",
    "title": "Class RequiredMaterials | Harvest Grove code documentation",
    "keywords": "Class RequiredMaterials This class represents a required material for a construction (material type + amount) Inheritance object RequiredMaterials Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Buildable.Construction.ScriptableObjects Assembly: cs.temp.dll.dll Syntax [Serializable] public class RequiredMaterials Constructors RequiredMaterials(InventoryItemData, MaterialType, byte) Declaration public RequiredMaterials(InventoryItemData item, MaterialType material, byte amount) Parameters Type Name Description InventoryItemData item MaterialType material byte amount RequiredMaterials(InventoryItemData, byte) Declaration public RequiredMaterials(InventoryItemData item, byte amount) Parameters Type Name Description InventoryItemData item byte amount RequiredMaterials(MaterialType, byte, int) Declaration public RequiredMaterials(MaterialType material, byte amount, int itemID) Parameters Type Name Description MaterialType material byte amount int itemID Fields Amount Declaration public byte Amount Field Value Type Description byte ItemID Declaration public int ItemID Field Value Type Description int Material Declaration public InventoryItemData Material Field Value Type Description InventoryItemData MaterialType Declaration public MaterialType MaterialType Field Value Type Description MaterialType Methods Construct(IManagerData) Declaration public void Construct(IManagerData gameData) Parameters Type Name Description IManagerData gameData"
  },
  "api/Buildable.Construction.ScriptableObjects.SideSprites.html": {
    "href": "api/Buildable.Construction.ScriptableObjects.SideSprites.html",
    "title": "Struct SideSprites | Harvest Grove code documentation",
    "keywords": "Struct SideSprites Each side has its own sprites - for construction, built and even open This is the easiest way how to manage those different sprites Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Buildable.Construction.ScriptableObjects Assembly: cs.temp.dll.dll Syntax [Serializable] public struct SideSprites Fields BuiltSprite Declaration public Sprite BuiltSprite Field Value Type Description Sprite ConstructionSprite Declaration public Sprite ConstructionSprite Field Value Type Description Sprite Side Declaration public SideEnum Side Field Value Type Description SideEnum Size Declaration public Vector2Int Size Field Value Type Description Vector2Int"
  },
  "api/Buildable.Construction.Showing.html": {
    "href": "api/Buildable.Construction.Showing.html",
    "title": "Namespace Buildable.Construction.Showing | Harvest Grove code documentation",
    "keywords": "Namespace Buildable.Construction.Showing Classes ShowAnyMaterial ShowSpecificMaterial Interfaces IShowMaterial"
  },
  "api/Buildable.Construction.Showing.IShowMaterial.html": {
    "href": "api/Buildable.Construction.Showing.IShowMaterial.html",
    "title": "Interface IShowMaterial | Harvest Grove code documentation",
    "keywords": "Interface IShowMaterial Namespace: Buildable.Construction.Showing Assembly: cs.temp.dll.dll Syntax public interface IShowMaterial Methods ShowMaterial(ConstructionMaterial) Declaration void ShowMaterial(ConstructionMaterial constructionMaterial) Parameters Type Name Description ConstructionMaterial constructionMaterial UpdateAmountText(ConstructionMaterial) Declaration void UpdateAmountText(ConstructionMaterial constructionMaterial) Parameters Type Name Description ConstructionMaterial constructionMaterial UpdateButtonInteractable(ConstructionMaterial) Declaration void UpdateButtonInteractable(ConstructionMaterial constructionMaterial) Parameters Type Name Description ConstructionMaterial constructionMaterial"
  },
  "api/Buildable.Construction.Showing.ShowAnyMaterial.html": {
    "href": "api/Buildable.Construction.Showing.ShowAnyMaterial.html",
    "title": "Class ShowAnyMaterial | Harvest Grove code documentation",
    "keywords": "Class ShowAnyMaterial Inheritance object ShowAnyMaterial Implements IShowMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Buildable.Construction.Showing Assembly: cs.temp.dll.dll Syntax public class ShowAnyMaterial : IShowMaterial Fields OnOpenAnyUI Declaration public static Action OnOpenAnyUI Field Value Type Description Action OnUpdateAnyUI Declaration public static Action<List<Tuple<InventoryItemData, int>>, MaterialType, short> OnUpdateAnyUI Field Value Type Description Action<, , ><List<><Tuple<InventoryItemData, int>>, MaterialType, short> Methods Construct(IInventoryService, IGameData) Declaration public void Construct(IInventoryService inventoryService, IGameData gameData) Parameters Type Name Description IInventoryService inventoryService IGameData gameData OpenAnyMaterialSection(ConstructionMaterial) This method is called when the construction has \"any\" material Declaration public void OpenAnyMaterialSection(ConstructionMaterial construction) Parameters Type Name Description ConstructionMaterial construction ShowMaterial(ConstructionMaterial) Declaration public void ShowMaterial(ConstructionMaterial constructionMaterial) Parameters Type Name Description ConstructionMaterial constructionMaterial UpdateAmountText(ConstructionMaterial) Updates the amount text UI element Declaration public void UpdateAmountText(ConstructionMaterial constructionMaterial) Parameters Type Name Description ConstructionMaterial constructionMaterial UpdateButtonInteractable(ConstructionMaterial) Declaration public void UpdateButtonInteractable(ConstructionMaterial constructionMaterial) Parameters Type Name Description ConstructionMaterial constructionMaterial Events OnAnyMaterial Declaration public event Action<ConstructionMaterial> OnAnyMaterial Event Type Type Description Action<><ConstructionMaterial> Implements IShowMaterial"
  },
  "api/Buildable.Construction.Showing.ShowSpecificMaterial.html": {
    "href": "api/Buildable.Construction.Showing.ShowSpecificMaterial.html",
    "title": "Class ShowSpecificMaterial | Harvest Grove code documentation",
    "keywords": "Class ShowSpecificMaterial Inheritance object ShowSpecificMaterial Implements IShowMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Buildable.Construction.Showing Assembly: cs.temp.dll.dll Syntax public class ShowSpecificMaterial : IShowMaterial Fields OnMaterialAdded Thrown when the player adds when Building Declaration public static Action OnMaterialAdded Field Value Type Description Action Methods AddMaxAvailable(ConstructionMaterial) Adds the maximum available amount of materials to the construction Declaration public void AddMaxAvailable(ConstructionMaterial constructionMaterial) Parameters Type Name Description ConstructionMaterial constructionMaterial AddOneMaterial(ConstructionMaterial) Adds one material to the construction Declaration public void AddOneMaterial(ConstructionMaterial constructionMaterial) Parameters Type Name Description ConstructionMaterial constructionMaterial CallOnEnable(ConstructionMaterial) I have to assign the listner to the maxbtn.. constructionSO... just call this Declaration public void CallOnEnable(ConstructionMaterial constructionMaterial) Parameters Type Name Description ConstructionMaterial constructionMaterial Construct(IGameData) Declaration public void Construct(IGameData gameData) Parameters Type Name Description IGameData gameData ShowMaterial(ConstructionMaterial) Declaration public void ShowMaterial(ConstructionMaterial constructionMaterial) Parameters Type Name Description ConstructionMaterial constructionMaterial UpdateAmountText(ConstructionMaterial) Updates the amount text UI element Declaration public void UpdateAmountText(ConstructionMaterial constructionMaterial) Parameters Type Name Description ConstructionMaterial constructionMaterial UpdateButtonInteractable(ConstructionMaterial) Updates the interactability of the buttons based on the added and required item amounts Declaration public void UpdateButtonInteractable(ConstructionMaterial constructionMaterial) Parameters Type Name Description ConstructionMaterial constructionMaterial Events OnAddMax Declaration public event Action<ConstructionMaterial> OnAddMax Event Type Type Description Action<><ConstructionMaterial> OnAddOneMaterial Declaration public event Action<ConstructionMaterial> OnAddOneMaterial Event Type Type Description Action<><ConstructionMaterial> Implements IShowMaterial"
  },
  "api/Buildable.html": {
    "href": "api/Buildable.html",
    "title": "Namespace Buildable | Harvest Grove code documentation",
    "keywords": "Namespace Buildable Structs SideBuilding Enums BuildingType"
  },
  "api/Buildable.SideBuilding.html": {
    "href": "api/Buildable.SideBuilding.html",
    "title": "Struct SideBuilding | Harvest Grove code documentation",
    "keywords": "Struct SideBuilding Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Buildable Assembly: cs.temp.dll.dll Syntax public struct SideBuilding Fields SafeZone Declaration public Vector2Int SafeZone Field Value Type Description Vector2Int Side Declaration public SideEnum Side Field Value Type Description SideEnum SideSprite Declaration public Sprite SideSprite Field Value Type Description Sprite Size Declaration public Vector2Int Size Field Value Type Description Vector2Int Tile Declaration public ObjectTileSO Tile Field Value Type Description ObjectTileSO"
  },
  "api/City.CityBuildings._BlacksmithSystem_.Blacksmith.html": {
    "href": "api/City.CityBuildings._BlacksmithSystem_.Blacksmith.html",
    "title": "Class Blacksmith | Harvest Grove code documentation",
    "keywords": "Class Blacksmith Inheritance object Blacksmith Namespace: City.CityBuildings._BlacksmithSystem_ Assembly: cs.temp.dll.dll Syntax public class Blacksmith : ShopSystem Methods RestoreDefaultUI() Declaration protected override void RestoreDefaultUI()"
  },
  "api/City.CityBuildings._BlacksmithSystem_.BlacksmithCanvas.html": {
    "href": "api/City.CityBuildings._BlacksmithSystem_.BlacksmithCanvas.html",
    "title": "Class BlacksmithCanvas | Harvest Grove code documentation",
    "keywords": "Class BlacksmithCanvas Inheritance object BlacksmithCanvas Namespace: City.CityBuildings._BlacksmithSystem_ Assembly: cs.temp.dll.dll Syntax public class BlacksmithCanvas : MonoBehaviour Properties BlacksmithSlots Declaration public RepairingSlot_UI[] BlacksmithSlots { get; } Property Value Type Description RepairingSlot_UI[] RenameToolBtn Declaration public Button RenameToolBtn { get; } Property Value Type Description Button ToolNameInput Declaration public TMP_InputField ToolNameInput { get; } Property Value Type Description TMP_InputField"
  },
  "api/City.CityBuildings._BlacksmithSystem_.BlacksmithShopDatabase.html": {
    "href": "api/City.CityBuildings._BlacksmithSystem_.BlacksmithShopDatabase.html",
    "title": "Class BlacksmithShopDatabase | Harvest Grove code documentation",
    "keywords": "Class BlacksmithShopDatabase Inheritance object ShopDatabase BlacksmithShopDatabase Inherited Members ShopDatabase.SalableItems ShopDatabase.PurchasableItems ShopDatabase.UpdateID() Namespace: City.CityBuildings._BlacksmithSystem_ Assembly: cs.temp.dll.dll Syntax public class BlacksmithShopDatabase : ShopDatabase"
  },
  "api/City.CityBuildings._BlacksmithSystem_.BlacksmithSystem.html": {
    "href": "api/City.CityBuildings._BlacksmithSystem_.BlacksmithSystem.html",
    "title": "Class BlacksmithSystem | Harvest Grove code documentation",
    "keywords": "Class BlacksmithSystem Inheritance object BlacksmithSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: City.CityBuildings._BlacksmithSystem_ Assembly: cs.temp.dll.dll Syntax public static class BlacksmithSystem Properties NewInstance Declaration public static ToolInstance NewInstance { get; set; } Property Value Type Description ToolInstance RepairCost Declaration public static int RepairCost { get; set; } Property Value Type Description int Methods CalculateRepairCost(int, int) Declaration public static int CalculateRepairCost(int maxToolHealth, int currentToolHealth) Parameters Type Name Description int maxToolHealth int currentToolHealth Returns Type Description int RepairItem() Declaration public static void RepairItem()"
  },
  "api/City.CityBuildings._BlacksmithSystem_.ColorPicker.html": {
    "href": "api/City.CityBuildings._BlacksmithSystem_.ColorPicker.html",
    "title": "Class ColorPicker | Harvest Grove code documentation",
    "keywords": "Class ColorPicker Inheritance object ColorPicker Namespace: City.CityBuildings._BlacksmithSystem_ Assembly: cs.temp.dll.dll Syntax public class ColorPicker : MonoBehaviour"
  },
  "api/City.CityBuildings._BlacksmithSystem_.html": {
    "href": "api/City.CityBuildings._BlacksmithSystem_.html",
    "title": "Namespace City.CityBuildings._BlacksmithSystem_ | Harvest Grove code documentation",
    "keywords": "Namespace City.CityBuildings._BlacksmithSystem_ Classes Blacksmith BlacksmithCanvas BlacksmithShopDatabase BlacksmithSystem ColorPicker RenamingSlot RepairingSlot_UI Interfaces IBlacksmithSlot"
  },
  "api/City.CityBuildings._BlacksmithSystem_.IBlacksmithSlot.html": {
    "href": "api/City.CityBuildings._BlacksmithSystem_.IBlacksmithSlot.html",
    "title": "Interface IBlacksmithSlot | Harvest Grove code documentation",
    "keywords": "Interface IBlacksmithSlot Namespace: City.CityBuildings._BlacksmithSystem_ Assembly: cs.temp.dll.dll Syntax public interface IBlacksmithSlot Methods ClearPlaceholder() Declaration void ClearPlaceholder() ResetAllPlaceholders() Sets back all the blacksmith sprite placeholders Declaration void ResetAllPlaceholders() ResetPlaceholder() Declaration void ResetPlaceholder() ResetRepairedToolSlot() Declaration void ResetRepairedToolSlot()"
  },
  "api/City.CityBuildings._BlacksmithSystem_.RenamingSlot.html": {
    "href": "api/City.CityBuildings._BlacksmithSystem_.RenamingSlot.html",
    "title": "Class RenamingSlot | Harvest Grove code documentation",
    "keywords": "Class RenamingSlot Inheritance object RenamingSlot Namespace: City.CityBuildings._BlacksmithSystem_ Assembly: cs.temp.dll.dll Syntax public class RenamingSlot : SlotUI Methods Awake() Declaration protected override void Awake() Construct(IInventoryService) Declaration public void Construct(IInventoryService inventoryService) Parameters Type Name Description IInventoryService inventoryService OnUISlotClick() Declaration protected override void OnUISlotClick()"
  },
  "api/City.CityBuildings._BlacksmithSystem_.RepairingSlot_UI.html": {
    "href": "api/City.CityBuildings._BlacksmithSystem_.RepairingSlot_UI.html",
    "title": "Class RepairingSlot_UI | Harvest Grove code documentation",
    "keywords": "Class RepairingSlot_UI Inheritance object RepairingSlot_UI Implements IBlacksmithSlot Namespace: City.CityBuildings._BlacksmithSystem_ Assembly: cs.temp.dll.dll Syntax public class RepairingSlot_UI : SlotUI, IBlacksmithSlot Fields BlacksmithCanvas Declaration public BlacksmithCanvas BlacksmithCanvas Field Value Type Description BlacksmithCanvas Methods OnUISlotClick() Declaration protected override void OnUISlotClick() SetSlot() Declaration protected override void SetSlot() Explicit Interface Implementations IBlacksmithSlot.ClearPlaceholder() Declaration void IBlacksmithSlot.ClearPlaceholder() IBlacksmithSlot.ResetAllPlaceholders() Declaration void IBlacksmithSlot.ResetAllPlaceholders() IBlacksmithSlot.ResetPlaceholder() Declaration void IBlacksmithSlot.ResetPlaceholder() IBlacksmithSlot.ResetRepairedToolSlot() Declaration void IBlacksmithSlot.ResetRepairedToolSlot() Implements IBlacksmithSlot"
  },
  "api/City.CityBuildings._Shops_.html": {
    "href": "api/City.CityBuildings._Shops_.html",
    "title": "Namespace City.CityBuildings._Shops_ | Harvest Grove code documentation",
    "keywords": "Namespace City.CityBuildings._Shops_ Classes ItemShop SalableItem ShopSystem Interfaces IConfirmation IShop"
  },
  "api/City.CityBuildings._Shops_.IConfirmation.html": {
    "href": "api/City.CityBuildings._Shops_.IConfirmation.html",
    "title": "Interface IConfirmation | Harvest Grove code documentation",
    "keywords": "Interface IConfirmation Namespace: City.CityBuildings._Shops_ Assembly: cs.temp.dll.dll Syntax public interface IConfirmation Methods AddAmount() Declaration void AddAmount() DecreaseAmount() Declaration void DecreaseAmount() ResetAmount() Declaration void ResetAmount()"
  },
  "api/City.CityBuildings._Shops_.IShop.html": {
    "href": "api/City.CityBuildings._Shops_.IShop.html",
    "title": "Interface IShop | Harvest Grove code documentation",
    "keywords": "Interface IShop Namespace: City.CityBuildings._Shops_ Assembly: cs.temp.dll.dll Syntax public interface IShop Properties OnInsufficientItems Declaration Action OnInsufficientItems { get; set; } Property Value Type Description Action SalableItem Declaration SalableItem SalableItem { get; set; } Property Value Type Description SalableItem Methods ClearItemsShop(Transform) Declaration void ClearItemsShop(Transform section) Parameters Type Name Description Transform section OnPurchasableItemClick(ItemShop) Declaration void OnPurchasableItemClick(ItemShop itemShop) Parameters Type Name Description ItemShop itemShop OnSalableItemClick(ItemShop) Declaration void OnSalableItemClick(ItemShop itemShop) Parameters Type Name Description ItemShop itemShop SetItemShopUI(GameObject, InventoryItemData, int) Declaration void SetItemShopUI(GameObject salableItemInstance, InventoryItemData itemData, int itemCost) Parameters Type Name Description GameObject salableItemInstance InventoryItemData itemData int itemCost UpdatePurchasableItems() Declaration void UpdatePurchasableItems() UpdateSalableItems() Declaration void UpdateSalableItems()"
  },
  "api/City.CityBuildings._Shops_.ItemShop.html": {
    "href": "api/City.CityBuildings._Shops_.ItemShop.html",
    "title": "Class ItemShop | Harvest Grove code documentation",
    "keywords": "Class ItemShop Inheritance object ItemShop Namespace: City.CityBuildings._Shops_ Assembly: cs.temp.dll.dll Syntax public class ItemShop : MonoBehaviour Properties ItemCost Declaration public int ItemCost { get; set; } Property Value Type Description int ItemData Declaration public InventoryItemData ItemData { get; set; } Property Value Type Description InventoryItemData"
  },
  "api/City.CityBuildings._Shops_.SalableItem.html": {
    "href": "api/City.CityBuildings._Shops_.SalableItem.html",
    "title": "Class SalableItem | Harvest Grove code documentation",
    "keywords": "Class SalableItem Inheritance object SalableItem Implements IComparable<><SalableItem> Namespace: City.CityBuildings._Shops_ Assembly: cs.temp.dll.dll Syntax public class SalableItem : ScriptableObject, IComparable<SalableItem> Constructors SalableItem() Declaration public SalableItem() Fields ItemData Declaration public InventoryItemData ItemData Field Value Type Description InventoryItemData ShopID Declaration public int ShopID Field Value Type Description int Properties Cost Declaration public int Cost { get; set; } Property Value Type Description int Methods CompareTo(SalableItem) Declaration public int CompareTo(SalableItem other) Parameters Type Name Description SalableItem other Returns Type Description int GenerateRandomCost() Generates a random cost (between minCost and maxCost) for the item in the shop Declaration public void GenerateRandomCost() Implements IComparable<>"
  },
  "api/City.CityBuildings._Shops_.ShopSystem.html": {
    "href": "api/City.CityBuildings._Shops_.ShopSystem.html",
    "title": "Class ShopSystem | Harvest Grove code documentation",
    "keywords": "Class ShopSystem Inheritance object CityBuilding ShopSystem Implements IConfirmation Inherited Members CityBuilding.EndInteraction() CityBuilding.Interact(InputAction.CallbackContext) CityBuilding.RestoreDefaultUI() Namespace: City.CityBuildings._Shops_ Assembly: cs.temp.dll.dll Syntax public abstract class ShopSystem : CityBuilding, IConfirmation Fields buyingSection Declaration protected Transform buyingSection Field Value Type Description Transform itemShopInfo Declaration protected ItemShop itemShopInfo Field Value Type Description ItemShop purchasableItemPrefab Declaration protected GameObject purchasableItemPrefab Field Value Type Description GameObject salableItemPrefab Declaration protected GameObject salableItemPrefab Field Value Type Description GameObject sellingSection Declaration protected Transform sellingSection Field Value Type Description Transform Properties Amount Declaration protected int Amount { get; set; } Property Value Type Description int OnDayPassed Declaration public Action OnDayPassed { get; set; } Property Value Type Description Action Methods AddAmount() Declaration public void AddAmount() ClearItemsShop(Transform) Declaration protected virtual void ClearItemsShop(Transform section) Parameters Type Name Description Transform section Construct(IInventoryService) Declaration public void Construct(IInventoryService inventoryService) Parameters Type Name Description IInventoryService inventoryService DecreaseAmount() Declaration public void DecreaseAmount() OnBuyItem(ItemShop) Declaration protected virtual void OnBuyItem(ItemShop itemShop) Parameters Type Name Description ItemShop itemShop OnPurchasableItemClick(ItemShop) Declaration protected virtual void OnPurchasableItemClick(ItemShop itemShop) Parameters Type Name Description ItemShop itemShop OnSalableItemClick(ItemShop) Declaration protected virtual void OnSalableItemClick(ItemShop itemShop) Parameters Type Name Description ItemShop itemShop OnSellItem(ItemShop) Declaration protected virtual void OnSellItem(ItemShop itemShop) Parameters Type Name Description ItemShop itemShop ResetAmount() Declaration public void ResetAmount() SetAmountUI() Declaration protected virtual void SetAmountUI() SetItemShopUI(GameObject, InventoryItemData, int) Declaration protected void SetItemShopUI(GameObject salableItemInstance, InventoryItemData itemData, int itemCost) Parameters Type Name Description GameObject salableItemInstance InventoryItemData itemData int itemCost UpdatePurchasableItems() Declaration protected virtual void UpdatePurchasableItems() UpdateSalableItems() Declaration protected virtual void UpdateSalableItems() Implements IConfirmation"
  },
  "api/City.CityBuildings._Vendor_.html": {
    "href": "api/City.CityBuildings._Vendor_.html",
    "title": "Namespace City.CityBuildings._Vendor_ | Harvest Grove code documentation",
    "keywords": "Namespace City.CityBuildings._Vendor_ Classes Vendor VendorSalableItemsDB"
  },
  "api/City.CityBuildings._Vendor_.Vendor.html": {
    "href": "api/City.CityBuildings._Vendor_.Vendor.html",
    "title": "Class Vendor | Harvest Grove code documentation",
    "keywords": "Class Vendor Inheritance object Vendor Namespace: City.CityBuildings._Vendor_ Assembly: cs.temp.dll.dll Syntax public class Vendor : ShopSystem Methods RestoreDefaultUI() Declaration protected override void RestoreDefaultUI()"
  },
  "api/City.CityBuildings._Vendor_.VendorSalableItemsDB.html": {
    "href": "api/City.CityBuildings._Vendor_.VendorSalableItemsDB.html",
    "title": "Class VendorSalableItemsDB | Harvest Grove code documentation",
    "keywords": "Class VendorSalableItemsDB Inheritance object ShopDatabase VendorSalableItemsDB Inherited Members ShopDatabase.SalableItems ShopDatabase.PurchasableItems ShopDatabase.UpdateID() Namespace: City.CityBuildings._Vendor_ Assembly: cs.temp.dll.dll Syntax public class VendorSalableItemsDB : ShopDatabase"
  },
  "api/City.CityBuildings.CityBuilding.html": {
    "href": "api/City.CityBuildings.CityBuilding.html",
    "title": "Class CityBuilding | Harvest Grove code documentation",
    "keywords": "Class CityBuilding Inheritance object CityBuilding ShopSystem Namespace: City.CityBuildings Assembly: cs.temp.dll.dll Syntax public abstract class CityBuilding : InteractionСontroller Methods EndInteraction() Declaration public override void EndInteraction() Interact(CallbackContext) Declaration protected override void Interact(InputAction.CallbackContext _) Parameters Type Name Description InputAction.CallbackContext _ RestoreDefaultUI() Declaration protected abstract void RestoreDefaultUI()"
  },
  "api/City.CityBuildings.CityBuildingType.html": {
    "href": "api/City.CityBuildings.CityBuildingType.html",
    "title": "Enum CityBuildingType | Harvest Grove code documentation",
    "keywords": "Enum CityBuildingType Namespace: City.CityBuildings Assembly: cs.temp.dll.dll Syntax public enum CityBuildingType Fields Name Description Alchemist Blacksmith Doctor Shop Unknown"
  },
  "api/City.CityBuildings.html": {
    "href": "api/City.CityBuildings.html",
    "title": "Namespace City.CityBuildings | Harvest Grove code documentation",
    "keywords": "Namespace City.CityBuildings Classes CityBuilding ShopDatabase SystemShop Enums CityBuildingType"
  },
  "api/City.CityBuildings.ShopDatabase.html": {
    "href": "api/City.CityBuildings.ShopDatabase.html",
    "title": "Class ShopDatabase | Harvest Grove code documentation",
    "keywords": "Class ShopDatabase Inheritance object ShopDatabase BlacksmithShopDatabase VendorSalableItemsDB Namespace: City.CityBuildings Assembly: cs.temp.dll.dll Syntax public abstract class ShopDatabase : ScriptableObject Fields PurchasableItems Declaration public SalableItem[] PurchasableItems Field Value Type Description SalableItem[] SalableItems Declaration public SalableItem[] SalableItems Field Value Type Description SalableItem[] Methods UpdateID() Updates all the items id Declaration protected virtual void UpdateID()"
  },
  "api/City.CityBuildings.SystemShop.html": {
    "href": "api/City.CityBuildings.SystemShop.html",
    "title": "Class SystemShop | Harvest Grove code documentation",
    "keywords": "Class SystemShop Inheritance object SystemShop Namespace: City.CityBuildings Assembly: cs.temp.dll.dll Syntax public abstract class SystemShop : MonoBehaviour Fields OnPurchasableItemClick Declaration public static Action<InventoryItemData, int> OnPurchasableItemClick Field Value Type Description Action<, ><InventoryItemData, int> OnSalableItemClick Declaration public static Action<InventoryItemData, int> OnSalableItemClick Field Value Type Description Action<, ><InventoryItemData, int>"
  },
  "api/City.Money.html": {
    "href": "api/City.Money.html",
    "title": "Namespace City.Money | Harvest Grove code documentation",
    "keywords": "Namespace City.Money Classes MoneyManager MoneyUI"
  },
  "api/City.Money.MoneyManager.html": {
    "href": "api/City.Money.MoneyManager.html",
    "title": "Class MoneyManager | Harvest Grove code documentation",
    "keywords": "Class MoneyManager Inheritance object MoneyManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: City.Money Assembly: cs.temp.dll.dll Syntax public static class MoneyManager Fields OnCoinsInsufficient Declaration public static Action OnCoinsInsufficient Field Value Type Description Action OnCoinsUpdate Declaration public static Action<int> OnCoinsUpdate Field Value Type Description Action<><int> Properties Money Declaration public static int Money { get; set; } Property Value Type Description int"
  },
  "api/City.Money.MoneyUI.html": {
    "href": "api/City.Money.MoneyUI.html",
    "title": "Class MoneyUI | Harvest Grove code documentation",
    "keywords": "Class MoneyUI Inheritance object MoneyUI Namespace: City.Money Assembly: cs.temp.dll.dll Syntax public class MoneyUI : MonoBehaviour Fields OnUpdateMoneyText Declaration public static Action<int> OnUpdateMoneyText Field Value Type Description Action<><int>"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.Enumerations.DialogueType.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.Enumerations.DialogueType.html",
    "title": "Enum DialogueType | Harvest Grove code documentation",
    "keywords": "Enum DialogueType Namespace: City.NPC.GraphEditor.DialogueSystem.Enumerations Assembly: cs.temp.dll.dll Syntax public enum DialogueType Fields Name Description MultipleChoice SingleChoice"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.Enumerations.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.Enumerations.html",
    "title": "Namespace City.NPC.GraphEditor.DialogueSystem.Enumerations | Harvest Grove code documentation",
    "keywords": "Namespace City.NPC.GraphEditor.DialogueSystem.Enumerations Enums DialogueType"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.html",
    "title": "Namespace City.NPC.GraphEditor.DialogueSystem | Harvest Grove code documentation",
    "keywords": "Namespace City.NPC.GraphEditor.DialogueSystem Interfaces IOutputData"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.IOutputData.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.IOutputData.html",
    "title": "Interface IOutputData | Harvest Grove code documentation",
    "keywords": "Interface IOutputData Namespace: City.NPC.GraphEditor.DialogueSystem Assembly: cs.temp.dll.dll Syntax public interface IOutputData Properties ChoiceText Declaration string ChoiceText { get; set; } Property Value Type Description string NextNodeID Declaration string NextNodeID { get; set; } Property Value Type Description string"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.Scripts.Data.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.Scripts.Data.html",
    "title": "Namespace City.NPC.GraphEditor.DialogueSystem.Scripts.Data | Harvest Grove code documentation",
    "keywords": "Namespace City.NPC.GraphEditor.DialogueSystem.Scripts.Data Classes OutputChoiceDataSO Represents a choice of a Multiple Choice DialogueNode choices in the Dialogue DialogueNode System."
  },
  "api/City.NPC.GraphEditor.DialogueSystem.Scripts.Data.OutputChoiceDataSO.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.Scripts.Data.OutputChoiceDataSO.html",
    "title": "Class OutputChoiceDataSO | Harvest Grove code documentation",
    "keywords": "Class OutputChoiceDataSO Represents a choice of a Multiple Choice DialogueNode choices in the Dialogue DialogueNode System. Inheritance object OutputChoiceDataSO Implements IOutputData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: City.NPC.GraphEditor.DialogueSystem.Scripts.Data Assembly: cs.temp.dll.dll Syntax public class OutputChoiceDataSO : IOutputData Properties ChoiceText Dialogue text that will appear in the dialogue box. Declaration public string ChoiceText { get; set; } Property Value Type Description string NextNodeID Declaration public string NextNodeID { get; set; } Property Value Type Description string Implements IOutputData"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.Scripts.Dialogue.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.Scripts.Dialogue.html",
    "title": "Class Dialogue | Harvest Grove code documentation",
    "keywords": "Class Dialogue Inheritance object Dialogue Namespace: City.NPC.GraphEditor.DialogueSystem.Scripts Assembly: cs.temp.dll.dll Syntax public class Dialogue : MonoBehaviour Properties NpcDialogueContainer Declaration public NPCDialogueContainerSO NpcDialogueContainer { get; } Property Value Type Description NPCDialogueContainerSO"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.Scripts.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.Scripts.html",
    "title": "Namespace City.NPC.GraphEditor.DialogueSystem.Scripts | Harvest Grove code documentation",
    "keywords": "Namespace City.NPC.GraphEditor.DialogueSystem.Scripts Classes Dialogue"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects.DialogueSO.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects.DialogueSO.html",
    "title": "Class DialogueSO | Harvest Grove code documentation",
    "keywords": "Class DialogueSO A ScriptableObject that represents a Dialogue DialogueNode in the Dialogue DialogueNode System. Inheritance object NodeSO DialogueSO Inherited Members NodeSO.NodeID NodeSO.Choices NodeSO.Init(string, ClaimType, InventoryItemData, int, int, List<OutputChoiceSaveData>) NodeSO.Init(string, string, InventoryItemData, int, QuestType, List<OutputChoiceSaveData>) Namespace: City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects Assembly: cs.temp.dll.dll Syntax public class DialogueSO : NodeSO Properties DialogueType The type of dialogue (it can be a Single Choice Dialogue or a Multiple Choice Dialogue node). Declaration public DialogueType DialogueType { get; set; } Property Value Type Description DialogueType IsDialogueStart Declaration public bool IsDialogueStart { get; set; } Property Value Type Description bool Text The dialogue text that will appear in the dialogue box. Declaration public string Text { get; set; } Property Value Type Description string Methods Init(string, string, DialogueType, List<OutputChoiceSaveData>) Initializes the DialogueNode. Declaration public override void Init(string nodeIDPrefix, string dialogueText, DialogueType dialogueType, List<OutputChoiceSaveData> choices) Parameters Type Name Description string nodeIDPrefix string dialogueText The dialogue text that will appear in dialogue box DialogueType dialogueType Can be a Single Choice DialogueNode or a Multiple Choice DialogueNode List<><OutputChoiceSaveData> choices Overrides NodeSO.Init(string, string, DialogueType, List<OutputChoiceSaveData>)"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects.html",
    "title": "Namespace City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects | Harvest Grove code documentation",
    "keywords": "Namespace City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects Classes DialogueSO A ScriptableObject that represents a Dialogue DialogueNode in the Dialogue DialogueNode System. NodeSO A general ScriptableObject class for DialogueSO and QuestSO. NPCDialogueContainerSO Data container that holds all the dialogue and quest nodes of a Dialogue DialogueNode Graph. QuestRewardSO QuestSO"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects.NodeSO.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects.NodeSO.html",
    "title": "Class NodeSO | Harvest Grove code documentation",
    "keywords": "Class NodeSO A general ScriptableObject class for DialogueSO and QuestSO. Inheritance object NodeSO DialogueSO QuestRewardSO QuestSO Namespace: City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects Assembly: cs.temp.dll.dll Syntax public class NodeSO : ScriptableObject Properties Choices Represents all the dialogue choices that are present in the output port. Declaration public List<OutputChoiceSaveData> Choices { get; set; } Property Value Type Description List<><OutputChoiceSaveData> NodeID The unique ID of the node. Each node has a unique ID. Declaration public string NodeID { get; set; } Property Value Type Description string Methods Init(string, ClaimType, InventoryItemData, int, int, List<OutputChoiceSaveData>) Declaration public virtual void Init(string nodeID, ClaimType claimType, InventoryItemData claimableItem, int claimableItemAmount, int goldAmount, List<OutputChoiceSaveData> choices) Parameters Type Name Description string nodeID ClaimType claimType InventoryItemData claimableItem int claimableItemAmount int goldAmount List<><OutputChoiceSaveData> choices Init(string, string, DialogueType, List<OutputChoiceSaveData>) Declaration public virtual void Init(string nodeID, string dialogueText, DialogueType dialogueType, List<OutputChoiceSaveData> choices) Parameters Type Name Description string nodeID string dialogueText DialogueType dialogueType List<><OutputChoiceSaveData> choices Init(string, string, InventoryItemData, int, QuestType, List<OutputChoiceSaveData>) Declaration public virtual void Init(string nodeID, string questText, InventoryItemData requestedItem, int requiredItemAmount, QuestType questType, List<OutputChoiceSaveData> choices) Parameters Type Name Description string nodeID string questText InventoryItemData requestedItem int requiredItemAmount QuestType questType List<><OutputChoiceSaveData> choices"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects.NPCDialogueContainerSO.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects.NPCDialogueContainerSO.html",
    "title": "Class NPCDialogueContainerSO | Harvest Grove code documentation",
    "keywords": "Class NPCDialogueContainerSO Data container that holds all the dialogue and quest nodes of a Dialogue DialogueNode Graph. Inheritance object NPCDialogueContainerSO Namespace: City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects Assembly: cs.temp.dll.dll Syntax public class NPCDialogueContainerSO : ScriptableObject Properties Dialogues Declaration public List<DialogueSO> Dialogues { get; set; } Property Value Type Description List<><DialogueSO> FileName Declaration public string FileName { get; set; } Property Value Type Description string QuestRewards Declaration public List<QuestRewardSO> QuestRewards { get; set; } Property Value Type Description List<><QuestRewardSO> Quests Declaration public List<QuestSO> Quests { get; set; } Property Value Type Description List<><QuestSO> Methods GetNodesID() Returns all the IDs of all Dialogue DialogueNodes and Quest DialogueNodes of the Dialogue DialogueNode Graph. Declaration public List<string> GetNodesID() Returns Type Description List<><string> Init(string) Declaration public void Init(string fileName) Parameters Type Name Description string fileName"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects.QuestRewardSO.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects.QuestRewardSO.html",
    "title": "Class QuestRewardSO | Harvest Grove code documentation",
    "keywords": "Class QuestRewardSO Inheritance object NodeSO QuestRewardSO Inherited Members NodeSO.NodeID NodeSO.Choices NodeSO.Init(string, string, DialogueType, List<OutputChoiceSaveData>) NodeSO.Init(string, string, InventoryItemData, int, QuestType, List<OutputChoiceSaveData>) Namespace: City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects Assembly: cs.temp.dll.dll Syntax public class QuestRewardSO : NodeSO Properties ClaimableItem Declaration public InventoryItemData ClaimableItem { get; set; } Property Value Type Description InventoryItemData ClaimableItemAmount Declaration public int ClaimableItemAmount { get; set; } Property Value Type Description int ClaimType Declaration public ClaimType ClaimType { get; set; } Property Value Type Description ClaimType GoldAmount Declaration public int GoldAmount { get; set; } Property Value Type Description int Methods Init(string, ClaimType, InventoryItemData, int, int, List<OutputChoiceSaveData>) Declaration public override void Init(string nodeIDPrefix, ClaimType claimType, InventoryItemData claimableItem, int claimableItemAmount, int goldAmount, List<OutputChoiceSaveData> choices) Parameters Type Name Description string nodeIDPrefix ClaimType claimType InventoryItemData claimableItem int claimableItemAmount int goldAmount List<><OutputChoiceSaveData> choices Overrides NodeSO.Init(string, ClaimType, InventoryItemData, int, int, List<OutputChoiceSaveData>)"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects.QuestSO.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects.QuestSO.html",
    "title": "Class QuestSO | Harvest Grove code documentation",
    "keywords": "Class QuestSO Inheritance object NodeSO QuestSO Inherited Members NodeSO.NodeID NodeSO.Choices NodeSO.Init(string, string, DialogueType, List<OutputChoiceSaveData>) NodeSO.Init(string, ClaimType, InventoryItemData, int, int, List<OutputChoiceSaveData>) Namespace: City.NPC.GraphEditor.DialogueSystem.Scripts.ScriptableObjects Assembly: cs.temp.dll.dll Syntax public class QuestSO : NodeSO Properties QuestText Declaration public string QuestText { get; set; } Property Value Type Description string QuestType Declaration public QuestType QuestType { get; set; } Property Value Type Description QuestType RequestedItem Declaration public InventoryItemData RequestedItem { get; set; } Property Value Type Description InventoryItemData RequiredItemAmount Declaration public int RequiredItemAmount { get; set; } Property Value Type Description int Methods Init(string, string, InventoryItemData, int, QuestType, List<OutputChoiceSaveData>) Declaration public override void Init(string nodeIDPrefix, string questText, InventoryItemData requestedItem, int requiredItemAmount, QuestType questType, List<OutputChoiceSaveData> choices) Parameters Type Name Description string nodeIDPrefix string questText InventoryItemData requestedItem int requiredItemAmount QuestType questType List<><OutputChoiceSaveData> choices Overrides NodeSO.Init(string, string, InventoryItemData, int, QuestType, List<OutputChoiceSaveData>)"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.Utilities.CollectionUtility.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.Utilities.CollectionUtility.html",
    "title": "Class CollectionUtility | Harvest Grove code documentation",
    "keywords": "Class CollectionUtility Inheritance object CollectionUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: City.NPC.GraphEditor.DialogueSystem.Utilities Assembly: cs.temp.dll.dll Syntax public static class CollectionUtility Methods AddItem<T, TK>(SerializableDictionary<T, List<TK>>, T, TK) Declaration public static void AddItem<T, TK>(this SerializableDictionary<T, List<TK>> serializableDictionary, T key, TK value) Parameters Type Name Description SerializableDictionary<, ><T, List<><TK>> serializableDictionary T key TK value Type Parameters Name Description T TK"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.Utilities.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.Utilities.html",
    "title": "Namespace City.NPC.GraphEditor.DialogueSystem.Utilities | Harvest Grove code documentation",
    "keywords": "Namespace City.NPC.GraphEditor.DialogueSystem.Utilities Classes CollectionUtility TextUtility"
  },
  "api/City.NPC.GraphEditor.DialogueSystem.Utilities.TextUtility.html": {
    "href": "api/City.NPC.GraphEditor.DialogueSystem.Utilities.TextUtility.html",
    "title": "Class TextUtility | Harvest Grove code documentation",
    "keywords": "Class TextUtility Inheritance object TextUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: City.NPC.GraphEditor.DialogueSystem.Utilities Assembly: cs.temp.dll.dll Syntax public static class TextUtility Methods RemoveSpecialCharacters(string) Declaration public static string RemoveSpecialCharacters(this string text) Parameters Type Name Description string text Returns Type Description string RemoveWhitespaces(string) Declaration public static string RemoveWhitespaces(this string text) Parameters Type Name Description string text Returns Type Description string"
  },
  "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.ClaimNodeSaveData.html": {
    "href": "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.ClaimNodeSaveData.html",
    "title": "Class ClaimNodeSaveData | Harvest Grove code documentation",
    "keywords": "Class ClaimNodeSaveData Inheritance object NodeSaveData ClaimNodeSaveData Inherited Members NodeSaveData.NodeID NodeSaveData.Position NodeSaveData.OutputContainerChoices object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save Assembly: cs.temp.dll.dll Syntax public class ClaimNodeSaveData : NodeSaveData Properties ClaimableItem Declaration public InventoryItemData ClaimableItem { get; set; } Property Value Type Description InventoryItemData ClaimableItemAmount Declaration public int ClaimableItemAmount { get; set; } Property Value Type Description int ClaimType Declaration public ClaimType ClaimType { get; set; } Property Value Type Description ClaimType GoldAmount Declaration public int GoldAmount { get; set; } Property Value Type Description int"
  },
  "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.DialogueNodeSaveData.html": {
    "href": "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.DialogueNodeSaveData.html",
    "title": "Class DialogueNodeSaveData | Harvest Grove code documentation",
    "keywords": "Class DialogueNodeSaveData Inheritance object NodeSaveData DialogueNodeSaveData Inherited Members NodeSaveData.NodeID NodeSaveData.Position NodeSaveData.OutputContainerChoices object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save Assembly: cs.temp.dll.dll Syntax public class DialogueNodeSaveData : NodeSaveData Properties DialogueType Declaration public DialogueType DialogueType { get; set; } Property Value Type Description DialogueType Text Declaration public string Text { get; set; } Property Value Type Description string"
  },
  "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.GraphSaveDataSO.html": {
    "href": "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.GraphSaveDataSO.html",
    "title": "Class GraphSaveDataSO | Harvest Grove code documentation",
    "keywords": "Class GraphSaveDataSO Inheritance object GraphSaveDataSO Namespace: City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save Assembly: cs.temp.dll.dll Syntax public class GraphSaveDataSO : ScriptableObject Properties ClaimNodes Declaration public List<ClaimNodeSaveData> ClaimNodes { get; set; } Property Value Type Description List<><ClaimNodeSaveData> DialogueNodes Declaration public List<DialogueNodeSaveData> DialogueNodes { get; set; } Property Value Type Description List<><DialogueNodeSaveData> FileName Declaration public string FileName { get; set; } Property Value Type Description string OldNodeNames Declaration public List<string> OldNodeNames { get; set; } Property Value Type Description List<><string> QuestNodes Declaration public List<QuestNodeSaveData> QuestNodes { get; set; } Property Value Type Description List<><QuestNodeSaveData> Methods Initialize(string) Declaration public void Initialize(string fileName) Parameters Type Name Description string fileName"
  },
  "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.html": {
    "href": "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.html",
    "title": "Namespace City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save | Harvest Grove code documentation",
    "keywords": "Namespace City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save Classes ClaimNodeSaveData DialogueNodeSaveData GraphSaveDataSO NodeIDUtility NodeSaveData OutputChoiceSaveData Class used when saving the output container data to OutputChoiceDataSO. QuestNodeSaveData"
  },
  "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.NodeIDUtility.html": {
    "href": "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.NodeIDUtility.html",
    "title": "Class NodeIDUtility | Harvest Grove code documentation",
    "keywords": "Class NodeIDUtility Inheritance object NodeIDUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save Assembly: cs.temp.dll.dll Syntax public static class NodeIDUtility Fields DialogueNodeIDPrefix Declaration public const string DialogueNodeIDPrefix = \"_dialogueNode\" Field Value Type Description string QuestNodeIDPrefix Declaration public const string QuestNodeIDPrefix = \"_questNode\" Field Value Type Description string QuestRewardNodeIDPrefix Declaration public const string QuestRewardNodeIDPrefix = \"_claimNode\" Field Value Type Description string"
  },
  "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.NodeSaveData.html": {
    "href": "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.NodeSaveData.html",
    "title": "Class NodeSaveData | Harvest Grove code documentation",
    "keywords": "Class NodeSaveData Inheritance object NodeSaveData ClaimNodeSaveData DialogueNodeSaveData QuestNodeSaveData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save Assembly: cs.temp.dll.dll Syntax public class NodeSaveData Properties NodeID Declaration public string NodeID { get; set; } Property Value Type Description string OutputContainerChoices Declaration public List<OutputChoiceSaveData> OutputContainerChoices { get; set; } Property Value Type Description List<><OutputChoiceSaveData> Position Declaration public Vector2 Position { get; set; } Property Value Type Description Vector2"
  },
  "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.OutputChoiceSaveData.html": {
    "href": "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.OutputChoiceSaveData.html",
    "title": "Class OutputChoiceSaveData | Harvest Grove code documentation",
    "keywords": "Class OutputChoiceSaveData Class used when saving the output container data to OutputChoiceDataSO. Inheritance object OutputChoiceSaveData Namespace: City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save Assembly: cs.temp.dll.dll Syntax public class OutputChoiceSaveData : IOutputData Properties ChoiceText Declaration public string ChoiceText { get; set; } Property Value Type Description string NextNodeID Declaration public string NextNodeID { get; set; } Property Value Type Description string"
  },
  "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.QuestNodeSaveData.html": {
    "href": "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save.QuestNodeSaveData.html",
    "title": "Class QuestNodeSaveData | Harvest Grove code documentation",
    "keywords": "Class QuestNodeSaveData Inheritance object NodeSaveData QuestNodeSaveData Inherited Members NodeSaveData.NodeID NodeSaveData.Position NodeSaveData.OutputContainerChoices object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: City.NPC.GraphEditor.EditorNode.DialogueSystem.Data.Save Assembly: cs.temp.dll.dll Syntax public class QuestNodeSaveData : NodeSaveData Properties QuestText The text of the quest that will appear in the dialogue box. Declaration public string QuestText { get; set; } Property Value Type Description string QuestType The type of the quest. Declaration public QuestType QuestType { get; set; } Property Value Type Description QuestType RequestedItemAmount The amount of the requested item required to complete the quest. Declaration public int RequestedItemAmount { get; set; } Property Value Type Description int RequestedItemData The item requested in the quest. Declaration public InventoryItemData RequestedItemData { get; set; } Property Value Type Description InventoryItemData"
  },
  "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Graph_Elements.Claim_Node.ClaimType.html": {
    "href": "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Graph_Elements.Claim_Node.ClaimType.html",
    "title": "Enum ClaimType | Harvest Grove code documentation",
    "keywords": "Enum ClaimType Namespace: City.NPC.GraphEditor.EditorNode.DialogueSystem.Graph_Elements.Claim_Node Assembly: cs.temp.dll.dll Syntax public enum ClaimType Fields Name Description Gold Item"
  },
  "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Graph_Elements.Claim_Node.html": {
    "href": "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Graph_Elements.Claim_Node.html",
    "title": "Namespace City.NPC.GraphEditor.EditorNode.DialogueSystem.Graph_Elements.Claim_Node | Harvest Grove code documentation",
    "keywords": "Namespace City.NPC.GraphEditor.EditorNode.DialogueSystem.Graph_Elements.Claim_Node Enums ClaimType"
  },
  "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Utilities.DSStyleUtility.html": {
    "href": "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Utilities.DSStyleUtility.html",
    "title": "Class DSStyleUtility | Harvest Grove code documentation",
    "keywords": "Class DSStyleUtility Inheritance object DSStyleUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: City.NPC.GraphEditor.EditorNode.DialogueSystem.Utilities Assembly: cs.temp.dll.dll Syntax public static class DSStyleUtility Fields DarkBGColor Declaration public static readonly Color DarkBGColor Field Value Type Description Color LightBGColor Declaration public static readonly Color LightBGColor Field Value Type Description Color Methods AddClasses(VisualElement, params string[]) Declaration public static VisualElement AddClasses(this VisualElement element, params string[] classNames) Parameters Type Name Description VisualElement element string[] classNames Returns Type Description VisualElement AddStyleSheets(VisualElement, params string[]) Declaration public static VisualElement AddStyleSheets(this VisualElement element, params string[] styleSheetNames) Parameters Type Name Description VisualElement element string[] styleSheetNames Returns Type Description VisualElement"
  },
  "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Utilities.html": {
    "href": "api/City.NPC.GraphEditor.EditorNode.DialogueSystem.Utilities.html",
    "title": "Namespace City.NPC.GraphEditor.EditorNode.DialogueSystem.Utilities | Harvest Grove code documentation",
    "keywords": "Namespace City.NPC.GraphEditor.EditorNode.DialogueSystem.Utilities Classes DSStyleUtility"
  },
  "api/City.NPC.GraphEditor.GraphEditor.DialogueSystem.Data.Save.html": {
    "href": "api/City.NPC.GraphEditor.GraphEditor.DialogueSystem.Data.Save.html",
    "title": "Namespace City.NPC.GraphEditor.GraphEditor.DialogueSystem.Data.Save | Harvest Grove code documentation",
    "keywords": "Namespace City.NPC.GraphEditor.GraphEditor.DialogueSystem.Data.Save Classes RewardQuestNodeSaveData"
  },
  "api/City.NPC.GraphEditor.GraphEditor.DialogueSystem.Data.Save.RewardQuestNodeSaveData.html": {
    "href": "api/City.NPC.GraphEditor.GraphEditor.DialogueSystem.Data.Save.RewardQuestNodeSaveData.html",
    "title": "Class RewardQuestNodeSaveData | Harvest Grove code documentation",
    "keywords": "Class RewardQuestNodeSaveData Inheritance object RewardQuestNodeSaveData Namespace: City.NPC.GraphEditor.GraphEditor.DialogueSystem.Data.Save Assembly: cs.temp.dll.dll Syntax public class RewardQuestNodeSaveData : DialogueNodeSaveData Properties ClaimableItem Declaration public InventoryItemData ClaimableItem { get; set; } Property Value Type Description InventoryItemData ClaimableItemAmount Declaration public int ClaimableItemAmount { get; set; } Property Value Type Description int ClaimType Declaration public ClaimType ClaimType { get; set; } Property Value Type Description ClaimType GoldAmount Declaration public int GoldAmount { get; set; } Property Value Type Description int"
  },
  "api/City.NPC.html": {
    "href": "api/City.NPC.html",
    "title": "Namespace City.NPC | Harvest Grove code documentation",
    "keywords": "Namespace City.NPC Classes NPC NPC_Data NPCDialogueUI NpcInteractionСontroller NPCsHolderSO Enums NPCType Type of NPC in the game"
  },
  "api/City.NPC.NPC_Data.html": {
    "href": "api/City.NPC.NPC_Data.html",
    "title": "Class NPC_Data | Harvest Grove code documentation",
    "keywords": "Class NPC_Data Inheritance object NPC_Data Namespace: City.NPC Assembly: cs.temp.dll.dll Syntax public class NPC_Data : ScriptableObject Fields ID Declaration public ushort ID Field Value Type Description ushort NpcIcon Declaration public Sprite NpcIcon Field Value Type Description Sprite NpcName Declaration public string NpcName Field Value Type Description string Properties NpcType Declaration public NPCType NpcType { get; } Property Value Type Description NPCType Quests Declaration public List<Quest> Quests { get; set; } Property Value Type Description List<><Quest>"
  },
  "api/City.NPC.NPC.html": {
    "href": "api/City.NPC.NPC.html",
    "title": "Class NPC | Harvest Grove code documentation",
    "keywords": "Class NPC Inheritance object NPC Namespace: City.NPC Assembly: cs.temp.dll.dll Syntax public class NPC : MonoBehaviour Properties NPC_Data Declaration public NPC_Data NPC_Data { get; } Property Value Type Description NPC_Data NPCType Declaration public NPCType NPCType { get; } Property Value Type Description NPCType"
  },
  "api/City.NPC.NPCDialogueUI.html": {
    "href": "api/City.NPC.NPCDialogueUI.html",
    "title": "Class NPCDialogueUI | Harvest Grove code documentation",
    "keywords": "Class NPCDialogueUI Inheritance object NPCDialogueUI Namespace: City.NPC Assembly: cs.temp.dll.dll Syntax public class NPCDialogueUI : MonoBehaviour Methods CloseNpcUI() Closes the NPC panel UI Declaration public void CloseNpcUI() Construct(ICanvasData, IInventoryService) Declaration public void Construct(ICanvasData canvas, IInventoryService inventoryService) Parameters Type Name Description ICanvasData canvas IInventoryService inventoryService InstantiateChoiceButton(out Button) Declaration protected TextMeshProUGUI InstantiateChoiceButton(out Button choiceBtnButton) Parameters Type Name Description Button choiceBtnButton Returns Type Description TextMeshProUGUI"
  },
  "api/City.NPC.NpcInteractionСontroller.html": {
    "href": "api/City.NPC.NpcInteractionСontroller.html",
    "title": "Class NpcInteractionСontroller | Harvest Grove code documentation",
    "keywords": "Class NpcInteractionСontroller Inheritance object NpcInteractionСontroller Namespace: City.NPC Assembly: cs.temp.dll.dll Syntax public class NpcInteractionСontroller : InteractionСontroller Fields NpcInteracted Declaration public static Action<NPC_Data, Dialogue> NpcInteracted Field Value Type Description Action<, ><NPC_Data, Dialogue> Methods Construct(ICanvasData) Declaration public void Construct(ICanvasData canvas) Parameters Type Name Description ICanvasData canvas Interact(CallbackContext) Declaration protected override void Interact(InputAction.CallbackContext _) Parameters Type Name Description InputAction.CallbackContext _"
  },
  "api/City.NPC.NPCsHolderSO.html": {
    "href": "api/City.NPC.NPCsHolderSO.html",
    "title": "Class NPCsHolderSO | Harvest Grove code documentation",
    "keywords": "Class NPCsHolderSO Inheritance object NPCsHolderSO Namespace: City.NPC Assembly: cs.temp.dll.dll Syntax public class NPCsHolderSO : ScriptableObject Fields Npcs Declaration public List<NPC_Data> Npcs Field Value Type Description List<><NPC_Data>"
  },
  "api/City.NPC.NPCType.html": {
    "href": "api/City.NPC.NPCType.html",
    "title": "Enum NPCType | Harvest Grove code documentation",
    "keywords": "Enum NPCType Type of NPC in the game Namespace: City.NPC Assembly: cs.temp.dll.dll Syntax public enum NPCType Fields Name Description Citizen A normal citizen NPC Merchant A merchant NPC that sells items"
  },
  "api/DevConsole.Command.html": {
    "href": "api/DevConsole.Command.html",
    "title": "Class Command | Harvest Grove code documentation",
    "keywords": "Class Command Inheritance object Command GiveItemCommand Namespace: DevConsole Assembly: cs.temp.dll.dll Syntax public class Command : ScriptableObject Fields response Declaration public string response Field Value Type Description string trigger Declaration public string trigger Field Value Type Description string Methods Execute(string[]) The main function of the command Declaration public virtual string Execute(string[] parameters = null) Parameters Type Name Description string[] parameters Returns Type Description string"
  },
  "api/DevConsole.Commands.CommandsListSO.html": {
    "href": "api/DevConsole.Commands.CommandsListSO.html",
    "title": "Class CommandsListSO | Harvest Grove code documentation",
    "keywords": "Class CommandsListSO Inheritance object CommandsListSO Namespace: DevConsole.Commands Assembly: cs.temp.dll.dll Syntax public class CommandsListSO : ScriptableObject Fields commands The list with all the valid commands Declaration public List<Command> commands Field Value Type Description List<><Command> Methods GetCommand(string) Returns the command directly by its trigger input. Declaration public Command GetCommand(string trigger) Parameters Type Name Description string trigger the commands trigger Returns Type Description Command"
  },
  "api/DevConsole.Commands.GiveItemCommand.html": {
    "href": "api/DevConsole.Commands.GiveItemCommand.html",
    "title": "Class GiveItemCommand | Harvest Grove code documentation",
    "keywords": "Class GiveItemCommand Inheritance object Command GiveItemCommand Inherited Members Command.response Command.trigger Namespace: DevConsole.Commands Assembly: cs.temp.dll.dll Syntax public class GiveItemCommand : Command Methods Execute(string[]) Declaration public override string Execute(string[] parameters = null) Parameters Type Name Description string[] parameters Returns Type Description string Overrides Command.Execute(string[])"
  },
  "api/DevConsole.Commands.html": {
    "href": "api/DevConsole.Commands.html",
    "title": "Namespace DevConsole.Commands | Harvest Grove code documentation",
    "keywords": "Namespace DevConsole.Commands Classes CommandsListSO GiveItemCommand"
  },
  "api/DevConsole.DevConsoleInputHandler.html": {
    "href": "api/DevConsole.DevConsoleInputHandler.html",
    "title": "Class DevConsoleInputHandler | Harvest Grove code documentation",
    "keywords": "Class DevConsoleInputHandler Inheritance object DevConsoleInputHandler Namespace: DevConsole Assembly: cs.temp.dll.dll Syntax public class DevConsoleInputHandler : MonoBehaviour Methods Construct(InputsMap) Declaration public void Construct(InputsMap inputs) Parameters Type Name Description InputsMap inputs DisableInput() Declaration public void DisableInput() EnableInput() Declaration public void EnableInput() ProcessCommand() Finds the command corresponding to the input string and runs it Declaration public void ProcessCommand()"
  },
  "api/DevConsole.html": {
    "href": "api/DevConsole.html",
    "title": "Namespace DevConsole | Harvest Grove code documentation",
    "keywords": "Namespace DevConsole Classes Command DevConsoleInputHandler"
  },
  "api/Editor.html": {
    "href": "api/Editor.html",
    "title": "Namespace Editor | Harvest Grove code documentation",
    "keywords": "Namespace Editor Classes SearchableEnumDrawer"
  },
  "api/Editor.SearchableEnumDrawer.html": {
    "href": "api/Editor.SearchableEnumDrawer.html",
    "title": "Class SearchableEnumDrawer | Harvest Grove code documentation",
    "keywords": "Class SearchableEnumDrawer Inheritance object SearchableEnumDrawer Namespace: Editor Assembly: cs.temp.dll.dll Syntax public class SearchableEnumDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Enemies.Vegetable.AttackingVegetable.html": {
    "href": "api/Enemies.Vegetable.AttackingVegetable.html",
    "title": "Class AttackingVegetable | Harvest Grove code documentation",
    "keywords": "Class AttackingVegetable Inheritance object AttackingVegetable Namespace: Enemies.Vegetable Assembly: cs.temp.dll.dll Syntax public class AttackingVegetable : MonoBehaviour Methods Construct(ITileMapService, IManagerData, IOtherData) Declaration public void Construct(ITileMapService tileMapService, IManagerData managerData, IOtherData otherData) Parameters Type Name Description ITileMapService tileMapService IManagerData managerData IOtherData otherData"
  },
  "api/Enemies.Vegetable.AttackingVegetableAI.html": {
    "href": "api/Enemies.Vegetable.AttackingVegetableAI.html",
    "title": "Class AttackingVegetableAI | Harvest Grove code documentation",
    "keywords": "Class AttackingVegetableAI Inheritance object AttackingVegetableAI Namespace: Enemies.Vegetable Assembly: cs.temp.dll.dll Syntax public class AttackingVegetableAI : MonoBehaviour Methods Construct(IManagerData, IPlayerTransfromService) Declaration public void Construct(IManagerData managerData, IPlayerTransfromService playerTransfromService) Parameters Type Name Description IManagerData managerData IPlayerTransfromService playerTransfromService Spawn() Declaration public void Spawn()"
  },
  "api/Enemies.Vegetable.AttackingVegetableHealth.html": {
    "href": "api/Enemies.Vegetable.AttackingVegetableHealth.html",
    "title": "Class AttackingVegetableHealth | Harvest Grove code documentation",
    "keywords": "Class AttackingVegetableHealth Inheritance object AttackingVegetableHealth Namespace: Enemies.Vegetable Assembly: cs.temp.dll.dll Syntax public class AttackingVegetableHealth : MonoBehaviour Methods Construct(IOtherData) Declaration public void Construct(IOtherData otherData) Parameters Type Name Description IOtherData otherData DamageVegetable(ushort) Declaration public void DamageVegetable(ushort damage) Parameters Type Name Description ushort damage"
  },
  "api/Enemies.Vegetable.html": {
    "href": "api/Enemies.Vegetable.html",
    "title": "Namespace Enemies.Vegetable | Harvest Grove code documentation",
    "keywords": "Namespace Enemies.Vegetable Classes AttackingVegetable AttackingVegetableAI AttackingVegetableHealth"
  },
  "api/Global.ActionsCostSO.html": {
    "href": "api/Global.ActionsCostSO.html",
    "title": "Class ActionsCostSO | Harvest Grove code documentation",
    "keywords": "Class ActionsCostSO ScriptableObject holding a dictionary of action costs for each ActionTypeEnum. Inheritance object ActionsCostSO Namespace: Global Assembly: cs.temp.dll.dll Syntax public class ActionsCostSO : ScriptableObject Fields Costs Dictionary mapping ActionTypeEnum to its corresponding ActionCost. Declaration public SerializableDictionary<ActionTypeEnum, ActionCost> Costs Field Value Type Description SerializableDictionary<, ><ActionTypeEnum, ActionCost>"
  },
  "api/Global.ActionSetType.html": {
    "href": "api/Global.ActionSetType.html",
    "title": "Enum ActionSetType | Harvest Grove code documentation",
    "keywords": "Enum ActionSetType Namespace: Global Assembly: cs.temp.dll.dll Syntax public enum ActionSetType Fields Name Description BurnMaterial Default"
  },
  "api/Global.ChunkSO.html": {
    "href": "api/Global.ChunkSO.html",
    "title": "Class ChunkSO | Harvest Grove code documentation",
    "keywords": "Class ChunkSO Inheritance object ChunkSO Namespace: Global Assembly: cs.temp.dll.dll Syntax public class ChunkSO : ScriptableObject Fields Data Declaration public int[] Data Field Value Type Description int[] Height Declaration public int Height Field Value Type Description int Width Declaration public int Width Field Value Type Description int Methods GetTile(int, int) Declaration public int GetTile(int x, int y) Parameters Type Name Description int x int y Returns Type Description int SetTile(int, int, int) Declaration public void SetTile(int x, int y, int value) Parameters Type Name Description int x int y int value"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | Harvest Grove code documentation",
    "keywords": "Namespace Classes ActionsCostSO ScriptableObject holding a dictionary of action costs for each ActionTypeEnum. ChunkSO PlayerInput Provides programmatic access to , , and instances defined in asset \"Assets/Packages/InputSystem/PlayerInputs.inputactions\". RandomTile RebindSaveLoad RecipePrefab SearchableEnumAttribute SearchableEnumPopup SoundHelper Provides helper methods for playing and stopping FMOD sound events StatisticsUIPanel Structs PlayerInput.PlayerActions Provides access to input actions defined in input action map \"Player\". PlayerInput.UIActions Provides access to input actions defined in input action map \"UI\". Interfaces PlayerInput.IPlayerActions Interface to implement callback methods for all input action callbacks associated with input actions defined by \"Player\" which allows adding and removing callbacks. PlayerInput.IUIActions Interface to implement callback methods for all input action callbacks associated with input actions defined by \"UI\" which allows adding and removing callbacks. Enums ActionSetType"
  },
  "api/Global.PlayerInput.html": {
    "href": "api/Global.PlayerInput.html",
    "title": "Class PlayerInput | Harvest Grove code documentation",
    "keywords": "Class PlayerInput Provides programmatic access to , , and instances defined in asset \"Assets/Packages/InputSystem/PlayerInputs.inputactions\". Inheritance object PlayerInput Implements IDisposable Namespace: Global Assembly: cs.temp.dll.dll Syntax public class PlayerInput : IInputActionCollection2, IDisposable Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. Examples using namespace UnityEngine; using UnityEngine.InputSystem; // Example of using an InputActionMap named \"Player\" from a UnityEngine.MonoBehaviour implementing callback interface. public class Example : MonoBehaviour, MyActions.IPlayerActions { private MyActions_Actions m_Actions; // Source code representation of asset. private MyActions_Actions.PlayerActions m_Player; // Source code representation of action map. void Awake() { m_Actions = new MyActions_Actions(); // Create asset object. m_Player = m_Actions.Player; // Extract action map object. m_Player.AddCallbacks(this); // Register callback interface IPlayerActions. } void OnDestroy() { m_Actions.Dispose(); // Destroy asset object. } void OnEnable() { m_Player.Enable(); // Enable all actions within map. } void OnDisable() { m_Player.Disable(); // Disable all actions within map. } #region Interface implementation of MyActions.IPlayerActions // Invoked when \"Move\" action is either started, performed or canceled. public void OnMove(InputAction.CallbackContext context) { Debug.Log($\"OnMove: {context.ReadValue<Vector2>()}\"); } // Invoked when \"Attack\" action is either started, performed or canceled. public void OnAttack(InputAction.CallbackContext context) { Debug.Log($\"OnAttack: {context.ReadValue<float>()}\"); } #endregion } Constructors PlayerInput() Constructs a new instance. Declaration public PlayerInput() Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. Properties asset Provides access to the underlying asset instance. Declaration public InputActionAsset asset { get; } Property Value Type Description InputActionAsset Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. bindingMask Declaration public InputBinding? bindingMask { get; set; } Property Value Type Description InputBinding? Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. bindings Declaration public IEnumerable<InputBinding> bindings { get; } Property Value Type Description IEnumerable<><InputBinding> Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. controlSchemes Declaration public ReadOnlyArray<InputControlScheme> controlSchemes { get; } Property Value Type Description ReadOnlyArray<><InputControlScheme> Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. devices Declaration public ReadOnlyArray<InputDevice>? devices { get; set; } Property Value Type Description ReadOnlyArray<><InputDevice>? Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. Player Provides a new PlayerInput.PlayerActions instance referencing this action map. Declaration public PlayerInput.PlayerActions Player { get; } Property Value Type Description PlayerInput.PlayerActions Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. ScreenshotScheme Provides access to the input control scheme. Declaration public InputControlScheme ScreenshotScheme { get; } Property Value Type Description InputControlScheme Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. UI Provides a new PlayerInput.UIActions instance referencing this action map. Declaration public PlayerInput.UIActions UI { get; } Property Value Type Description PlayerInput.UIActions Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. Methods Contains(InputAction) Declaration public bool Contains(InputAction action) Parameters Type Name Description InputAction action Returns Type Description bool Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. Disable() Declaration public void Disable() Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. Dispose() Destroys this asset and all associated instances. Declaration public void Dispose() Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. Enable() Declaration public void Enable() Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. ~PlayerInput() Declaration protected ~PlayerInput() Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. Examples using namespace UnityEngine; using UnityEngine.InputSystem; // Example of using an InputActionMap named \"Player\" from a UnityEngine.MonoBehaviour implementing callback interface. public class Example : MonoBehaviour, MyActions.IPlayerActions { private MyActions_Actions m_Actions; // Source code representation of asset. private MyActions_Actions.PlayerActions m_Player; // Source code representation of action map. void Awake() { m_Actions = new MyActions_Actions(); // Create asset object. m_Player = m_Actions.Player; // Extract action map object. m_Player.AddCallbacks(this); // Register callback interface IPlayerActions. } void OnDestroy() { m_Actions.Dispose(); // Destroy asset object. } void OnEnable() { m_Player.Enable(); // Enable all actions within map. } void OnDisable() { m_Player.Disable(); // Disable all actions within map. } #region Interface implementation of MyActions.IPlayerActions // Invoked when \"Move\" action is either started, performed or canceled. public void OnMove(InputAction.CallbackContext context) { Debug.Log($\"OnMove: {context.ReadValue<Vector2>()}\"); } // Invoked when \"Attack\" action is either started, performed or canceled. public void OnAttack(InputAction.CallbackContext context) { Debug.Log($\"OnAttack: {context.ReadValue<float>()}\"); } #endregion } FindAction(string, bool) Declaration public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false) Parameters Type Name Description string actionNameOrId bool throwIfNotFound Returns Type Description InputAction Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. FindBinding(InputBinding, out InputAction) Declaration public int FindBinding(InputBinding bindingMask, out InputAction action) Parameters Type Name Description InputBinding bindingMask InputAction action Returns Type Description int Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. GetEnumerator() Declaration public IEnumerator<InputAction> GetEnumerator() Returns Type Description IEnumerator<><InputAction> Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. Implements IDisposable"
  },
  "api/Global.PlayerInput.IPlayerActions.html": {
    "href": "api/Global.PlayerInput.IPlayerActions.html",
    "title": "Interface PlayerInput.IPlayerActions | Harvest Grove code documentation",
    "keywords": "Interface PlayerInput.IPlayerActions Interface to implement callback methods for all input action callbacks associated with input actions defined by \"Player\" which allows adding and removing callbacks. Namespace: Global Assembly: cs.temp.dll.dll Syntax public interface PlayerInput.IPlayerActions Methods OnMove(CallbackContext) Method invoked when associated input action \"Move\" is either , or . Declaration void OnMove(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.PlayerActions.AddCallbacks(PlayerInput.IPlayerActions) PlayerInput.PlayerActions.RemoveCallbacks(PlayerInput.IPlayerActions) OnRun(CallbackContext) Method invoked when associated input action \"Run\" is either , or . Declaration void OnRun(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.PlayerActions.AddCallbacks(PlayerInput.IPlayerActions) PlayerInput.PlayerActions.RemoveCallbacks(PlayerInput.IPlayerActions) OnUseConsumable(CallbackContext) Method invoked when associated input action \"UseConsumable\" is either , or . Declaration void OnUseConsumable(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.PlayerActions.AddCallbacks(PlayerInput.IPlayerActions) PlayerInput.PlayerActions.RemoveCallbacks(PlayerInput.IPlayerActions) See Also PlayerInput.PlayerActions.AddCallbacks(PlayerInput.IPlayerActions) PlayerInput.PlayerActions.RemoveCallbacks(PlayerInput.IPlayerActions)"
  },
  "api/Global.PlayerInput.IUIActions.html": {
    "href": "api/Global.PlayerInput.IUIActions.html",
    "title": "Interface PlayerInput.IUIActions | Harvest Grove code documentation",
    "keywords": "Interface PlayerInput.IUIActions Interface to implement callback methods for all input action callbacks associated with input actions defined by \"UI\" which allows adding and removing callbacks. Namespace: Global Assembly: cs.temp.dll.dll Syntax public interface PlayerInput.IUIActions Methods OnCloseMenu(CallbackContext) Method invoked when associated input action \"CloseMenu\" is either , or . Declaration void OnCloseMenu(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnCollectDrop(CallbackContext) Method invoked when associated input action \"CollectDrop\" is either , or . Declaration void OnCollectDrop(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnDebugMode(CallbackContext) Method invoked when associated input action \"DebugMode\" is either , or . Declaration void OnDebugMode(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnDevConsole(CallbackContext) Method invoked when associated input action \"DevConsole\" is either , or . Declaration void OnDevConsole(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnDividingItems(CallbackContext) Method invoked when associated input action \"DividingItems\" is either , or . Declaration void OnDividingItems(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnDropItemHotbar(CallbackContext) Method invoked when associated input action \"DropItemHotbar\" is either , or . Declaration void OnDropItemHotbar(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnInteract(CallbackContext) Method invoked when associated input action \"Interact\" is either , or . Declaration void OnInteract(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnLeftClick(CallbackContext) Method invoked when associated input action \"LeftClick\" is either , or . Declaration void OnLeftClick(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnMinimap(CallbackContext) Method invoked when associated input action \"Minimap\" is either , or . Declaration void OnMinimap(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnMousePos(CallbackContext) Method invoked when associated input action \"MousePos\" is either , or . Declaration void OnMousePos(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnMouseWheel(CallbackContext) Method invoked when associated input action \"MouseWheel\" is either , or . Declaration void OnMouseWheel(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnMouseWheelRectEdition(CallbackContext) Method invoked when associated input action \"MouseWheelRectEdition\" is either , or . Declaration void OnMouseWheelRectEdition(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnNumpad0(CallbackContext) Method invoked when associated input action \"Numpad0\" is either , or . Declaration void OnNumpad0(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnNumpad1(CallbackContext) Method invoked when associated input action \"Numpad1\" is either , or . Declaration void OnNumpad1(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnNumpad2(CallbackContext) Method invoked when associated input action \"Numpad2\" is either , or . Declaration void OnNumpad2(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnNumpad3(CallbackContext) Method invoked when associated input action \"Numpad3\" is either , or . Declaration void OnNumpad3(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnNumpad4(CallbackContext) Method invoked when associated input action \"Numpad4\" is either , or . Declaration void OnNumpad4(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnNumpad5(CallbackContext) Method invoked when associated input action \"Numpad5\" is either , or . Declaration void OnNumpad5(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnNumpad6(CallbackContext) Method invoked when associated input action \"Numpad6\" is either , or . Declaration void OnNumpad6(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnNumpad7(CallbackContext) Method invoked when associated input action \"Numpad7\" is either , or . Declaration void OnNumpad7(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnNumpad8(CallbackContext) Method invoked when associated input action \"Numpad8\" is either , or . Declaration void OnNumpad8(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnNumpad9(CallbackContext) Method invoked when associated input action \"Numpad9\" is either , or . Declaration void OnNumpad9(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnOpenBackpack(CallbackContext) Method invoked when associated input action \"OpenBackpack\" is either , or . Declaration void OnOpenBackpack(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnPause(CallbackContext) Method invoked when associated input action \"Pause\" is either , or . Declaration void OnPause(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnRightClick(CallbackContext) Method invoked when associated input action \"RightClick\" is either , or . Declaration void OnRightClick(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnRotate(CallbackContext) Method invoked when associated input action \"Rotate\" is either , or . Declaration void OnRotate(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnScreenshot(CallbackContext) Method invoked when associated input action \"Screenshot\" is either , or . Declaration void OnScreenshot(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) OnToggleQuests(CallbackContext) Method invoked when associated input action \"ToggleQuests\" is either , or . Declaration void OnToggleQuests(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions)"
  },
  "api/Global.PlayerInput.PlayerActions.html": {
    "href": "api/Global.PlayerInput.PlayerActions.html",
    "title": "Struct PlayerInput.PlayerActions | Harvest Grove code documentation",
    "keywords": "Struct PlayerInput.PlayerActions Provides access to input actions defined in input action map \"Player\". Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Global Assembly: cs.temp.dll.dll Syntax public struct PlayerInput.PlayerActions Constructors PlayerActions(PlayerInput) Construct a new instance of the input action map wrapper class. Declaration public PlayerActions(PlayerInput wrapper) Parameters Type Name Description PlayerInput wrapper Properties enabled Declaration public bool enabled { get; } Property Value Type Description bool Move Provides access to the underlying input action \"Player/Move\". Declaration public InputAction Move { get; } Property Value Type Description InputAction Run Provides access to the underlying input action \"Player/Run\". Declaration public InputAction Run { get; } Property Value Type Description InputAction UseConsumable Provides access to the underlying input action \"Player/UseConsumable\". Declaration public InputAction UseConsumable { get; } Property Value Type Description InputAction Methods AddCallbacks(IPlayerActions) Adds , and callbacks provided via on all input actions contained in this map. Declaration public void AddCallbacks(PlayerInput.IPlayerActions instance) Parameters Type Name Description PlayerInput.IPlayerActions instance Callback instance. Remarks If instance is null or instance have already been added this method does nothing. See Also PlayerInput.PlayerActions Disable() Declaration public void Disable() Enable() Declaration public void Enable() Get() Provides access to the underlying input action map instance. Declaration public InputActionMap Get() Returns Type Description InputActionMap RemoveCallbacks(IPlayerActions) Unregisters and unregisters all input action callbacks via PlayerInput.PlayerActions.UnregisterCallbacks(PlayerInput.IPlayerActions). Declaration public void RemoveCallbacks(PlayerInput.IPlayerActions instance) Parameters Type Name Description PlayerInput.IPlayerActions instance See Also PlayerInput.PlayerActions.UnregisterCallbacks(PlayerInput.IPlayerActions) SetCallbacks(IPlayerActions) Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via . Declaration public void SetCallbacks(PlayerInput.IPlayerActions instance) Parameters Type Name Description PlayerInput.IPlayerActions instance Remarks If instance is null, calling this method will only unregister all existing callbacks but not register any new callbacks. See Also PlayerInput.PlayerActions.AddCallbacks(PlayerInput.IPlayerActions) PlayerInput.PlayerActions.RemoveCallbacks(PlayerInput.IPlayerActions) PlayerInput.PlayerActions.UnregisterCallbacks(PlayerInput.IPlayerActions) Operators implicit operator InputActionMap(PlayerActions) Implicitly converts an to an instance. Declaration public static implicit operator InputActionMap(PlayerInput.PlayerActions set) Parameters Type Name Description PlayerInput.PlayerActions set Returns Type Description InputActionMap"
  },
  "api/Global.PlayerInput.UIActions.html": {
    "href": "api/Global.PlayerInput.UIActions.html",
    "title": "Struct PlayerInput.UIActions | Harvest Grove code documentation",
    "keywords": "Struct PlayerInput.UIActions Provides access to input actions defined in input action map \"UI\". Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Global Assembly: cs.temp.dll.dll Syntax public struct PlayerInput.UIActions Constructors UIActions(PlayerInput) Construct a new instance of the input action map wrapper class. Declaration public UIActions(PlayerInput wrapper) Parameters Type Name Description PlayerInput wrapper Properties CloseMenu Provides access to the underlying input action \"UI/CloseMenu\". Declaration public InputAction CloseMenu { get; } Property Value Type Description InputAction CollectDrop Provides access to the underlying input action \"UI/CollectDrop\". Declaration public InputAction CollectDrop { get; } Property Value Type Description InputAction DebugMode Provides access to the underlying input action \"UI/DebugMode\". Declaration public InputAction DebugMode { get; } Property Value Type Description InputAction DevConsole Provides access to the underlying input action \"UI/DevConsole\". Declaration public InputAction DevConsole { get; } Property Value Type Description InputAction DividingItems Provides access to the underlying input action \"UI/DividingItems\". Declaration public InputAction DividingItems { get; } Property Value Type Description InputAction DropItemHotbar Provides access to the underlying input action \"UI/DropItemHotbar\". Declaration public InputAction DropItemHotbar { get; } Property Value Type Description InputAction enabled Declaration public bool enabled { get; } Property Value Type Description bool Interact Provides access to the underlying input action \"UI/Interact\". Declaration public InputAction Interact { get; } Property Value Type Description InputAction LeftClick Provides access to the underlying input action \"UI/LeftClick\". Declaration public InputAction LeftClick { get; } Property Value Type Description InputAction Minimap Provides access to the underlying input action \"UI/Minimap\". Declaration public InputAction Minimap { get; } Property Value Type Description InputAction MousePos Provides access to the underlying input action \"UI/MousePos\". Declaration public InputAction MousePos { get; } Property Value Type Description InputAction MouseWheel Provides access to the underlying input action \"UI/MouseWheel\". Declaration public InputAction MouseWheel { get; } Property Value Type Description InputAction MouseWheelRectEdition Provides access to the underlying input action \"UI/MouseWheelRectEdition\". Declaration public InputAction MouseWheelRectEdition { get; } Property Value Type Description InputAction Numpad0 Provides access to the underlying input action \"UI/Numpad0\". Declaration public InputAction Numpad0 { get; } Property Value Type Description InputAction Numpad1 Provides access to the underlying input action \"UI/Numpad1\". Declaration public InputAction Numpad1 { get; } Property Value Type Description InputAction Numpad2 Provides access to the underlying input action \"UI/Numpad2\". Declaration public InputAction Numpad2 { get; } Property Value Type Description InputAction Numpad3 Provides access to the underlying input action \"UI/Numpad3\". Declaration public InputAction Numpad3 { get; } Property Value Type Description InputAction Numpad4 Provides access to the underlying input action \"UI/Numpad4\". Declaration public InputAction Numpad4 { get; } Property Value Type Description InputAction Numpad5 Provides access to the underlying input action \"UI/Numpad5\". Declaration public InputAction Numpad5 { get; } Property Value Type Description InputAction Numpad6 Provides access to the underlying input action \"UI/Numpad6\". Declaration public InputAction Numpad6 { get; } Property Value Type Description InputAction Numpad7 Provides access to the underlying input action \"UI/Numpad7\". Declaration public InputAction Numpad7 { get; } Property Value Type Description InputAction Numpad8 Provides access to the underlying input action \"UI/Numpad8\". Declaration public InputAction Numpad8 { get; } Property Value Type Description InputAction Numpad9 Provides access to the underlying input action \"UI/Numpad9\". Declaration public InputAction Numpad9 { get; } Property Value Type Description InputAction OpenBackpack Provides access to the underlying input action \"UI/OpenBackpack\". Declaration public InputAction OpenBackpack { get; } Property Value Type Description InputAction Pause Provides access to the underlying input action \"UI/Pause\". Declaration public InputAction Pause { get; } Property Value Type Description InputAction RightClick Provides access to the underlying input action \"UI/RightClick\". Declaration public InputAction RightClick { get; } Property Value Type Description InputAction Rotate Provides access to the underlying input action \"UI/Rotate\". Declaration public InputAction Rotate { get; } Property Value Type Description InputAction Screenshot Provides access to the underlying input action \"UI/Screenshot\". Declaration public InputAction Screenshot { get; } Property Value Type Description InputAction ToggleQuests Provides access to the underlying input action \"UI/ToggleQuests\". Declaration public InputAction ToggleQuests { get; } Property Value Type Description InputAction Methods AddCallbacks(IUIActions) Adds , and callbacks provided via on all input actions contained in this map. Declaration public void AddCallbacks(PlayerInput.IUIActions instance) Parameters Type Name Description PlayerInput.IUIActions instance Callback instance. Remarks If instance is null or instance have already been added this method does nothing. See Also PlayerInput.UIActions Disable() Declaration public void Disable() Enable() Declaration public void Enable() Get() Provides access to the underlying input action map instance. Declaration public InputActionMap Get() Returns Type Description InputActionMap RemoveCallbacks(IUIActions) Unregisters and unregisters all input action callbacks via PlayerInput.UIActions.UnregisterCallbacks(PlayerInput.IUIActions). Declaration public void RemoveCallbacks(PlayerInput.IUIActions instance) Parameters Type Name Description PlayerInput.IUIActions instance See Also PlayerInput.UIActions.UnregisterCallbacks(PlayerInput.IUIActions) SetCallbacks(IUIActions) Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via . Declaration public void SetCallbacks(PlayerInput.IUIActions instance) Parameters Type Name Description PlayerInput.IUIActions instance Remarks If instance is null, calling this method will only unregister all existing callbacks but not register any new callbacks. See Also PlayerInput.UIActions.AddCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.RemoveCallbacks(PlayerInput.IUIActions) PlayerInput.UIActions.UnregisterCallbacks(PlayerInput.IUIActions) Operators implicit operator InputActionMap(UIActions) Implicitly converts an to an instance. Declaration public static implicit operator InputActionMap(PlayerInput.UIActions set) Parameters Type Name Description PlayerInput.UIActions set Returns Type Description InputActionMap"
  },
  "api/Global.RandomTile.html": {
    "href": "api/Global.RandomTile.html",
    "title": "Class RandomTile | Harvest Grove code documentation",
    "keywords": "Class RandomTile Inheritance object RandomTile Namespace: Global Assembly: cs.temp.dll.dll Syntax public class RandomTile : Tile Fields randomSprites Declaration public Sprite[] randomSprites Field Value Type Description Sprite[] Methods GetTileData(Vector3Int, ITilemap, ref TileData) Declaration public override void GetTileData(Vector3Int position, ITilemap tilemap, ref TileData tileData) Parameters Type Name Description Vector3Int position ITilemap tilemap TileData tileData"
  },
  "api/Global.RebindSaveLoad.html": {
    "href": "api/Global.RebindSaveLoad.html",
    "title": "Class RebindSaveLoad | Harvest Grove code documentation",
    "keywords": "Class RebindSaveLoad Inheritance object RebindSaveLoad Namespace: Global Assembly: cs.temp.dll.dll Syntax public class RebindSaveLoad : MonoBehaviour Fields actions Declaration public InputActionAsset actions Field Value Type Description InputActionAsset Methods OnDisable() Declaration public void OnDisable() OnEnable() Declaration public void OnEnable()"
  },
  "api/Global.RecipePrefab.html": {
    "href": "api/Global.RecipePrefab.html",
    "title": "Class RecipePrefab | Harvest Grove code documentation",
    "keywords": "Class RecipePrefab Inheritance object RecipePrefab Namespace: Global Assembly: cs.temp.dll.dll Syntax public class RecipePrefab : MonoBehaviour Methods AssingInfo(CookingRecipeSO) Declaration public void AssingInfo(CookingRecipeSO recipe) Parameters Type Name Description CookingRecipeSO recipe ShowRecipeInfo() Declaration public void ShowRecipeInfo()"
  },
  "api/Global.SearchableEnumAttribute.html": {
    "href": "api/Global.SearchableEnumAttribute.html",
    "title": "Class SearchableEnumAttribute | Harvest Grove code documentation",
    "keywords": "Class SearchableEnumAttribute Inheritance object SearchableEnumAttribute Namespace: Global Assembly: cs.temp.dll.dll Syntax public class SearchableEnumAttribute : PropertyAttribute"
  },
  "api/Global.SearchableEnumPopup.html": {
    "href": "api/Global.SearchableEnumPopup.html",
    "title": "Class SearchableEnumPopup | Harvest Grove code documentation",
    "keywords": "Class SearchableEnumPopup Inheritance object SearchableEnumPopup Namespace: Global Assembly: cs.temp.dll.dll Syntax public class SearchableEnumPopup : EditorWindow Methods Show(SerializedProperty) Declaration public static void Show(SerializedProperty prop) Parameters Type Name Description SerializedProperty prop"
  },
  "api/Global.SoundHelper.html": {
    "href": "api/Global.SoundHelper.html",
    "title": "Class SoundHelper | Harvest Grove code documentation",
    "keywords": "Class SoundHelper Provides helper methods for playing and stopping FMOD sound events Inheritance object SoundHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Global Assembly: cs.temp.dll.dll Syntax public static class SoundHelper Methods PlaySound(PLAYBACK_STATE, EventInstance) Starts the given sound event if it is not already playing. Declaration public static void PlaySound(PLAYBACK_STATE state, EventInstance sound) Parameters Type Name Description PLAYBACK_STATE state The current playback state of the sound. EventInstance sound The FMOD event instance to play. StopSound(PLAYBACK_STATE, EventInstance) Stops the given sound event if it is currently playing, allowing it to fade out. Declaration public static void StopSound(PLAYBACK_STATE state, EventInstance sound) Parameters Type Name Description PLAYBACK_STATE state The current playback state of the sound. EventInstance sound The FMOD event instance to stop."
  },
  "api/Global.StatisticsUIPanel.html": {
    "href": "api/Global.StatisticsUIPanel.html",
    "title": "Class StatisticsUIPanel | Harvest Grove code documentation",
    "keywords": "Class StatisticsUIPanel Inheritance object StatisticsUIPanel Namespace: Global Assembly: cs.temp.dll.dll Syntax public class StatisticsUIPanel : MonoBehaviour Fields Amount Declaration public GameObject Amount Field Value Type Description GameObject PostText Declaration public GameObject PostText Field Value Type Description GameObject PreText Declaration public GameObject PreText Field Value Type Description GameObject Title Declaration public GameObject Title Field Value Type Description GameObject Properties AmountString Declaration public string AmountString { get; } Property Value Type Description string PostTextString Declaration public string PostTextString { get; } Property Value Type Description string PreTextString Declaration public string PreTextString { get; } Property Value Type Description string TitleString Declaration public string TitleString { get; } Property Value Type Description string Methods ToString() Declaration public override string ToString() Returns Type Description string"
  },
  "api/Helpers.AssetMenuNames.html": {
    "href": "api/Helpers.AssetMenuNames.html",
    "title": "Class AssetMenuNames | Harvest Grove code documentation",
    "keywords": "Class AssetMenuNames Provides constant string values for asset menu names and their subcategories Inheritance object AssetMenuNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers Assembly: cs.temp.dll.dll Syntax public static class AssetMenuNames Fields Animals Declaration public const string Animals = \"Animals/\" Field Value Type Description string AnimalsSprites Declaration public const string AnimalsSprites = \"Animals/Sprites/\" Field Value Type Description string BuildableRoot Declaration public const string BuildableRoot = \"Buildable/\" Field Value Type Description string BuildingSO Declaration public const string BuildingSO = \"Buildable/Building/\" Field Value Type Description string ConstructionSO Declaration public const string ConstructionSO = \"Buildable/Construction/\" Field Value Type Description string CookingSystem Declaration public const string CookingSystem = \"Cooking System/\" Field Value Type Description string CraftingSystem Declaration public const string CraftingSystem = \"Crafting System/\" Field Value Type Description string CropStagesSOs Declaration public const string CropStagesSOs = \"Plantable/Crop Stages/\" Field Value Type Description string CustomPlacingRules Declaration public const string CustomPlacingRules = \"Buildable/Custom Placing Rules/\" Field Value Type Description string InventoryItems Declaration public const string InventoryItems = \"Inventory System/Items/\" Field Value Type Description string InventorySystem Declaration public const string InventorySystem = \"Inventory System/\" Field Value Type Description string Managers Declaration public const string Managers = \"Managers/\" Field Value Type Description string Map Declaration public const string Map = \"Map/\" Field Value Type Description string MapAlgorithms Declaration public const string MapAlgorithms = \"Map/Algorithms/\" Field Value Type Description string MapObjects Declaration public const string MapObjects = \"Map/Objects/\" Field Value Type Description string MapTiles Declaration public const string MapTiles = \"Map/Tiles/\" Field Value Type Description string Other Declaration public const string Other = \"Other/\" Field Value Type Description string Plantable Declaration public const string Plantable = \"Plantable/\" Field Value Type Description string SaplingStagesSOs Declaration public const string SaplingStagesSOs = \"Plantable/Sapling Stages/\" Field Value Type Description string SavingSos Declaration public const string SavingSos = \"Saving System/Savable SOs/\" Field Value Type Description string SavingSystem Declaration public const string SavingSystem = \"Saving System/\" Field Value Type Description string Tools Declaration public const string Tools = \"Tools/\" Field Value Type Description string Travelling Declaration public const string Travelling = \"Traveling/\" Field Value Type Description string Tutorial Declaration public const string Tutorial = \"Tutorial/\" Field Value Type Description string"
  },
  "api/Helpers.CustomDictionary.html": {
    "href": "api/Helpers.CustomDictionary.html",
    "title": "Namespace Helpers.CustomDictionary | Harvest Grove code documentation",
    "keywords": "Namespace Helpers.CustomDictionary Classes SerializableDictionary SerializableDictionary<TKey, TValue> It's a custom implementation of a dictionary that can be serialized by Unity Structs SerializableDictionary<TKey, TValue>.SerializableKeyValuePair"
  },
  "api/Helpers.CustomDictionary.SerializableDictionary-2.html": {
    "href": "api/Helpers.CustomDictionary.SerializableDictionary-2.html",
    "title": "Class SerializableDictionary<TKey, TValue> | Harvest Grove code documentation",
    "keywords": "Class SerializableDictionary<TKey, TValue> It's a custom implementation of a dictionary that can be serialized by Unity Inheritance object SerializableDictionary SerializableDictionary<TKey, TValue> Implements IDictionary<, ><TKey, TValue> ISerializationCallbackReceiver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.CustomDictionary Assembly: cs.temp.dll.dll Syntax public class SerializableDictionary<TKey, TValue> : SerializableDictionary, IDictionary<TKey, TValue>, ISerializationCallbackReceiver Type Parameters Name Description TKey TValue Constructors SerializableDictionary() Declaration public SerializableDictionary() SerializableDictionary(IDictionary<TKey, TValue>) Declaration public SerializableDictionary(IDictionary<TKey, TValue> dictionary) Parameters Type Name Description IDictionary<, ><TKey, TValue> dictionary Properties Count Declaration public int Count { get; } Property Value Type Description int IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool this[TKey] Declaration public TValue this[TKey key] { get; set; } Parameters Type Name Description TKey key Property Value Type Description TValue Keys Declaration public ICollection<TKey> Keys { get; } Property Value Type Description ICollection<><TKey> Values Declaration public ICollection<TValue> Values { get; } Property Value Type Description ICollection<><TValue> Methods Add(TKey, TValue) Declaration public void Add(TKey key, TValue value) Parameters Type Name Description TKey key TValue value Add(KeyValuePair<TKey, TValue>) Declaration public void Add(KeyValuePair<TKey, TValue> kvp) Parameters Type Name Description KeyValuePair<, ><TKey, TValue> kvp Clear() Declaration public void Clear() Contains(KeyValuePair<TKey, TValue>) Declaration public bool Contains(KeyValuePair<TKey, TValue> kvp) Parameters Type Name Description KeyValuePair<, ><TKey, TValue> kvp Returns Type Description bool ContainsKey(TKey) Declaration public bool ContainsKey(TKey key) Parameters Type Name Description TKey key Returns Type Description bool CopyTo(KeyValuePair<TKey, TValue>[], int) Declaration public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair<, ><TKey, TValue>[] array int arrayIndex GetEnumerator() Declaration public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator() Returns Type Description IEnumerator<><KeyValuePair<, ><TKey, TValue>> OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() Remove(TKey) Declaration public bool Remove(TKey key) Parameters Type Name Description TKey key Returns Type Description bool Remove(KeyValuePair<TKey, TValue>) Declaration public bool Remove(KeyValuePair<TKey, TValue> kvp) Parameters Type Name Description KeyValuePair<, ><TKey, TValue> kvp Returns Type Description bool TryGetValue(TKey, out TValue) Declaration public bool TryGetValue(TKey key, out TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description bool Implements IDictionary<, > ISerializationCallbackReceiver"
  },
  "api/Helpers.CustomDictionary.SerializableDictionary-2.SerializableKeyValuePair.html": {
    "href": "api/Helpers.CustomDictionary.SerializableDictionary-2.SerializableKeyValuePair.html",
    "title": "Struct SerializableDictionary<TKey, TValue>.SerializableKeyValuePair | Harvest Grove code documentation",
    "keywords": "Struct SerializableDictionary<TKey, TValue>.SerializableKeyValuePair Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Helpers.CustomDictionary Assembly: cs.temp.dll.dll Syntax public struct SerializableDictionary<TKey, TValue>.SerializableKeyValuePair Constructors SerializableKeyValuePair(TKey, TValue) Declaration public SerializableKeyValuePair(TKey key, TValue value) Parameters Type Name Description TKey key TValue value Fields Key Declaration public TKey Key Field Value Type Description TKey Value Declaration public TValue Value Field Value Type Description TValue Methods SetValue(TValue) Declaration public void SetValue(TValue value) Parameters Type Name Description TValue value"
  },
  "api/Helpers.CustomDictionary.SerializableDictionary.html": {
    "href": "api/Helpers.CustomDictionary.SerializableDictionary.html",
    "title": "Class SerializableDictionary | Harvest Grove code documentation",
    "keywords": "Class SerializableDictionary Inheritance object SerializableDictionary SerializableDictionary<TKey, TValue> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.CustomDictionary Assembly: cs.temp.dll.dll Syntax public class SerializableDictionary"
  },
  "api/Helpers.CustomEditors.Consumables.ConsumableExporter.ConsumableData.html": {
    "href": "api/Helpers.CustomEditors.Consumables.ConsumableExporter.ConsumableData.html",
    "title": "Class ConsumableExporter.ConsumableData | Harvest Grove code documentation",
    "keywords": "Class ConsumableExporter.ConsumableData Inheritance object ConsumableExporter.ConsumableData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.CustomEditors.Consumables Assembly: cs.temp.dll.dll Syntax [Serializable] public class ConsumableExporter.ConsumableData Fields DisplayName Declaration public string DisplayName Field Value Type Description string HungerRegeneration Declaration public int HungerRegeneration Field Value Type Description int ItemID Declaration public int ItemID Field Value Type Description int ThirstRegeneration Declaration public int ThirstRegeneration Field Value Type Description int Type Declaration public string Type Field Value Type Description string"
  },
  "api/Helpers.CustomEditors.Consumables.ConsumableExporter.ConsumableDataList.html": {
    "href": "api/Helpers.CustomEditors.Consumables.ConsumableExporter.ConsumableDataList.html",
    "title": "Class ConsumableExporter.ConsumableDataList | Harvest Grove code documentation",
    "keywords": "Class ConsumableExporter.ConsumableDataList Inheritance object ConsumableExporter.ConsumableDataList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.CustomEditors.Consumables Assembly: cs.temp.dll.dll Syntax [Serializable] public class ConsumableExporter.ConsumableDataList Fields Items Declaration public List<ConsumableExporter.ConsumableData> Items Field Value Type Description List<><ConsumableData>"
  },
  "api/Helpers.CustomEditors.Consumables.ConsumableExporter.html": {
    "href": "api/Helpers.CustomEditors.Consumables.ConsumableExporter.html",
    "title": "Class ConsumableExporter | Harvest Grove code documentation",
    "keywords": "Class ConsumableExporter Inheritance object ConsumableExporter Namespace: Helpers.CustomEditors.Consumables Assembly: cs.temp.dll.dll Syntax public class ConsumableExporter : EditorWindow Methods ShowWindow() Declaration public static void ShowWindow()"
  },
  "api/Helpers.CustomEditors.Consumables.ConsumableImporter.html": {
    "href": "api/Helpers.CustomEditors.Consumables.ConsumableImporter.html",
    "title": "Class ConsumableImporter | Harvest Grove code documentation",
    "keywords": "Class ConsumableImporter Inheritance object ConsumableImporter Namespace: Helpers.CustomEditors.Consumables Assembly: cs.temp.dll.dll Syntax public class ConsumableImporter : EditorWindow Methods ShowWindow() Declaration public static void ShowWindow()"
  },
  "api/Helpers.CustomEditors.Consumables.html": {
    "href": "api/Helpers.CustomEditors.Consumables.html",
    "title": "Namespace Helpers.CustomEditors.Consumables | Harvest Grove code documentation",
    "keywords": "Namespace Helpers.CustomEditors.Consumables Classes ConsumableExporter ConsumableExporter.ConsumableData ConsumableExporter.ConsumableDataList ConsumableImporter"
  },
  "api/Helpers.Enums.HoneyJarStatus.html": {
    "href": "api/Helpers.Enums.HoneyJarStatus.html",
    "title": "Enum HoneyJarStatus | Harvest Grove code documentation",
    "keywords": "Enum HoneyJarStatus Namespace: Helpers.Enums Assembly: cs.temp.dll.dll Syntax public enum HoneyJarStatus Fields Name Description Collect Ready Waiting"
  },
  "api/Helpers.Enums.HoneyJarStatusExtension.html": {
    "href": "api/Helpers.Enums.HoneyJarStatusExtension.html",
    "title": "Class HoneyJarStatusExtension | Harvest Grove code documentation",
    "keywords": "Class HoneyJarStatusExtension Inheritance object HoneyJarStatusExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.Enums Assembly: cs.temp.dll.dll Syntax public static class HoneyJarStatusExtension Methods GetDescription(HoneyJarStatus) Declaration public static string GetDescription(HoneyJarStatus status) Parameters Type Name Description HoneyJarStatus status Returns Type Description string"
  },
  "api/Helpers.Enums.html": {
    "href": "api/Helpers.Enums.html",
    "title": "Namespace Helpers.Enums | Harvest Grove code documentation",
    "keywords": "Namespace Helpers.Enums Classes HoneyJarStatusExtension Enums HoneyJarStatus"
  },
  "api/Helpers.ErrorLog.html": {
    "href": "api/Helpers.ErrorLog.html",
    "title": "Class ErrorLog | Harvest Grove code documentation",
    "keywords": "Class ErrorLog Inheritance object ErrorLog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers Assembly: cs.temp.dll.dll Syntax public static class ErrorLog Properties ErrorLogPath Declaration public static string ErrorLogPath { get; } Property Value Type Description string Methods CreateErrorLog(Exception, WorldDataSO) Creates an error log with the details of the provided exception and optional WorldDataSO instance If a WorldDataSO instance is provided, its data will appear to the error log Declaration public static void CreateErrorLog(Exception ex, WorldDataSO so = null) Parameters Type Name Description Exception ex The exception for which the error log is being created WorldDataSO so Optional. The WorldDataSO instance containing additional data to be logged"
  },
  "api/Helpers.HelpingClasses.AnimalsHelper.html": {
    "href": "api/Helpers.HelpingClasses.AnimalsHelper.html",
    "title": "Class AnimalsHelper | Harvest Grove code documentation",
    "keywords": "Class AnimalsHelper Inheritance object AnimalsHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses Assembly: cs.temp.dll.dll Syntax public static class AnimalsHelper Methods CanBeBred(int, List<MainAnimalsEnum>, bool, AnimalHousingManager) Determines whether an animal with the given id can be bred Declaration public static bool CanBeBred(int ID, List<MainAnimalsEnum> availableAnimals, bool showPopup, AnimalHousingManager animalHousingManager) Parameters Type Name Description int ID List<><MainAnimalsEnum> availableAnimals The list of available animals bool showPopup If the popup should be shown AnimalHousingManager animalHousingManager Returns Type Description bool True if the animal can be bred, False otherwise GetAnimalType(AnimalInfo) Get the animal type based on if it has secondary type or not Declaration public static string GetAnimalType(AnimalInfo animalInfo) Parameters Type Name Description AnimalInfo animalInfo Information about the animal Returns Type Description string An animal type GetAnimalTypeFromID(int, AnimalHousingManager) Declaration public static MainAnimalsEnum GetAnimalTypeFromID(int ID, AnimalHousingManager animalHousingManager) Parameters Type Name Description int ID AnimalHousingManager animalHousingManager Returns Type Description MainAnimalsEnum GetClosestFoodPosition(int, MainAnimalsEnum, MapBuildingsDataSO, AnimalsDatabase) Returns the closest food position to the animal Declaration public static (Vector2, IFeedSource) GetClosestFoodPosition(int ID, MainAnimalsEnum animalType, MapBuildingsDataSO mapBuildingsData, AnimalsDatabase animalDatabase) Parameters Type Name Description int ID MainAnimalsEnum animalType MapBuildingsDataSO mapBuildingsData AnimalsDatabase animalDatabase Returns Type Description (Vector2, IFeedSource) GetFeedType(MainAnimalsEnum, AnimalsDatabase) Declaration public static FeedType GetFeedType(MainAnimalsEnum animalType, AnimalsDatabase animalDatabase) Parameters Type Name Description MainAnimalsEnum animalType AnimalsDatabase animalDatabase Returns Type Description FeedType GetScaterringDirection(int, int, Transform) Gets the direction of the scatering {if something si fucked, its probably this class} Declaration public static int GetScaterringDirection(int xPos, int yPos, Transform playerPos) Parameters Type Name Description int xPos int yPos Transform playerPos Returns Type Description int ShowPopup(DeathCaseEnum, ushort, List<string>) Declaration public static void ShowPopup(DeathCaseEnum deathCaseEnum, ushort deadAnimals, List<string> deadAnimalsName) Parameters Type Name Description DeathCaseEnum deathCaseEnum ushort deadAnimals List<><string> deadAnimalsName"
  },
  "api/Helpers.HelpingClasses.AnyMaterialSO.html": {
    "href": "api/Helpers.HelpingClasses.AnyMaterialSO.html",
    "title": "Class AnyMaterialSO | Harvest Grove code documentation",
    "keywords": "Class AnyMaterialSO Inheritance object AnyMaterialSO Namespace: Helpers.HelpingClasses Assembly: cs.temp.dll.dll Syntax public class AnyMaterialSO : ScriptableObject Fields Materials Declaration public List<LoopingMaterials> Materials Field Value Type Description List<><LoopingMaterials> Methods LoopThroughMaterials(Image, MaterialType) Declaration public IEnumerator LoopThroughMaterials(Image image, MaterialType type) Parameters Type Name Description Image image MaterialType type Returns Type Description IEnumerator"
  },
  "api/Helpers.HelpingClasses.Buildings.BuildingsHelper.html": {
    "href": "api/Helpers.HelpingClasses.Buildings.BuildingsHelper.html",
    "title": "Class BuildingsHelper | Harvest Grove code documentation",
    "keywords": "Class BuildingsHelper Inheritance object BuildingsHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses.Buildings Assembly: cs.temp.dll.dll Syntax public static class BuildingsHelper Methods BuildCampfire(Vector2) Declaration public static void BuildCampfire(Vector2 buildingPosition) Parameters Type Name Description Vector2 buildingPosition BuildChest(Chest, BuildingSO, Vector2) Declaration public static void BuildChest(Chest chest, BuildingSO buildingSo, Vector2 buildingPosition) Parameters Type Name Description Chest chest BuildingSO buildingSo Vector2 buildingPosition"
  },
  "api/Helpers.HelpingClasses.Buildings.BuildingsService.html": {
    "href": "api/Helpers.HelpingClasses.Buildings.BuildingsService.html",
    "title": "Class BuildingsService | Harvest Grove code documentation",
    "keywords": "Class BuildingsService Inheritance object BuildingsService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses.Buildings Assembly: cs.temp.dll.dll Syntax public class BuildingsService Constructors BuildingsService(GameContextManager) Declaration public BuildingsService(GameContextManager gameContextManager) Parameters Type Name Description GameContextManager gameContextManager Methods BuildCampfire(Vector2) Declaration public void BuildCampfire(Vector2 buildingPosition) Parameters Type Name Description Vector2 buildingPosition BuildChest(Chest, BuildingSO, Vector2) Declaration public void BuildChest(Chest chest, BuildingSO buildingSo, Vector2 buildingPosition) Parameters Type Name Description Chest chest BuildingSO buildingSo Vector2 buildingPosition"
  },
  "api/Helpers.HelpingClasses.Buildings.html": {
    "href": "api/Helpers.HelpingClasses.Buildings.html",
    "title": "Namespace Helpers.HelpingClasses.Buildings | Harvest Grove code documentation",
    "keywords": "Namespace Helpers.HelpingClasses.Buildings Classes BuildingsHelper BuildingsService"
  },
  "api/Helpers.HelpingClasses.Extensions.html": {
    "href": "api/Helpers.HelpingClasses.Extensions.html",
    "title": "Class Extensions | Harvest Grove code documentation",
    "keywords": "Class Extensions Inheritance object Extensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses Assembly: cs.temp.dll.dll Syntax public static class Extensions Methods SplitCamelCase(string) Declaration public static string SplitCamelCase(string input) Parameters Type Name Description string input Returns Type Description string SplitNPC_Dialogue(string) Declaration public static string[] SplitNPC_Dialogue(string input) Parameters Type Name Description string input Returns Type Description string[]"
  },
  "api/Helpers.HelpingClasses.Helper.Helper.html": {
    "href": "api/Helpers.HelpingClasses.Helper.Helper.html",
    "title": "Class Helper | Harvest Grove code documentation",
    "keywords": "Class Helper Here you can find every helper class Inheritance object Helper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses.Helper Assembly: cs.temp.dll.dll Syntax public static class Helper Fields SpawnedObjectsCount Declaration public static ushort SpawnedObjectsCount Field Value Type Description ushort Methods ConvertIslandToScene(IslandsDictionaryNames) Declaration public static SceneEnum ConvertIslandToScene(IslandsDictionaryNames islandName) Parameters Type Name Description IslandsDictionaryNames islandName Returns Type Description SceneEnum ConvertSceneToIsland(SceneEnum) Declaration public static IslandsDictionaryNames ConvertSceneToIsland(SceneEnum sceneName) Parameters Type Name Description SceneEnum sceneName Returns Type Description IslandsDictionaryNames ExtractWords(string) Declaration public static string ExtractWords(string input) Parameters Type Name Description string input Returns Type Description string FadeIn(Image, float) Fade the image in Declaration public static void FadeIn(this Image image, float duration) Parameters Type Name Description Image image float duration FadeOut(Image, float) Fade the image out Declaration public static void FadeOut(this Image image, float duration) Parameters Type Name Description Image image float duration GetDictionarySettings<T>() Get the json settings for the dictionary {only when it has vector2 as key!!!} Declaration public static JsonSerializerSettings GetDictionarySettings<T>() Returns Type Description JsonSerializerSettings Type Parameters Name Description T GetHoneyText(BeeDictionary) Gets the text for honey status based on the honey status in the bee dictionary Declaration public static string GetHoneyText(BeeDictionary beeDictionary) Parameters Type Name Description BeeDictionary beeDictionary Returns Type Description string GetInventoryService() Declaration public static IInventoryService GetInventoryService() Returns Type Description IInventoryService GetMaterialTypeAtPositionHotbar() Gets the material type of the item at the current slot position in the hotbar {ONLY FOR TOOLS!} Declaration public static MaterialType GetMaterialTypeAtPositionHotbar() Returns Type Description MaterialType GetNormalizedDirectionFromPlayer(int, int) Declaration public static Vector2 GetNormalizedDirectionFromPlayer(int x, int y) Parameters Type Name Description int x int y Returns Type Description Vector2 GetNormalizedDirectionFromPlayer(Vector2Int) Declaration public static Vector2 GetNormalizedDirectionFromPlayer(Vector2Int clickPosition) Parameters Type Name Description Vector2Int clickPosition Returns Type Description Vector2 GetTilesPlayerIsOn(Vector2, TilemapStructure) Gets all the tiles player is standing on Declaration public static List<Vector2Int> GetTilesPlayerIsOn(Vector2 position, TilemapStructure tilemapStructure) Parameters Type Name Description Vector2 position Player's position in world coordinates TilemapStructure tilemapStructure Returns Type Description List<><Vector2Int> List of unique tiles (Vector2Int) the player is standing on or nearby him GetVector2IntMousePosition(Vector2) Convert mouse position to Vector2Int Declaration public static Vector2Int GetVector2IntMousePosition(Vector2 position) Parameters Type Name Description Vector2 position Where the mouse clicked (vector2) Returns Type Description Vector2Int Int vector with the mouse position in the world coordinates GetWateredFieldID(int, int) Declaration public static int GetWateredFieldID(int xPos, int yPos) Parameters Type Name Description int xPos int yPos Returns Type Description int HasEnoughItemsAtPositionHotbar() Checks if the item on the current slot position in hotbar has enough items {i.e. is greater than 0} Declaration public static bool HasEnoughItemsAtPositionHotbar() Returns Type Description bool IsPlayerNearby(Vector2, TilemapStructure, int, int, bool) Determines if a player is nearby a given position on a tilemap Declaration public static bool IsPlayerNearby(Vector2 position, TilemapStructure tilemapStructure, int mouseXPos, int mouseYPos, bool takePlayerInAccount = true) Parameters Type Name Description Vector2 position The player's position as a Vector2 TilemapStructure tilemapStructure The TilemapStructure containing the tilemap data int mouseXPos The X position of the mouse cursor int mouseYPos The Y position of the mouse cursor bool takePlayerInAccount Returns Type Description bool true if the player is nearby, false otherwise IsPointerOverUIObject() Checks if the clicked point on the screen has some objects in his way Declaration public static bool IsPointerOverUIObject() Returns Type Description bool If it has hit something IsWaterTile(int, int) Declaration public static bool IsWaterTile(int posX, int posY) Parameters Type Name Description int posX int posY Returns Type Description bool IsWaterTile(Vector2Int) Checks if the tile is water Declaration public static bool IsWaterTile(Vector2Int position) Parameters Type Name Description Vector2Int position Returns Type Description bool IsWaterTile(Vector3Int) Declaration public static bool IsWaterTile(Vector3Int position) Parameters Type Name Description Vector3Int position Returns Type Description bool RemoveCollidersFromTilesAtPositions<T>(Tilemap, IEnumerable<Vector3Int>) Removes colliders from tiles at certain position(s) Declaration public static void RemoveCollidersFromTilesAtPositions<T>(Tilemap tilemap, IEnumerable<Vector3Int> positions) where T : TileBase Parameters Type Name Description Tilemap tilemap IEnumerable<><Vector3Int> positions Type Parameters Name Description T The type of tile SpawnItemOnTheGround(Vector2Int, InventoryItemData, ushort) Declaration public static void SpawnItemOnTheGround(Vector2Int pos, InventoryItemData item, ushort amount) Parameters Type Name Description Vector2Int pos InventoryItemData item ushort amount SpawnItemOnTheGround(Vector3, InventoryItemData, int, ToolInstance) Declaration public static void SpawnItemOnTheGround(Vector3 pos, InventoryItemData item, int amount, ToolInstance toolInstance) Parameters Type Name Description Vector3 pos InventoryItemData item int amount ToolInstance toolInstance SpawnItemOnTheGround(Vector3, InventoryItemData, int) Spawns the item on the specific position (ONLY PICKUP ITEM!!) Declaration public static void SpawnItemOnTheGround(Vector3 pos, InventoryItemData item, int amount) Parameters Type Name Description Vector3 pos InventoryItemData item int amount SpawnItemOnTheGround(Vector3, InventoryItemData, ushort) Declaration public static void SpawnItemOnTheGround(Vector3 pos, InventoryItemData item, ushort amount) Parameters Type Name Description Vector3 pos InventoryItemData item ushort amount TileName(int) Get the name of the tile based on it's id Declaration public static string TileName(int id) Parameters Type Name Description int id Returns Type Description string"
  },
  "api/Helpers.HelpingClasses.Helper.HelperService.html": {
    "href": "api/Helpers.HelpingClasses.Helper.HelperService.html",
    "title": "Class HelperService | Harvest Grove code documentation",
    "keywords": "Class HelperService Inheritance object HelperService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses.Helper Assembly: cs.temp.dll.dll Syntax public class HelperService Constructors HelperService(GameContextManager) Declaration public HelperService(GameContextManager gameContextManager) Parameters Type Name Description GameContextManager gameContextManager Fields Grid Declaration public readonly TileGrid Grid Field Value Type Description TileGrid InventoryService Declaration public readonly IInventoryService InventoryService Field Value Type Description IInventoryService ObjectPooling Declaration public readonly ObjectPooling ObjectPooling Field Value Type Description ObjectPooling PlayerTransfromService Declaration public readonly IPlayerTransfromService PlayerTransfromService Field Value Type Description IPlayerTransfromService"
  },
  "api/Helpers.HelpingClasses.Helper.html": {
    "href": "api/Helpers.HelpingClasses.Helper.html",
    "title": "Namespace Helpers.HelpingClasses.Helper | Harvest Grove code documentation",
    "keywords": "Namespace Helpers.HelpingClasses.Helper Classes Helper Here you can find every helper class HelperService"
  },
  "api/Helpers.HelpingClasses.html": {
    "href": "api/Helpers.HelpingClasses.html",
    "title": "Namespace Helpers.HelpingClasses | Harvest Grove code documentation",
    "keywords": "Namespace Helpers.HelpingClasses Classes AnimalsHelper AnyMaterialSO Extensions InventoryHelper PlacingHelper PlayerHelper SpawnerHelper ThirstHungerHelper Provides helper methods for handling HungerUnit and WaterUnit collections. TilemapHelper ToolsHelper Structs LoopingMaterials"
  },
  "api/Helpers.HelpingClasses.InventoryHelper.html": {
    "href": "api/Helpers.HelpingClasses.InventoryHelper.html",
    "title": "Class InventoryHelper | Harvest Grove code documentation",
    "keywords": "Class InventoryHelper Inheritance object InventoryHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses Assembly: cs.temp.dll.dll Syntax public static class InventoryHelper Methods AddItemToTheInventory(InventoryItemData, int) Add item to the inventory, if the inventory is full, invoke the event Declaration public static (bool success, int amount) AddItemToTheInventory(InventoryItemData item, int amount) Parameters Type Name Description InventoryItemData item int amount Returns Type Description (bool success, int amount) True if the item has been fully added to any inventory; If the invetory doesn't have space in the inventory, it returns how many items it didn't find the space for {we wanna add 4 items, but space is just for 3, so it returns 1 as \"there wasn't space for 1 item\"} CombineSlotsWithoutDuplicates(List<InventorySlot>, List<InventorySlot>) Declaration public static List<InventorySlot> CombineSlotsWithoutDuplicates(List<InventorySlot> slotsA, List<InventorySlot> slotsB) Parameters Type Name Description List<><InventorySlot> slotsA List<><InventorySlot> slotsB Returns Type Description List<><InventorySlot> CurrentSlot() Declaration public static InventorySlot CurrentSlot() Returns Type Description InventorySlot CurrentSlotInvData() Declaration public static InventoryItemData CurrentSlotInvData() Returns Type Description InventoryItemData DecreaseItemAtPositionHotbar() Decreases amount of the item at the current slot position in hotbar Declaration public static void DecreaseItemAtPositionHotbar() DecreaseItemDurability() Declaration public static void DecreaseItemDurability() IsCurrentSlotLocked() Declaration public static bool IsCurrentSlotLocked() Returns Type Description bool ItemAmountInInventory(InventoryItemData, BackpackInventory, HotBarInventory) Declaration public static int ItemAmountInInventory(InventoryItemData item, BackpackInventory backpackInventory, HotBarInventory hotBarInventory) Parameters Type Name Description InventoryItemData item BackpackInventory backpackInventory HotBarInventory hotBarInventory Returns Type Description int LockSlot() Declaration public static void LockSlot()"
  },
  "api/Helpers.HelpingClasses.LoopingMaterials.html": {
    "href": "api/Helpers.HelpingClasses.LoopingMaterials.html",
    "title": "Struct LoopingMaterials | Harvest Grove code documentation",
    "keywords": "Struct LoopingMaterials Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Helpers.HelpingClasses Assembly: cs.temp.dll.dll Syntax [Serializable] public struct LoopingMaterials Fields MaterialsList Declaration public List<MaterialSO> MaterialsList Field Value Type Description List<><MaterialSO> MaterialType Declaration public MaterialType MaterialType Field Value Type Description MaterialType"
  },
  "api/Helpers.HelpingClasses.Merchant.html": {
    "href": "api/Helpers.HelpingClasses.Merchant.html",
    "title": "Namespace Helpers.HelpingClasses.Merchant | Harvest Grove code documentation",
    "keywords": "Namespace Helpers.HelpingClasses.Merchant Classes MerchantHelper MerchantService"
  },
  "api/Helpers.HelpingClasses.Merchant.MerchantHelper.html": {
    "href": "api/Helpers.HelpingClasses.Merchant.MerchantHelper.html",
    "title": "Class MerchantHelper | Harvest Grove code documentation",
    "keywords": "Class MerchantHelper Inheritance object MerchantHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses.Merchant Assembly: cs.temp.dll.dll Syntax public static class MerchantHelper Methods MerchantPosition(Vector2) Declaration public static (Vector2, bool) MerchantPosition(Vector2 shipPosition) Parameters Type Name Description Vector2 shipPosition Returns Type Description (Vector2, bool) ShipSpawnPosition() Declaration public static (Vector2, bool) ShipSpawnPosition() Returns Type Description (Vector2, bool)"
  },
  "api/Helpers.HelpingClasses.Merchant.MerchantService.html": {
    "href": "api/Helpers.HelpingClasses.Merchant.MerchantService.html",
    "title": "Class MerchantService | Harvest Grove code documentation",
    "keywords": "Class MerchantService Inheritance object MerchantService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses.Merchant Assembly: cs.temp.dll.dll Syntax public class MerchantService Constructors MerchantService(IGameData) Declaration public MerchantService(IGameData gameData) Parameters Type Name Description IGameData gameData Fields HarborSavingSO Declaration public HarborData HarborSavingSO Field Value Type Description HarborData"
  },
  "api/Helpers.HelpingClasses.PlacingHelper.html": {
    "href": "api/Helpers.HelpingClasses.PlacingHelper.html",
    "title": "Class PlacingHelper | Harvest Grove code documentation",
    "keywords": "Class PlacingHelper Inheritance object PlacingHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses Assembly: cs.temp.dll.dll Syntax public static class PlacingHelper Methods AddThrough(Vector2, BuildingSO, MapBuildingsDataSO) Adds the Trough to the MapBuildingData Declaration public static void AddThrough(Vector2 gridPosition, BuildingSO currentBuildingSO, MapBuildingsDataSO mapBuildingsData) Parameters Type Name Description Vector2 gridPosition BuildingSO currentBuildingSO MapBuildingsDataSO mapBuildingsData ClearPreviousTiles(BuildingSO, Vector2Int, Tilemap, int, Vector2Int) Set the previous tiles to null Declaration public static void ClearPreviousTiles(BuildingSO currentBuildingSO, Vector2Int lastGridPosition, Tilemap tilemap, int currentSpriteIndex, Vector2Int currentBuildingSize) Parameters Type Name Description BuildingSO currentBuildingSO Vector2Int lastGridPosition Tilemap tilemap int currentSpriteIndex Vector2Int currentBuildingSize EnableBuildingMap(BuildingSO) Checks if the building map should be shown Declaration public static bool EnableBuildingMap(BuildingSO buildingSO) Parameters Type Name Description BuildingSO buildingSO Returns Type Description bool GridToWorldPosition(Vector2Int, Vector2) Declaration public static Vector3 GridToWorldPosition(Vector2Int gridPosition, Vector2 cellSize) Parameters Type Name Description Vector2Int gridPosition Vector2 cellSize Returns Type Description Vector3 IsTaken(Vector3Int, TilemapStructure) Check if the tile on position is take or not Declaration public static bool IsTaken(Vector3Int tilePosition, TilemapStructure buildingTilemap) Parameters Type Name Description Vector3Int tilePosition TilemapStructure buildingTilemap Returns Type Description bool PlaceMoreTiles(SideEnum, Vector2Int, TilemapStructure, Vector2Int, int) Declaration public static void PlaceMoreTiles(SideEnum side, Vector2Int currentBuildingSize, TilemapStructure buildingTilemap, Vector2Int gridPosition, int tileType) Parameters Type Name Description SideEnum side Vector2Int currentBuildingSize TilemapStructure buildingTilemap Vector2Int gridPosition int tileType SetTakenTiles(BuildingSO, int, Vector2Int, TilemapStructure, Vector2Int) Set tiles to the TilemapStructure Declaration public static void SetTakenTiles(BuildingSO currentBuildingSO, int currentSpriteIndex, Vector2Int currentBuildingSize, TilemapStructure buildingTilemap, Vector2Int gridPosition) Parameters Type Name Description BuildingSO currentBuildingSO int currentSpriteIndex Vector2Int currentBuildingSize TilemapStructure buildingTilemap Vector2Int gridPosition WorldToGridPosition(Vector3, Vector2) Declaration public static Vector2Int WorldToGridPosition(Vector3 worldPosition, Vector2 cellSize) Parameters Type Name Description Vector3 worldPosition Vector2 cellSize Returns Type Description Vector2Int"
  },
  "api/Helpers.HelpingClasses.PlayerHelper.html": {
    "href": "api/Helpers.HelpingClasses.PlayerHelper.html",
    "title": "Class PlayerHelper | Harvest Grove code documentation",
    "keywords": "Class PlayerHelper Inheritance object PlayerHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses Assembly: cs.temp.dll.dll Syntax public static class PlayerHelper Methods GetPlayerSpawnPosition(PlayerDataSO) Declaration public static Vector2 GetPlayerSpawnPosition(PlayerDataSO playerDataSo) Parameters Type Name Description PlayerDataSO playerDataSo Returns Type Description Vector2 UpdateBushTile(Vector2Int, ObjectTileTypeEnum, ObjectTileTypeEnum, int, TilemapStructure, SeedDatabaseSO, ITileMapService, IManagerData) Updates the tile on the given position + add the bush to the plant growing Declaration public static void UpdateBushTile(Vector2Int pos, ObjectTileTypeEnum checkTileType, ObjectTileTypeEnum placeTileType, int placeTileCount, TilemapStructure objectStructure, SeedDatabaseSO seedDatabaseSO, ITileMapService tileMapService, IManagerData managerData) Parameters Type Name Description Vector2Int pos ObjectTileTypeEnum checkTileType ObjectTileTypeEnum placeTileType int placeTileCount TilemapStructure objectStructure SeedDatabaseSO seedDatabaseSO ITileMapService tileMapService IManagerData managerData"
  },
  "api/Helpers.HelpingClasses.SpawnerHelper.html": {
    "href": "api/Helpers.HelpingClasses.SpawnerHelper.html",
    "title": "Class SpawnerHelper | Harvest Grove code documentation",
    "keywords": "Class SpawnerHelper Inheritance object SpawnerHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses Assembly: cs.temp.dll.dll Syntax public static class SpawnerHelper Methods SpawnPos(Vector2, MainAnimalsEnum, AnimalsDatabase, SideEnum) Declaration public static Vector2 SpawnPos(Vector2 homePos, MainAnimalsEnum mainAnimalsEnum, AnimalsDatabase animalsHolder, SideEnum side) Parameters Type Name Description Vector2 homePos MainAnimalsEnum mainAnimalsEnum AnimalsDatabase animalsHolder SideEnum side Returns Type Description Vector2 SpawnPos(Vector2, SideEnum, ConstructionSO) Declaration public static Vector2 SpawnPos(Vector2 homePos, SideEnum side, ConstructionSO constructionSo) Parameters Type Name Description Vector2 homePos SideEnum side ConstructionSO constructionSo Returns Type Description Vector2"
  },
  "api/Helpers.HelpingClasses.ThirstHungerHelper.html": {
    "href": "api/Helpers.HelpingClasses.ThirstHungerHelper.html",
    "title": "Class ThirstHungerHelper | Harvest Grove code documentation",
    "keywords": "Class ThirstHungerHelper Provides helper methods for handling HungerUnit and WaterUnit collections. Inheritance object ThirstHungerHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses Assembly: cs.temp.dll.dll Syntax public static class ThirstHungerHelper Methods CountEmpty<T>(List<T>) Declaration public static int CountEmpty<T>(List<T> units) where T : class Parameters Type Name Description List<><T> units Returns Type Description int Type Parameters Name Description T SumUnits<T>(List<T>) Declaration public static float SumUnits<T>(List<T> units) where T : class Parameters Type Name Description List<><T> units Returns Type Description float Type Parameters Name Description T"
  },
  "api/Helpers.HelpingClasses.TilemapHelper.html": {
    "href": "api/Helpers.HelpingClasses.TilemapHelper.html",
    "title": "Class TilemapHelper | Harvest Grove code documentation",
    "keywords": "Class TilemapHelper Inheritance object TilemapHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses Assembly: cs.temp.dll.dll Syntax public static class TilemapHelper Methods ApplyColliderGen(TileGrid, int, int, IEnumerable<TilemapStructure>) Declaration public static void ApplyColliderGen(TileGrid tileGrid, int x, int y, IEnumerable<TilemapStructure> collidableTilemaps) Parameters Type Name Description TileGrid tileGrid int x int y IEnumerable<><TilemapStructure> collidableTilemaps ApplyColliderGen(TileGrid, TileBase[], int, int, int, params TilemapStructure[]) Declaration public static void ApplyColliderGen(TileGrid tileGrid, TileBase[] arrayMap, int x, int y, int width, params TilemapStructure[] collidableTilemaps) Parameters Type Name Description TileGrid tileGrid TileBase[] arrayMap int x int y int width TilemapStructure[] collidableTilemaps ApplyColliderGen(TileGrid, TileBase[], Vector2Int, int, params TilemapStructure[]) Declaration public static void ApplyColliderGen(TileGrid tileGrid, TileBase[] arrayMap, Vector2Int position, int index, params TilemapStructure[] collidableTilemaps) Parameters Type Name Description TileGrid tileGrid TileBase[] arrayMap Vector2Int position int index TilemapStructure[] collidableTilemaps ClearAreaAroundHarbor(List<Vector3Int>, int, TilemapStructure) Declaration public static void ClearAreaAroundHarbor(List<Vector3Int> positions, int width, TilemapStructure objectTilemap) Parameters Type Name Description List<><Vector3Int> positions int width TilemapStructure objectTilemap FindClosestTileByType(TilemapStructure, Vector2Int, int) Declaration public static Vector2Int? FindClosestTileByType(TilemapStructure tilemap, Vector2Int startPos, int tileType) Parameters Type Name Description TilemapStructure tilemap Vector2Int startPos int tileType Returns Type Description Vector2Int? GetTilesByType(TilemapStructure, IEnumerable<int>) Declaration public static List<Vector2Int> GetTilesByType(TilemapStructure tilemap, IEnumerable<int> enumerable) Parameters Type Name Description TilemapStructure tilemap IEnumerable<><int> enumerable Returns Type Description List<><Vector2Int> GetTileTypeInfo(TileData) Uses reflection to retrieve the type information from the TileData Declaration public static (string, string) GetTileTypeInfo(TileData data) Parameters Type Name Description TileData data Returns Type Description (string, string) IsTileSurroundedByType(TilemapStructure, int, int, int) Declaration public static bool IsTileSurroundedByType(TilemapStructure tilemap, int x, int y, int tileType) Parameters Type Name Description TilemapStructure tilemap int x int y int tileType Returns Type Description bool PostProcessRiver(TilemapStructure, int) Declaration public static void PostProcessRiver(TilemapStructure tilemap, int riverTileId) Parameters Type Name Description TilemapStructure tilemap int riverTileId SmoothRiver(TilemapStructure, int, Dictionary<int, int>) Declaration public static void SmoothRiver(TilemapStructure tilemap, int riverTileId, Dictionary<int, int> landTileIds) Parameters Type Name Description TilemapStructure tilemap int riverTileId Dictionary<, ><int, int> landTileIds SpawnShip(GameObject, int, Vector3Int) This method spawns a ship It also assigns correct sprite to the ship's gameobject Declaration public static void SpawnShip(GameObject boatPrefab, int edgeIndex, Vector3Int spawnPos) Parameters Type Name Description GameObject boatPrefab int edgeIndex Vector3Int spawnPos"
  },
  "api/Helpers.HelpingClasses.Timer.html": {
    "href": "api/Helpers.HelpingClasses.Timer.html",
    "title": "Namespace Helpers.HelpingClasses.Timer | Harvest Grove code documentation",
    "keywords": "Namespace Helpers.HelpingClasses.Timer Classes TimerHelper TimerService"
  },
  "api/Helpers.HelpingClasses.Timer.TimerHelper.html": {
    "href": "api/Helpers.HelpingClasses.Timer.TimerHelper.html",
    "title": "Class TimerHelper | Harvest Grove code documentation",
    "keywords": "Class TimerHelper Inheritance object TimerHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses.Timer Assembly: cs.temp.dll.dll Syntax public static class TimerHelper Methods CanLightCampfire() Checks if the player can light a campfire Declaration public static bool CanLightCampfire() Returns Type Description bool CanTravel() Checks if the player can travel to other islands Declaration public static bool CanTravel() Returns Type Description bool IsNight() Checks if it is night time Declaration public static bool IsNight() Returns Type Description bool IsOneHourBeforeNight() Checks if it is one hour before official night time Declaration public static bool IsOneHourBeforeNight() Returns Type Description bool IsPastMidnight() Checks if the time is between midnight and time for dawn Declaration public static bool IsPastMidnight() Returns Type Description bool SleepUntilTime(TimeSpan) Calculates how much player slept until the passed time Declaration public static TimeData SleepUntilTime(TimeSpan wakingTime) Parameters Type Name Description TimeSpan wakingTime When the player will wake up Returns Type Description TimeData How much player slept TimeDifferenceInMinutes(TimeData) Get the time difference in minutes between current time and passed time Declaration public static int TimeDifferenceInMinutes(TimeData leftHomeAt) Parameters Type Name Description TimeData leftHomeAt Returns Type Description int"
  },
  "api/Helpers.HelpingClasses.Timer.TimerService.html": {
    "href": "api/Helpers.HelpingClasses.Timer.TimerService.html",
    "title": "Class TimerService | Harvest Grove code documentation",
    "keywords": "Class TimerService Inheritance object TimerService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses.Timer Assembly: cs.temp.dll.dll Syntax public class TimerService Constructors TimerService(GameContextManager) Declaration public TimerService(GameContextManager gameContextManager) Parameters Type Name Description GameContextManager gameContextManager Methods CanLightCampfire() Declaration public bool CanLightCampfire() Returns Type Description bool CanTravel() Declaration public bool CanTravel() Returns Type Description bool IsNight() Declaration public bool IsNight() Returns Type Description bool IsOneHourBeforeNight() Declaration public bool IsOneHourBeforeNight() Returns Type Description bool IsPastMidnight() Declaration public bool IsPastMidnight() Returns Type Description bool SleepUntilTime(TimeSpan) Declaration public TimeData SleepUntilTime(TimeSpan wakingTime) Parameters Type Name Description TimeSpan wakingTime Returns Type Description TimeData TimeDifferenceInMinutes(TimeData) Declaration public int TimeDifferenceInMinutes(TimeData leftHomeAt) Parameters Type Name Description TimeData leftHomeAt Returns Type Description int"
  },
  "api/Helpers.HelpingClasses.ToolHover.html": {
    "href": "api/Helpers.HelpingClasses.ToolHover.html",
    "title": "Namespace Helpers.HelpingClasses.ToolHover | Harvest Grove code documentation",
    "keywords": "Namespace Helpers.HelpingClasses.ToolHover Classes ToolHovering ToolHoveringService"
  },
  "api/Helpers.HelpingClasses.ToolHover.ToolHovering.html": {
    "href": "api/Helpers.HelpingClasses.ToolHover.ToolHovering.html",
    "title": "Class ToolHovering | Harvest Grove code documentation",
    "keywords": "Class ToolHovering Inheritance object ToolHovering Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses.ToolHover Assembly: cs.temp.dll.dll Syntax public static class ToolHovering Fields PreviousCellPosition Declaration public static Vector3Int PreviousCellPosition Field Value Type Description Vector3Int Methods PrepareHoveringTile(Tool) Prepare tiles and tilemap Declaration public static UniTask PrepareHoveringTile(Tool tool) Parameters Type Name Description Tool tool Returns Type Description UniTask UpdateTileUnderMouse(Tool) Updates the tile based on the mouse position Declaration public static void UpdateTileUnderMouse(Tool tool) Parameters Type Name Description Tool tool"
  },
  "api/Helpers.HelpingClasses.ToolHover.ToolHoveringService.html": {
    "href": "api/Helpers.HelpingClasses.ToolHover.ToolHoveringService.html",
    "title": "Class ToolHoveringService | Harvest Grove code documentation",
    "keywords": "Class ToolHoveringService Inheritance object ToolHoveringService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses.ToolHover Assembly: cs.temp.dll.dll Syntax public class ToolHoveringService Constructors ToolHoveringService(IOtherData) Declaration public ToolHoveringService(IOtherData otherData) Parameters Type Name Description IOtherData otherData Fields InRangeTile Declaration public TileBase InRangeTile Field Value Type Description TileBase OutOfRangeTile Declaration public TileBase OutOfRangeTile Field Value Type Description TileBase"
  },
  "api/Helpers.HelpingClasses.ToolsHelper.html": {
    "href": "api/Helpers.HelpingClasses.ToolsHelper.html",
    "title": "Class ToolsHelper | Harvest Grove code documentation",
    "keywords": "Class ToolsHelper Inheritance object ToolsHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.HelpingClasses Assembly: cs.temp.dll.dll Syntax public static class ToolsHelper Methods ProcessDigoutItem(int, int, int, int, int, DigoutObject, TilemapStructure, TilemapStructure) Process a digout item and perform the appropriate actions Declaration public static void ProcessDigoutItem(int posX, int posY, int currentObject, int currentObjectWidth, int currentObjectHeight, DigoutObject item, TilemapStructure objectStructure, TilemapStructure harborStructure) Parameters Type Name Description int posX int posY int currentObject The current object int currentObjectWidth The width of the current object int currentObjectHeight The height of the current object DigoutObject item The item to process. It should not be null TilemapStructure objectStructure The object structure. It should not be null TilemapStructure harborStructure ShouldDigOutObject(int, int, DigoutObject) Declaration public static bool ShouldDigOutObject(int currentObject, int currentObjectHarbor, DigoutObject item) Parameters Type Name Description int currentObject int currentObjectHarbor DigoutObject item Returns Type Description bool"
  },
  "api/Helpers.html": {
    "href": "api/Helpers.html",
    "title": "Namespace Helpers | Harvest Grove code documentation",
    "keywords": "Namespace Helpers Classes AssetMenuNames Provides constant string values for asset menu names and their subcategories ErrorLog WorldsHelper"
  },
  "api/Helpers.Localization.html": {
    "href": "api/Helpers.Localization.html",
    "title": "Namespace Helpers.Localization | Harvest Grove code documentation",
    "keywords": "Namespace Helpers.Localization Classes LocalizationHelper Provides helper methods for localization tasks. Enums LocalizationTableEnum"
  },
  "api/Helpers.Localization.LocalizationHelper.html": {
    "href": "api/Helpers.Localization.LocalizationHelper.html",
    "title": "Class LocalizationHelper | Harvest Grove code documentation",
    "keywords": "Class LocalizationHelper Provides helper methods for localization tasks. Inheritance object LocalizationHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers.Localization Assembly: cs.temp.dll.dll Syntax public static class LocalizationHelper Methods GetLocalizedString(LocalizationTableEnum, string, object[]) Retrieves a localized string from the specified table and entry, with optional formatting arguments. Declaration public static string GetLocalizedString(LocalizationTableEnum tableReference, string entryReference, object[] arguments = null) Parameters Type Name Description LocalizationTableEnum tableReference The localization table enum reference. string entryReference The entry key in the table. object[] arguments Optional arguments for string formatting. Returns Type Description string The localized string, or a fallback message if not found. TransformStringToKeyFormat(string) Transforms a string into a key format suitable for localization tables. Example: \"MyText\" -> \"my_text\" Declaration public static string TransformStringToKeyFormat(string text) Parameters Type Name Description string text The input string to transform. Returns Type Description string The transformed key string."
  },
  "api/Helpers.Localization.LocalizationTableEnum.html": {
    "href": "api/Helpers.Localization.LocalizationTableEnum.html",
    "title": "Enum LocalizationTableEnum | Harvest Grove code documentation",
    "keywords": "Enum LocalizationTableEnum Namespace: Helpers.Localization Assembly: cs.temp.dll.dll Syntax public enum LocalizationTableEnum Fields Name Description Animals Items RightClickAction UI"
  },
  "api/Helpers.Notion.html": {
    "href": "api/Helpers.Notion.html",
    "title": "Namespace Helpers.Notion | Harvest Grove code documentation",
    "keywords": "Namespace Helpers.Notion Classes NotionUploader"
  },
  "api/Helpers.Notion.NotionUploader.html": {
    "href": "api/Helpers.Notion.NotionUploader.html",
    "title": "Class NotionUploader | Harvest Grove code documentation",
    "keywords": "Class NotionUploader Inheritance object NotionUploader Namespace: Helpers.Notion Assembly: cs.temp.dll.dll Syntax public class NotionUploader : Editor Methods UploadInventoryToNotion() Declaration public static void UploadInventoryToNotion() UploadItem(InventoryItemData) Declaration public static void UploadItem(InventoryItemData item) Parameters Type Name Description InventoryItemData item"
  },
  "api/Helpers.ObjectPooling.html": {
    "href": "api/Helpers.ObjectPooling.html",
    "title": "Namespace Helpers.ObjectPooling | Harvest Grove code documentation",
    "keywords": "Namespace Helpers.ObjectPooling Classes ObjectPooling Manages object pools for collectables, attacking vegetables, and farm animals."
  },
  "api/Helpers.ObjectPooling.ObjectPooling.html": {
    "href": "api/Helpers.ObjectPooling.ObjectPooling.html",
    "title": "Class ObjectPooling | Harvest Grove code documentation",
    "keywords": "Class ObjectPooling Manages object pools for collectables, attacking vegetables, and farm animals. Inheritance object ObjectPooling Namespace: Helpers.ObjectPooling Assembly: cs.temp.dll.dll Syntax public class ObjectPooling : MonoBehaviour Properties AnimalPool Pool for farm animals. Declaration public ObjectPool<FarmAnimal_AI> AnimalPool { get; } Property Value Type Description ObjectPool<><FarmAnimal_AI> DropItemsPool Pool for drop items. Declaration public ObjectPool<Collectable> DropItemsPool { get; } Property Value Type Description ObjectPool<><Collectable> VegetablePool Pool for vegetable enemies. Declaration public ObjectPool<AttackingVegetableAI> VegetablePool { get; } Property Value Type Description ObjectPool<><AttackingVegetableAI>"
  },
  "api/Helpers.WorldsHelper.html": {
    "href": "api/Helpers.WorldsHelper.html",
    "title": "Class WorldsHelper | Harvest Grove code documentation",
    "keywords": "Class WorldsHelper Inheritance object WorldsHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Helpers Assembly: cs.temp.dll.dll Syntax public static class WorldsHelper Methods CreateDirectories(string) Creates all directories for the world Declaration public static void CreateDirectories(string worldName) Parameters Type Name Description string worldName Name of the world DirectoryPaths(string) Declaration public static List<string> DirectoryPaths(string worldName) Parameters Type Name Description string worldName Returns Type Description List<><string> GetSeed(string) Get the seed based on the seed input Declaration public static int GetSeed(string seedInput) Parameters Type Name Description string seedInput ChoiceText from the seed input Returns Type Description int Returns a seed. If the input is empty, it returns a random seed GetWorldName(string) Get the world name Declaration public static string GetWorldName(string worldNameInput) Parameters Type Name Description string worldNameInput ChoiceText from the world name input Returns Type Description string HasIslandSavedData(IslandsDictionaryNames) Check if the {island} has already saved world map data or not. If not, the world is initialized for the first time Declaration public static bool HasIslandSavedData(IslandsDictionaryNames island) Parameters Type Name Description IslandsDictionaryNames island Island name Returns Type Description bool True if the island has already saved world map data; False otherwise IsSafeName(string) Checks if the string is bad-words free - i.e. it's not listed in BlacklistWords.cs Declaration public static bool IsSafeName(string name) Parameters Type Name Description string name String to check Returns Type Description bool true if it's safe, false otherwise LoadDirectories(string) Loads the directories for the world Declaration public static void LoadDirectories(string worldName) Parameters Type Name Description string worldName SaveWorldData(string, WorldDataSO, string, string, List<ColorData>) Saves the seed and world name to SO and to the computer under \"WorldSettings\" folder Declaration public static void SaveWorldData(string worldName, WorldDataSO worldData, string seedInput, string catsName, List<ColorData> catColors) Parameters Type Name Description string worldName WorldDataSO worldData string seedInput string catsName List<><ColorData> catColors"
  },
  "api/Islands.Cave.CaveManager.html": {
    "href": "api/Islands.Cave.CaveManager.html",
    "title": "Class CaveManager | Harvest Grove code documentation",
    "keywords": "Class CaveManager Inheritance object CaveManager Namespace: Islands.Cave Assembly: cs.temp.dll.dll Syntax public class CaveManager : MonoBehaviour Properties CaveManagerInstance Declaration public static CaveManager CaveManagerInstance { get; } Property Value Type Description CaveManager PlayerSpawnPoint Declaration public Transform PlayerSpawnPoint { get; } Property Value Type Description Transform Methods SetCaveColor() Declaration public void SetCaveColor() SetCaveExitPosition(Vector3) Declaration public void SetCaveExitPosition(Vector3 position) Parameters Type Name Description Vector3 position SetIslandColor() Declaration public void SetIslandColor()"
  },
  "api/Islands.Cave.html": {
    "href": "api/Islands.Cave.html",
    "title": "Namespace Islands.Cave | Harvest Grove code documentation",
    "keywords": "Namespace Islands.Cave Classes CaveManager Teleporter"
  },
  "api/Islands.Cave.Teleporter.html": {
    "href": "api/Islands.Cave.Teleporter.html",
    "title": "Class Teleporter | Harvest Grove code documentation",
    "keywords": "Class Teleporter Inheritance object Teleporter Namespace: Islands.Cave Assembly: cs.temp.dll.dll Syntax public class Teleporter : InteractionСontroller Methods Interact(CallbackContext) Declaration protected override void Interact(InputAction.CallbackContext _) Parameters Type Name Description InputAction.CallbackContext _"
  },
  "api/Islands.Forest.ForestManager.html": {
    "href": "api/Islands.Forest.ForestManager.html",
    "title": "Class ForestManager | Harvest Grove code documentation",
    "keywords": "Class ForestManager Inheritance object ForestManager Implements ITaskSavable Namespace: Islands.Forest Assembly: cs.temp.dll.dll Syntax public class ForestManager : MonoBehaviour, ITaskSavable Fields ForestManagerInstance Declaration public static ForestManager ForestManagerInstance Field Value Type Description ForestManager Properties Priority Declaration public int Priority { get; } Property Value Type Description int SpawnPoint Declaration public Vector2 SpawnPoint { get; set; } Property Value Type Description Vector2 Methods Construct(ITileMapService, IPlayerData) Declaration public void Construct(ITileMapService tileMapService, IPlayerData playerData) Parameters Type Name Description ITileMapService tileMapService IPlayerData playerData Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Implements ITaskSavable"
  },
  "api/Islands.Forest.html": {
    "href": "api/Islands.Forest.html",
    "title": "Namespace Islands.Forest | Harvest Grove code documentation",
    "keywords": "Namespace Islands.Forest Classes ForestManager"
  },
  "api/Islands.IslandReload.html": {
    "href": "api/Islands.IslandReload.html",
    "title": "Namespace Islands.IslandReload | Harvest Grove code documentation",
    "keywords": "Namespace Islands.IslandReload Classes IslandReloadData IslandReloadService IslandReloadSettingsSO Interfaces IIslandReloadService"
  },
  "api/Islands.IslandReload.IIslandReloadService.html": {
    "href": "api/Islands.IslandReload.IIslandReloadService.html",
    "title": "Interface IIslandReloadService | Harvest Grove code documentation",
    "keywords": "Interface IIslandReloadService Namespace: Islands.IslandReload Assembly: cs.temp.dll.dll Syntax public interface IIslandReloadService Methods CanReload(IslandsDictionaryNames) Declaration bool CanReload(IslandsDictionaryNames island) Parameters Type Name Description IslandsDictionaryNames island Returns Type Description bool ReloadIsland(IslandsDictionaryNames) Declaration UniTask ReloadIsland(IslandsDictionaryNames island) Parameters Type Name Description IslandsDictionaryNames island Returns Type Description UniTask"
  },
  "api/Islands.IslandReload.IslandReloadData.html": {
    "href": "api/Islands.IslandReload.IslandReloadData.html",
    "title": "Class IslandReloadData | Harvest Grove code documentation",
    "keywords": "Class IslandReloadData Inheritance object IslandReloadData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Islands.IslandReload Assembly: cs.temp.dll.dll Syntax public class IslandReloadData Fields IslandName Declaration public IslandsDictionaryNames IslandName Field Value Type Description IslandsDictionaryNames RespawnIntervalDays Declaration public int RespawnIntervalDays Field Value Type Description int"
  },
  "api/Islands.IslandReload.IslandReloadService.html": {
    "href": "api/Islands.IslandReload.IslandReloadService.html",
    "title": "Class IslandReloadService | Harvest Grove code documentation",
    "keywords": "Class IslandReloadService Inheritance object IslandReloadService Implements IIslandReloadService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Islands.IslandReload Assembly: cs.temp.dll.dll Syntax public class IslandReloadService : IIslandReloadService Constructors IslandReloadService(IslandReloadSettingsSO, PlayerDataSO) Declaration public IslandReloadService(IslandReloadSettingsSO settingsSO, PlayerDataSO playerData) Parameters Type Name Description IslandReloadSettingsSO settingsSO PlayerDataSO playerData Methods CanReload(IslandsDictionaryNames) Declaration public bool CanReload(IslandsDictionaryNames island) Parameters Type Name Description IslandsDictionaryNames island Returns Type Description bool ReloadIsland(IslandsDictionaryNames) Declaration public UniTask ReloadIsland(IslandsDictionaryNames island) Parameters Type Name Description IslandsDictionaryNames island Returns Type Description UniTask Implements IIslandReloadService"
  },
  "api/Islands.IslandReload.IslandReloadSettingsSO.html": {
    "href": "api/Islands.IslandReload.IslandReloadSettingsSO.html",
    "title": "Class IslandReloadSettingsSO | Harvest Grove code documentation",
    "keywords": "Class IslandReloadSettingsSO Inheritance object IslandReloadSettingsSO Namespace: Islands.IslandReload Assembly: cs.temp.dll.dll Syntax public class IslandReloadSettingsSO : ScriptableObject Fields Islands Declaration public List<IslandReloadData> Islands Field Value Type Description List<><IslandReloadData>"
  },
  "api/Localization.CustomTMPButtonCreator.html": {
    "href": "api/Localization.CustomTMPButtonCreator.html",
    "title": "Class CustomTMPButtonCreator | Harvest Grove code documentation",
    "keywords": "Class CustomTMPButtonCreator Inheritance object CustomTMPButtonCreator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Localization Assembly: cs.temp.dll.dll Syntax public class CustomTMPButtonCreator"
  },
  "api/Localization.html": {
    "href": "api/Localization.html",
    "title": "Namespace Localization | Harvest Grove code documentation",
    "keywords": "Namespace Localization Classes CustomTMPButtonCreator LocaleSelectorUI LocalizeUI"
  },
  "api/Localization.LocaleSelectorUI.html": {
    "href": "api/Localization.LocaleSelectorUI.html",
    "title": "Class LocaleSelectorUI | Harvest Grove code documentation",
    "keywords": "Class LocaleSelectorUI Inheritance object LocaleSelectorUI Namespace: Localization Assembly: cs.temp.dll.dll Syntax public class LocaleSelectorUI : MonoBehaviour"
  },
  "api/Localization.LocalizeUI.html": {
    "href": "api/Localization.LocalizeUI.html",
    "title": "Class LocalizeUI | Harvest Grove code documentation",
    "keywords": "Class LocalizeUI Inheritance object LocalizeUI Namespace: Localization Assembly: cs.temp.dll.dll Syntax public abstract class LocalizeUI : MonoBehaviour Methods OnDisable() Declaration public virtual void OnDisable() OnEnable() Declaration public virtual void OnEnable() UpdateUI(Locale) Declaration public abstract void UpdateUI(Locale locale) Parameters Type Name Description Locale locale"
  },
  "api/Managers._GameManager.AllowInjectionOnDisabledAttribute.html": {
    "href": "api/Managers._GameManager.AllowInjectionOnDisabledAttribute.html",
    "title": "Class AllowInjectionOnDisabledAttribute | Harvest Grove code documentation",
    "keywords": "Class AllowInjectionOnDisabledAttribute Inheritance object AllowInjectionOnDisabledAttribute Namespace: Managers._GameManager Assembly: cs.temp.dll.dll Syntax public class AllowInjectionOnDisabledAttribute : Attribute"
  },
  "api/Managers._GameManager.GameObjectFactory.html": {
    "href": "api/Managers._GameManager.GameObjectFactory.html",
    "title": "Class GameObjectFactory | Harvest Grove code documentation",
    "keywords": "Class GameObjectFactory Inheritance object GameObjectFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Managers._GameManager Assembly: cs.temp.dll.dll Syntax public static class GameObjectFactory Methods InstantiateAndInject<T>(T, Transform) Declaration public static T InstantiateAndInject<T>(T prefab, Transform parent) where T : Object Parameters Type Name Description T prefab Transform parent Returns Type Description T Type Parameters Name Description T InstantiateAndInject<T>(T, Vector3, Quaternion) Declaration public static T InstantiateAndInject<T>(T prefab, Vector3 position, Quaternion rotation) where T : Object Parameters Type Name Description T prefab Vector3 position Quaternion rotation Returns Type Description T Type Parameters Name Description T InstantiateAndInject<T>(T) Declaration public static T InstantiateAndInject<T>(T prefab) where T : Object Parameters Type Name Description T prefab Returns Type Description T Type Parameters Name Description T"
  },
  "api/Managers._GameManager.html": {
    "href": "api/Managers._GameManager.html",
    "title": "Namespace Managers._GameManager | Harvest Grove code documentation",
    "keywords": "Namespace Managers._GameManager Classes AllowInjectionOnDisabledAttribute GameObjectFactory"
  },
  "api/Managers._GameManager.Injections.GameContextManager.html": {
    "href": "api/Managers._GameManager.Injections.GameContextManager.html",
    "title": "Class GameContextManager | Harvest Grove code documentation",
    "keywords": "Class GameContextManager Inheritance object GameContextManager Namespace: Managers._GameManager.Injections Assembly: cs.temp.dll.dll Syntax public class GameContextManager : MonoBehaviour Properties GameData Declaration public IGameData GameData { get; } Property Value Type Description IGameData InputsMap Declaration public InputsMap InputsMap { get; } Property Value Type Description InputsMap InventoryService Declaration public IInventoryService InventoryService { get; } Property Value Type Description IInventoryService ManagerData Declaration public IManagerData ManagerData { get; } Property Value Type Description IManagerData MapService Declaration public ITileMapService MapService { get; } Property Value Type Description ITileMapService OtherData Declaration public IOtherData OtherData { get; } Property Value Type Description IOtherData PlayerData Declaration public IPlayerData PlayerData { get; } Property Value Type Description IPlayerData PlayerEvents Declaration public IPlayerEvents PlayerEvents { get; } Property Value Type Description IPlayerEvents PlayerService Declaration public IPlayerTransfromService PlayerService { get; } Property Value Type Description IPlayerTransfromService Methods Construct() Declaration public void Construct() OnEnable() Declaration public void OnEnable()"
  },
  "api/Managers._GameManager.Injections.GameService.html": {
    "href": "api/Managers._GameManager.Injections.GameService.html",
    "title": "Class GameService | Harvest Grove code documentation",
    "keywords": "Class GameService Static service locator for registering and retrieving game services. Inheritance object GameService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Managers._GameManager.Injections Assembly: cs.temp.dll.dll Syntax public static class GameService Fields IsReady Indicates if the service system is ready. Declaration public static bool IsReady Field Value Type Description bool Methods Clear() Clears all registered services. Declaration public static void Clear() Get(Type) Retrieves a registered service by its type. Declaration public static object Get(Type type) Parameters Type Name Description Type type Returns Type Description object Get<TInterface>() Retrieves a registered service by its interface type. Declaration public static TInterface Get<TInterface>() Returns Type Description TInterface Type Parameters Name Description TInterface IsRegistered(Type) Checks if a service of the given type is registered. Declaration public static bool IsRegistered(Type type) Parameters Type Name Description Type type Returns Type Description bool IsRegistered<TInterface>() Checks if a service of the given interface type is registered. Declaration public static bool IsRegistered<TInterface>() Returns Type Description bool Type Parameters Name Description TInterface Register<TInterface>(TInterface) Registers a service instance for a given interface type. Overwrites if already registered. Declaration public static void Register<TInterface>(TInterface service) Parameters Type Name Description TInterface service Type Parameters Name Description TInterface"
  },
  "api/Managers._GameManager.Injections.GameServiceInjector.html": {
    "href": "api/Managers._GameManager.Injections.GameServiceInjector.html",
    "title": "Class GameServiceInjector | Harvest Grove code documentation",
    "keywords": "Class GameServiceInjector Inheritance object GameServiceInjector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Managers._GameManager.Injections Assembly: cs.temp.dll.dll Syntax public static class GameServiceInjector Methods InjectInto(GameObject) Declaration public static void InjectInto(GameObject gameObject) Parameters Type Name Description GameObject gameObject InjectInto(object) Declaration public static void InjectInto(object instance) Parameters Type Name Description object instance"
  },
  "api/Managers._GameManager.Injections.html": {
    "href": "api/Managers._GameManager.Injections.html",
    "title": "Namespace Managers._GameManager.Injections | Harvest Grove code documentation",
    "keywords": "Namespace Managers._GameManager.Injections Classes GameContextManager GameService Static service locator for registering and retrieving game services. GameServiceInjector InjectAttribute"
  },
  "api/Managers._GameManager.Injections.Implementations.BuildingData.html": {
    "href": "api/Managers._GameManager.Injections.Implementations.BuildingData.html",
    "title": "Class BuildingData | Harvest Grove code documentation",
    "keywords": "Class BuildingData Inheritance object BuildingData Namespace: Managers._GameManager.Injections.Implementations Assembly: cs.temp.dll.dll Syntax public class BuildingData : IBuildingData Constructors BuildingData(GameObject) Declaration public BuildingData(GameObject buildingPlaceholderGameObject) Parameters Type Name Description GameObject buildingPlaceholderGameObject Properties BuildingPlaceholderGameObject Declaration public GameObject BuildingPlaceholderGameObject { get; } Property Value Type Description GameObject"
  },
  "api/Managers._GameManager.Injections.Implementations.CanvasData.html": {
    "href": "api/Managers._GameManager.Injections.Implementations.CanvasData.html",
    "title": "Class CanvasData | Harvest Grove code documentation",
    "keywords": "Class CanvasData Inheritance object CanvasData Namespace: Managers._GameManager.Injections.Implementations Assembly: cs.temp.dll.dll Syntax public class CanvasData : ICanvasData Constructors CanvasData(Canvas, WaterUI, GameObject, GameObject, AnimalHousingUI, Canvas) Declaration public CanvasData(Canvas questsCanvas, WaterUI waterCanUI, GameObject npcDialogueCanvas, GameObject sleepingUI, AnimalHousingUI animalHousingUI, Canvas animalBuyUI) Parameters Type Name Description Canvas questsCanvas WaterUI waterCanUI GameObject npcDialogueCanvas GameObject sleepingUI AnimalHousingUI animalHousingUI Canvas animalBuyUI Properties AnimalBuyUICanvas Declaration public Canvas AnimalBuyUICanvas { get; } Property Value Type Description Canvas AnimalHousingUI Declaration public AnimalHousingUI AnimalHousingUI { get; } Property Value Type Description AnimalHousingUI NpcDialogueCanvasGO Declaration public GameObject NpcDialogueCanvasGO { get; } Property Value Type Description GameObject QuestsCanvas Declaration public Canvas QuestsCanvas { get; } Property Value Type Description Canvas SleepingUIGO Declaration public GameObject SleepingUIGO { get; } Property Value Type Description GameObject WaterCanUI Declaration public WaterUI WaterCanUI { get; } Property Value Type Description WaterUI"
  },
  "api/Managers._GameManager.Injections.Implementations.CookingSystemService.html": {
    "href": "api/Managers._GameManager.Injections.Implementations.CookingSystemService.html",
    "title": "Class CookingSystemService | Harvest Grove code documentation",
    "keywords": "Class CookingSystemService Inheritance object CookingSystemService Namespace: Managers._GameManager.Injections.Implementations Assembly: cs.temp.dll.dll Syntax public class CookingSystemService : ICookingSystemData Constructors CookingSystemService(CookingSystem, CauldronSavingSO, UnlockedRecipesSO, Canvas) Declaration public CookingSystemService(CookingSystem cookingSystem, CauldronSavingSO cauldronSavingSO, UnlockedRecipesSO unlockedRecipesSO, Canvas cookingCanvas) Parameters Type Name Description CookingSystem cookingSystem CauldronSavingSO cauldronSavingSO UnlockedRecipesSO unlockedRecipesSO Canvas cookingCanvas Properties CauldronSavingSO Declaration public CauldronSavingSO CauldronSavingSO { get; set; } Property Value Type Description CauldronSavingSO CookingCanvas Declaration public Canvas CookingCanvas { get; set; } Property Value Type Description Canvas CookingSystem Declaration public CookingSystem CookingSystem { get; set; } Property Value Type Description CookingSystem UnlockedRecipesSO Declaration public UnlockedRecipesSO UnlockedRecipesSO { get; set; } Property Value Type Description UnlockedRecipesSO"
  },
  "api/Managers._GameManager.Injections.Implementations.GameData.html": {
    "href": "api/Managers._GameManager.Injections.Implementations.GameData.html",
    "title": "Class GameData | Harvest Grove code documentation",
    "keywords": "Class GameData Inheritance object GameData Namespace: Managers._GameManager.Injections.Implementations Assembly: cs.temp.dll.dll Syntax public class GameData : IGameData Constructors GameData(AnimalsDatabase, BuildableHolderSO, MapBuildingsDataSO, AnyMaterialSO, ObjectTilesSO, IslandsDictionaryNames, ActionsCostSO, IslandDistanceMap) Declaration public GameData(AnimalsDatabase animalsHolder, BuildableHolderSO buildableHolder, MapBuildingsDataSO mapBuildingsData, AnyMaterialSO getAny, ObjectTilesSO getObjectsScriptableObjs, IslandsDictionaryNames currentIsland, ActionsCostSO actionsCostSo, IslandDistanceMap islandDistanceMap) Parameters Type Name Description AnimalsDatabase animalsHolder BuildableHolderSO buildableHolder MapBuildingsDataSO mapBuildingsData AnyMaterialSO getAny ObjectTilesSO getObjectsScriptableObjs IslandsDictionaryNames currentIsland ActionsCostSO actionsCostSo IslandDistanceMap islandDistanceMap Properties ActionCosts Declaration public ActionsCostSO ActionCosts { get; } Property Value Type Description ActionsCostSO AnimalsDatabase Declaration public AnimalsDatabase AnimalsDatabase { get; } Property Value Type Description AnimalsDatabase AnyMaterialSo Declaration public AnyMaterialSO AnyMaterialSo { get; } Property Value Type Description AnyMaterialSO BuildableHolder Declaration public BuildableHolderSO BuildableHolder { get; } Property Value Type Description BuildableHolderSO CurrentIsland Declaration public IslandsDictionaryNames CurrentIsland { get; } Property Value Type Description IslandsDictionaryNames GetObjectsScriptableObjs Declaration public ObjectTilesSO GetObjectsScriptableObjs { get; } Property Value Type Description ObjectTilesSO HarborData Declaration public HarborData HarborData { get; set; } Property Value Type Description HarborData IslandDistanceMap Declaration public IslandDistanceMap IslandDistanceMap { get; } Property Value Type Description IslandDistanceMap MapBuildingsData Declaration public MapBuildingsDataSO MapBuildingsData { get; } Property Value Type Description MapBuildingsDataSO"
  },
  "api/Managers._GameManager.Injections.Implementations.HealthService.html": {
    "href": "api/Managers._GameManager.Injections.Implementations.HealthService.html",
    "title": "Class HealthService | Harvest Grove code documentation",
    "keywords": "Class HealthService Inheritance object HealthService Namespace: Managers._GameManager.Injections.Implementations Assembly: cs.temp.dll.dll Syntax public class HealthService : IHealthService Constructors HealthService(PlayerHealth) Declaration public HealthService(PlayerHealth playerHealth) Parameters Type Name Description PlayerHealth playerHealth Properties PlayerHealth Declaration public PlayerHealth PlayerHealth { get; } Property Value Type Description PlayerHealth"
  },
  "api/Managers._GameManager.Injections.Implementations.html": {
    "href": "api/Managers._GameManager.Injections.Implementations.html",
    "title": "Namespace Managers._GameManager.Injections.Implementations | Harvest Grove code documentation",
    "keywords": "Namespace Managers._GameManager.Injections.Implementations Classes BuildingData CanvasData CookingSystemService GameData HealthService InventoryService ManagerDataService OtherDataService PlayerDataService PlayerEventsServices PlayerTransformService ShopDataService TilemapService"
  },
  "api/Managers._GameManager.Injections.Implementations.InventoryService.html": {
    "href": "api/Managers._GameManager.Injections.Implementations.InventoryService.html",
    "title": "Class InventoryService | Harvest Grove code documentation",
    "keywords": "Class InventoryService Inheritance object InventoryService Namespace: Managers._GameManager.Injections.Implementations Assembly: cs.temp.dll.dll Syntax public class InventoryService : IInventoryService Constructors InventoryService(InventoryUIController, StaticInventoryDisplay, DynamicInventoryInterface, ItemInfoDisplay) Declaration public InventoryService(InventoryUIController inventoryUIController, StaticInventoryDisplay hotBarStaticInventoryDisplay, DynamicInventoryInterface dynamicInventoryInterface, ItemInfoDisplay itemInfoDisplay) Parameters Type Name Description InventoryUIController inventoryUIController StaticInventoryDisplay hotBarStaticInventoryDisplay DynamicInventoryInterface dynamicInventoryInterface ItemInfoDisplay itemInfoDisplay Properties BackpackInventory Declaration public BackpackInventory BackpackInventory { get; set; } Property Value Type Description BackpackInventory DynamicInventoryInterface Declaration public DynamicInventoryInterface DynamicInventoryInterface { get; set; } Property Value Type Description DynamicInventoryInterface Hotbar Declaration public Hotbar Hotbar { get; set; } Property Value Type Description Hotbar HotBarInventory Declaration public HotBarInventory HotBarInventory { get; set; } Property Value Type Description HotBarInventory HotBarStaticInventoryDisplay Declaration public StaticInventoryDisplay HotBarStaticInventoryDisplay { get; set; } Property Value Type Description StaticInventoryDisplay InteractUIController Declaration public InteractUIController InteractUIController { get; set; } Property Value Type Description InteractUIController InventoryUIController Declaration public InventoryUIController InventoryUIController { get; set; } Property Value Type Description InventoryUIController ItemInfoDisplay Declaration public ItemInfoDisplay ItemInfoDisplay { get; set; } Property Value Type Description ItemInfoDisplay Observers Declaration public List<Action<InteractUIController>> Observers { get; set; } Property Value Type Description List<><Action<><InteractUIController>> Methods AddAction(Action<InteractUIController>) Declaration public void AddAction(Action<InteractUIController> action) Parameters Type Name Description Action<><InteractUIController> action HandlePlayerSpawned() Declaration public void HandlePlayerSpawned()"
  },
  "api/Managers._GameManager.Injections.Implementations.ManagerDataService.html": {
    "href": "api/Managers._GameManager.Injections.Implementations.ManagerDataService.html",
    "title": "Class ManagerDataService | Harvest Grove code documentation",
    "keywords": "Class ManagerDataService Inheritance object ManagerDataService Namespace: Managers._GameManager.Injections.Implementations Assembly: cs.temp.dll.dll Syntax public class ManagerDataService : IManagerData Constructors ManagerDataService(SavingAndLoadingManager, Timer, ThirstHungerManager, ConsumableManager, MatingManager, SeedDatabaseSO, CampfireManagerSO, UnlockedBuildingsSO, ItemDatabaseSO, NPCsHolderSO, DayInformationSO, DeathTreeSO, AttackingVegetableSO, ChestSavingSO, ResetSOHolder, AnimalHousingManager, TutorialManager) Declaration public ManagerDataService(SavingAndLoadingManager savingManager, Timer worldTimer, ThirstHungerManager thirstHungerManager, ConsumableManager consumableManager, MatingManager matingManager, SeedDatabaseSO seedDatabase, CampfireManagerSO campfireManager, UnlockedBuildingsSO unlockedBuildings, ItemDatabaseSO itemDatabase, NPCsHolderSO npcsHolder, DayInformationSO dayInformation, DeathTreeSO deathTree, AttackingVegetableSO attackingVegetable, ChestSavingSO chestSaving, ResetSOHolder resetSOHolder, AnimalHousingManager animalHousingManager, TutorialManager tutorialManager) Parameters Type Name Description SavingAndLoadingManager savingManager Timer worldTimer ThirstHungerManager thirstHungerManager ConsumableManager consumableManager MatingManager matingManager SeedDatabaseSO seedDatabase CampfireManagerSO campfireManager UnlockedBuildingsSO unlockedBuildings ItemDatabaseSO itemDatabase NPCsHolderSO npcsHolder DayInformationSO dayInformation DeathTreeSO deathTree AttackingVegetableSO attackingVegetable ChestSavingSO chestSaving ResetSOHolder resetSOHolder AnimalHousingManager animalHousingManager TutorialManager tutorialManager Properties AnimalHousingManager Declaration public AnimalHousingManager AnimalHousingManager { get; } Property Value Type Description AnimalHousingManager AttackingVegetable Declaration public AttackingVegetableSO AttackingVegetable { get; } Property Value Type Description AttackingVegetableSO CampfireManager Declaration public CampfireManagerSO CampfireManager { get; } Property Value Type Description CampfireManagerSO ChestSaving Declaration public ChestSavingSO ChestSaving { get; } Property Value Type Description ChestSavingSO ConsumableManager Declaration public ConsumableManager ConsumableManager { get; } Property Value Type Description ConsumableManager DayInformation Declaration public DayInformationSO DayInformation { get; } Property Value Type Description DayInformationSO DeathTreeSO Declaration public DeathTreeSO DeathTreeSO { get; } Property Value Type Description DeathTreeSO ItemDatabaseSO Declaration public ItemDatabaseSO ItemDatabaseSO { get; } Property Value Type Description ItemDatabaseSO MatingManager Declaration public MatingManager MatingManager { get; } Property Value Type Description MatingManager NPCsHolder Declaration public NPCsHolderSO NPCsHolder { get; } Property Value Type Description NPCsHolderSO ResetSOHolder Declaration public ResetSOHolder ResetSOHolder { get; } Property Value Type Description ResetSOHolder SavingManager Declaration public SavingAndLoadingManager SavingManager { get; } Property Value Type Description SavingAndLoadingManager SeedDatabase Declaration public SeedDatabaseSO SeedDatabase { get; } Property Value Type Description SeedDatabaseSO ThirstHungerManager Declaration public ThirstHungerManager ThirstHungerManager { get; } Property Value Type Description ThirstHungerManager TutorialManager Declaration public TutorialManager TutorialManager { get; } Property Value Type Description TutorialManager UnlockedBuildings Declaration public UnlockedBuildingsSO UnlockedBuildings { get; } Property Value Type Description UnlockedBuildingsSO WorldTimer Declaration public Timer WorldTimer { get; } Property Value Type Description Timer"
  },
  "api/Managers._GameManager.Injections.Implementations.OtherDataService.html": {
    "href": "api/Managers._GameManager.Injections.Implementations.OtherDataService.html",
    "title": "Class OtherDataService | Harvest Grove code documentation",
    "keywords": "Class OtherDataService Inheritance object OtherDataService Namespace: Managers._GameManager.Injections.Implementations Assembly: cs.temp.dll.dll Syntax public class OtherDataService : IOtherData Constructors OtherDataService(ObjectPooling, TileBase, TileBase) Declaration public OtherDataService(ObjectPooling objectPooling, TileBase inRangeTile, TileBase notInRangeTile) Parameters Type Name Description ObjectPooling objectPooling TileBase inRangeTile TileBase notInRangeTile Properties InRangeTile Declaration public TileBase InRangeTile { get; } Property Value Type Description TileBase NotInRangeTile Declaration public TileBase NotInRangeTile { get; } Property Value Type Description TileBase ObjectPooling Declaration public ObjectPooling ObjectPooling { get; } Property Value Type Description ObjectPooling"
  },
  "api/Managers._GameManager.Injections.Implementations.PlayerDataService.html": {
    "href": "api/Managers._GameManager.Injections.Implementations.PlayerDataService.html",
    "title": "Class PlayerDataService | Harvest Grove code documentation",
    "keywords": "Class PlayerDataService Inheritance object PlayerDataService Namespace: Managers._GameManager.Injections.Implementations Assembly: cs.temp.dll.dll Syntax public class PlayerDataService : IPlayerData Constructors PlayerDataService(PlayerDataSO) Declaration public PlayerDataService(PlayerDataSO playerData) Parameters Type Name Description PlayerDataSO playerData Properties PlayerData Declaration public PlayerDataSO PlayerData { get; } Property Value Type Description PlayerDataSO"
  },
  "api/Managers._GameManager.Injections.Implementations.PlayerEventsServices.html": {
    "href": "api/Managers._GameManager.Injections.Implementations.PlayerEventsServices.html",
    "title": "Class PlayerEventsServices | Harvest Grove code documentation",
    "keywords": "Class PlayerEventsServices Inheritance object PlayerEventsServices Namespace: Managers._GameManager.Injections.Implementations Assembly: cs.temp.dll.dll Syntax public class PlayerEventsServices : IPlayerEvents Methods NotifyPlayerSpawned() Declaration public void NotifyPlayerSpawned() Events OnPlayerSpawned Declaration public event Action OnPlayerSpawned Event Type Type Description Action"
  },
  "api/Managers._GameManager.Injections.Implementations.PlayerTransformService.html": {
    "href": "api/Managers._GameManager.Injections.Implementations.PlayerTransformService.html",
    "title": "Class PlayerTransformService | Harvest Grove code documentation",
    "keywords": "Class PlayerTransformService Inheritance object PlayerTransformService Namespace: Managers._GameManager.Injections.Implementations Assembly: cs.temp.dll.dll Syntax public class PlayerTransformService : IPlayerTransfromService Constructors PlayerTransformService(GameObject, GameObject, GameContextManager) Declaration public PlayerTransformService(GameObject playerPrefab, GameObject petPrefab, GameContextManager gameContextManager) Parameters Type Name Description GameObject playerPrefab GameObject petPrefab GameContextManager gameContextManager Properties PlayerInstanceGO Declaration public GameObject PlayerInstanceGO { get; set; } Property Value Type Description GameObject Methods SpawnPet(Vector2) Declaration public void SpawnPet(Vector2 position) Parameters Type Name Description Vector2 position SpawnPlayer() Declaration public void SpawnPlayer() SpawnPlayerWhenWorldReady() Declaration public UniTask SpawnPlayerWhenWorldReady() Returns Type Description UniTask"
  },
  "api/Managers._GameManager.Injections.Implementations.ShopDataService.html": {
    "href": "api/Managers._GameManager.Injections.Implementations.ShopDataService.html",
    "title": "Class ShopDataService | Harvest Grove code documentation",
    "keywords": "Class ShopDataService Inheritance object ShopDataService Namespace: Managers._GameManager.Injections.Implementations Assembly: cs.temp.dll.dll Syntax public class ShopDataService : IShopData Constructors ShopDataService(GameObject, GameObject, Canvas, Vendor) Declaration public ShopDataService(GameObject sellingItemCanvas, GameObject buyingItemCanvas, Canvas shopCanvas, Vendor vendor) Parameters Type Name Description GameObject sellingItemCanvas GameObject buyingItemCanvas Canvas shopCanvas Vendor vendor Properties BuyingItemCanvas Declaration public GameObject BuyingItemCanvas { get; } Property Value Type Description GameObject SellingItemCanvas Declaration public GameObject SellingItemCanvas { get; } Property Value Type Description GameObject ShopCanvas Declaration public Canvas ShopCanvas { get; } Property Value Type Description Canvas Vendor Declaration public Vendor Vendor { get; } Property Value Type Description Vendor"
  },
  "api/Managers._GameManager.Injections.Implementations.TilemapService.html": {
    "href": "api/Managers._GameManager.Injections.Implementations.TilemapService.html",
    "title": "Class TilemapService | Harvest Grove code documentation",
    "keywords": "Class TilemapService Inheritance object TilemapService Namespace: Managers._GameManager.Injections.Implementations Assembly: cs.temp.dll.dll Syntax public class TilemapService : ITileMapService Constructors TilemapService(WorldDataSO, TileGrid, IslandReloadSettingsSO) Declaration public TilemapService(WorldDataSO worldData, TileGrid tileGrid, IslandReloadSettingsSO islandReloadSettings) Parameters Type Name Description WorldDataSO worldData TileGrid tileGrid IslandReloadSettingsSO islandReloadSettings Properties IslandReloadSettings Declaration public IslandReloadSettingsSO IslandReloadSettings { get; } Property Value Type Description IslandReloadSettingsSO TileGrid Declaration public TileGrid TileGrid { get; } Property Value Type Description TileGrid WorldData Declaration public WorldDataSO WorldData { get; } Property Value Type Description WorldDataSO Methods GetTilemap(TilemapType) Declaration public TilemapStructure GetTilemap(TilemapType type) Parameters Type Name Description TilemapType type Returns Type Description TilemapStructure"
  },
  "api/Managers._GameManager.Injections.InjectAttribute.html": {
    "href": "api/Managers._GameManager.Injections.InjectAttribute.html",
    "title": "Class InjectAttribute | Harvest Grove code documentation",
    "keywords": "Class InjectAttribute Inheritance object InjectAttribute Namespace: Managers._GameManager.Injections Assembly: cs.temp.dll.dll Syntax public class InjectAttribute : Attribute"
  },
  "api/Managers._GameManager.Injections.Installer.GameInstaller.html": {
    "href": "api/Managers._GameManager.Injections.Installer.GameInstaller.html",
    "title": "Class GameInstaller | Harvest Grove code documentation",
    "keywords": "Class GameInstaller Inheritance object GameInstaller Namespace: Managers._GameManager.Injections.Installer Assembly: cs.temp.dll.dll Syntax public class GameInstaller : MonoBehaviour"
  },
  "api/Managers._GameManager.Injections.Installer.html": {
    "href": "api/Managers._GameManager.Injections.Installer.html",
    "title": "Namespace Managers._GameManager.Injections.Installer | Harvest Grove code documentation",
    "keywords": "Namespace Managers._GameManager.Injections.Installer Classes GameInstaller"
  },
  "api/Managers._GameManager.Injections.Interfaces.html": {
    "href": "api/Managers._GameManager.Injections.Interfaces.html",
    "title": "Namespace Managers._GameManager.Injections.Interfaces | Harvest Grove code documentation",
    "keywords": "Namespace Managers._GameManager.Injections.Interfaces Classes IHealthService Interfaces IBuildingData ICanvasData ICookingSystemData IGameData IInventoryService IManagerData IOtherData IPlayerData Holds PlayerDataSO and input map IPlayerEvents Interface for player events IPlayerTransfromService Holds player instance and transform IShopData ITileMapService"
  },
  "api/Managers._GameManager.Injections.Interfaces.IBuildingData.html": {
    "href": "api/Managers._GameManager.Injections.Interfaces.IBuildingData.html",
    "title": "Interface IBuildingData | Harvest Grove code documentation",
    "keywords": "Interface IBuildingData Namespace: Managers._GameManager.Injections.Interfaces Assembly: cs.temp.dll.dll Syntax public interface IBuildingData Properties BuildingPlaceholderGameObject Declaration GameObject BuildingPlaceholderGameObject { get; } Property Value Type Description GameObject"
  },
  "api/Managers._GameManager.Injections.Interfaces.ICanvasData.html": {
    "href": "api/Managers._GameManager.Injections.Interfaces.ICanvasData.html",
    "title": "Interface ICanvasData | Harvest Grove code documentation",
    "keywords": "Interface ICanvasData Namespace: Managers._GameManager.Injections.Interfaces Assembly: cs.temp.dll.dll Syntax public interface ICanvasData Properties AnimalBuyUICanvas Declaration Canvas AnimalBuyUICanvas { get; } Property Value Type Description Canvas AnimalHousingUI Declaration AnimalHousingUI AnimalHousingUI { get; } Property Value Type Description AnimalHousingUI NpcDialogueCanvasGO Declaration GameObject NpcDialogueCanvasGO { get; } Property Value Type Description GameObject QuestsCanvas Declaration Canvas QuestsCanvas { get; } Property Value Type Description Canvas SleepingUIGO Declaration GameObject SleepingUIGO { get; } Property Value Type Description GameObject WaterCanUI Declaration WaterUI WaterCanUI { get; } Property Value Type Description WaterUI"
  },
  "api/Managers._GameManager.Injections.Interfaces.ICookingSystemData.html": {
    "href": "api/Managers._GameManager.Injections.Interfaces.ICookingSystemData.html",
    "title": "Interface ICookingSystemData | Harvest Grove code documentation",
    "keywords": "Interface ICookingSystemData Namespace: Managers._GameManager.Injections.Interfaces Assembly: cs.temp.dll.dll Syntax public interface ICookingSystemData Properties CauldronSavingSO Declaration CauldronSavingSO CauldronSavingSO { get; set; } Property Value Type Description CauldronSavingSO CookingCanvas Declaration Canvas CookingCanvas { get; set; } Property Value Type Description Canvas CookingSystem Declaration CookingSystem CookingSystem { get; set; } Property Value Type Description CookingSystem UnlockedRecipesSO Declaration UnlockedRecipesSO UnlockedRecipesSO { get; set; } Property Value Type Description UnlockedRecipesSO"
  },
  "api/Managers._GameManager.Injections.Interfaces.IGameData.html": {
    "href": "api/Managers._GameManager.Injections.Interfaces.IGameData.html",
    "title": "Interface IGameData | Harvest Grove code documentation",
    "keywords": "Interface IGameData Namespace: Managers._GameManager.Injections.Interfaces Assembly: cs.temp.dll.dll Syntax public interface IGameData Properties ActionCosts Declaration ActionsCostSO ActionCosts { get; } Property Value Type Description ActionsCostSO AnimalsDatabase Declaration AnimalsDatabase AnimalsDatabase { get; } Property Value Type Description AnimalsDatabase AnyMaterialSo Declaration AnyMaterialSO AnyMaterialSo { get; } Property Value Type Description AnyMaterialSO BuildableHolder Declaration BuildableHolderSO BuildableHolder { get; } Property Value Type Description BuildableHolderSO CurrentIsland Declaration IslandsDictionaryNames CurrentIsland { get; } Property Value Type Description IslandsDictionaryNames GetObjectsScriptableObjs Declaration ObjectTilesSO GetObjectsScriptableObjs { get; } Property Value Type Description ObjectTilesSO HarborData Declaration HarborData HarborData { get; set; } Property Value Type Description HarborData IslandDistanceMap Declaration IslandDistanceMap IslandDistanceMap { get; } Property Value Type Description IslandDistanceMap MapBuildingsData Declaration MapBuildingsDataSO MapBuildingsData { get; } Property Value Type Description MapBuildingsDataSO"
  },
  "api/Managers._GameManager.Injections.Interfaces.IHealthService.html": {
    "href": "api/Managers._GameManager.Injections.Interfaces.IHealthService.html",
    "title": "Class IHealthService | Harvest Grove code documentation",
    "keywords": "Class IHealthService Inheritance object IHealthService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Managers._GameManager.Injections.Interfaces Assembly: cs.temp.dll.dll Syntax public class IHealthService Properties PlayerHealth Declaration public PlayerHealth PlayerHealth { get; set; } Property Value Type Description PlayerHealth"
  },
  "api/Managers._GameManager.Injections.Interfaces.IInventoryService.html": {
    "href": "api/Managers._GameManager.Injections.Interfaces.IInventoryService.html",
    "title": "Interface IInventoryService | Harvest Grove code documentation",
    "keywords": "Interface IInventoryService Namespace: Managers._GameManager.Injections.Interfaces Assembly: cs.temp.dll.dll Syntax public interface IInventoryService Properties BackpackInventory Declaration BackpackInventory BackpackInventory { get; set; } Property Value Type Description BackpackInventory DynamicInventoryInterface Declaration DynamicInventoryInterface DynamicInventoryInterface { get; set; } Property Value Type Description DynamicInventoryInterface Hotbar Declaration Hotbar Hotbar { get; set; } Property Value Type Description Hotbar HotBarInventory Declaration HotBarInventory HotBarInventory { get; set; } Property Value Type Description HotBarInventory HotBarStaticInventoryDisplay Declaration StaticInventoryDisplay HotBarStaticInventoryDisplay { get; set; } Property Value Type Description StaticInventoryDisplay InteractUIController Declaration InteractUIController InteractUIController { get; set; } Property Value Type Description InteractUIController InventoryUIController Declaration InventoryUIController InventoryUIController { get; set; } Property Value Type Description InventoryUIController ItemInfoDisplay Declaration ItemInfoDisplay ItemInfoDisplay { get; set; } Property Value Type Description ItemInfoDisplay Observers Declaration List<Action<InteractUIController>> Observers { get; set; } Property Value Type Description List<><Action<><InteractUIController>> Methods AddAction(Action<InteractUIController>) Declaration void AddAction(Action<InteractUIController> action) Parameters Type Name Description Action<><InteractUIController> action HandlePlayerSpawned() Declaration void HandlePlayerSpawned()"
  },
  "api/Managers._GameManager.Injections.Interfaces.IManagerData.html": {
    "href": "api/Managers._GameManager.Injections.Interfaces.IManagerData.html",
    "title": "Interface IManagerData | Harvest Grove code documentation",
    "keywords": "Interface IManagerData Namespace: Managers._GameManager.Injections.Interfaces Assembly: cs.temp.dll.dll Syntax public interface IManagerData Properties AnimalHousingManager Declaration AnimalHousingManager AnimalHousingManager { get; } Property Value Type Description AnimalHousingManager AttackingVegetable Declaration AttackingVegetableSO AttackingVegetable { get; } Property Value Type Description AttackingVegetableSO CampfireManager Declaration CampfireManagerSO CampfireManager { get; } Property Value Type Description CampfireManagerSO ChestSaving Declaration ChestSavingSO ChestSaving { get; } Property Value Type Description ChestSavingSO ConsumableManager Declaration ConsumableManager ConsumableManager { get; } Property Value Type Description ConsumableManager DayInformation Declaration DayInformationSO DayInformation { get; } Property Value Type Description DayInformationSO DeathTreeSO Declaration DeathTreeSO DeathTreeSO { get; } Property Value Type Description DeathTreeSO ItemDatabaseSO Declaration ItemDatabaseSO ItemDatabaseSO { get; } Property Value Type Description ItemDatabaseSO MatingManager Declaration MatingManager MatingManager { get; } Property Value Type Description MatingManager NPCsHolder Declaration NPCsHolderSO NPCsHolder { get; } Property Value Type Description NPCsHolderSO ResetSOHolder Declaration ResetSOHolder ResetSOHolder { get; } Property Value Type Description ResetSOHolder SavingManager Declaration SavingAndLoadingManager SavingManager { get; } Property Value Type Description SavingAndLoadingManager SeedDatabase Declaration SeedDatabaseSO SeedDatabase { get; } Property Value Type Description SeedDatabaseSO ThirstHungerManager Declaration ThirstHungerManager ThirstHungerManager { get; } Property Value Type Description ThirstHungerManager TutorialManager Declaration TutorialManager TutorialManager { get; } Property Value Type Description TutorialManager UnlockedBuildings Declaration UnlockedBuildingsSO UnlockedBuildings { get; } Property Value Type Description UnlockedBuildingsSO WorldTimer Declaration Timer WorldTimer { get; } Property Value Type Description Timer"
  },
  "api/Managers._GameManager.Injections.Interfaces.IOtherData.html": {
    "href": "api/Managers._GameManager.Injections.Interfaces.IOtherData.html",
    "title": "Interface IOtherData | Harvest Grove code documentation",
    "keywords": "Interface IOtherData Namespace: Managers._GameManager.Injections.Interfaces Assembly: cs.temp.dll.dll Syntax public interface IOtherData Properties InRangeTile Declaration TileBase InRangeTile { get; } Property Value Type Description TileBase NotInRangeTile Declaration TileBase NotInRangeTile { get; } Property Value Type Description TileBase ObjectPooling Declaration ObjectPooling ObjectPooling { get; } Property Value Type Description ObjectPooling"
  },
  "api/Managers._GameManager.Injections.Interfaces.IPlayerData.html": {
    "href": "api/Managers._GameManager.Injections.Interfaces.IPlayerData.html",
    "title": "Interface IPlayerData | Harvest Grove code documentation",
    "keywords": "Interface IPlayerData Holds PlayerDataSO and input map Namespace: Managers._GameManager.Injections.Interfaces Assembly: cs.temp.dll.dll Syntax public interface IPlayerData Properties PlayerData Declaration PlayerDataSO PlayerData { get; } Property Value Type Description PlayerDataSO"
  },
  "api/Managers._GameManager.Injections.Interfaces.IPlayerEvents.html": {
    "href": "api/Managers._GameManager.Injections.Interfaces.IPlayerEvents.html",
    "title": "Interface IPlayerEvents | Harvest Grove code documentation",
    "keywords": "Interface IPlayerEvents Interface for player events Namespace: Managers._GameManager.Injections.Interfaces Assembly: cs.temp.dll.dll Syntax public interface IPlayerEvents Methods NotifyPlayerSpawned() Declaration void NotifyPlayerSpawned() Events OnPlayerSpawned Declaration event Action OnPlayerSpawned Event Type Type Description Action"
  },
  "api/Managers._GameManager.Injections.Interfaces.IPlayerTransfromService.html": {
    "href": "api/Managers._GameManager.Injections.Interfaces.IPlayerTransfromService.html",
    "title": "Interface IPlayerTransfromService | Harvest Grove code documentation",
    "keywords": "Interface IPlayerTransfromService Holds player instance and transform Namespace: Managers._GameManager.Injections.Interfaces Assembly: cs.temp.dll.dll Syntax public interface IPlayerTransfromService Properties PlayerInstanceGO Declaration GameObject PlayerInstanceGO { get; } Property Value Type Description GameObject Methods SpawnPet(Vector2) Declaration void SpawnPet(Vector2 position) Parameters Type Name Description Vector2 position SpawnPlayer() Declaration void SpawnPlayer() SpawnPlayerWhenWorldReady() Declaration UniTask SpawnPlayerWhenWorldReady() Returns Type Description UniTask"
  },
  "api/Managers._GameManager.Injections.Interfaces.IShopData.html": {
    "href": "api/Managers._GameManager.Injections.Interfaces.IShopData.html",
    "title": "Interface IShopData | Harvest Grove code documentation",
    "keywords": "Interface IShopData Namespace: Managers._GameManager.Injections.Interfaces Assembly: cs.temp.dll.dll Syntax public interface IShopData Properties BuyingItemCanvas Declaration GameObject BuyingItemCanvas { get; } Property Value Type Description GameObject SellingItemCanvas Declaration GameObject SellingItemCanvas { get; } Property Value Type Description GameObject ShopCanvas Declaration Canvas ShopCanvas { get; } Property Value Type Description Canvas Vendor Declaration Vendor Vendor { get; } Property Value Type Description Vendor"
  },
  "api/Managers._GameManager.Injections.Interfaces.ITileMapService.html": {
    "href": "api/Managers._GameManager.Injections.Interfaces.ITileMapService.html",
    "title": "Interface ITileMapService | Harvest Grove code documentation",
    "keywords": "Interface ITileMapService Namespace: Managers._GameManager.Injections.Interfaces Assembly: cs.temp.dll.dll Syntax public interface ITileMapService Properties IslandReloadSettings Declaration IslandReloadSettingsSO IslandReloadSettings { get; } Property Value Type Description IslandReloadSettingsSO TileGrid Declaration TileGrid TileGrid { get; } Property Value Type Description TileGrid WorldData Declaration WorldDataSO WorldData { get; } Property Value Type Description WorldDataSO Methods GetTilemap(TilemapType) Call this method in the Start or Awake. It won't work if the method is called in Contruct while it's supposed to be injected. Declaration TilemapStructure GetTilemap(TilemapType type) Parameters Type Name Description TilemapType type Returns Type Description TilemapStructure"
  },
  "api/Managers._GameManager.IslandSpawns.BaseIsland.html": {
    "href": "api/Managers._GameManager.IslandSpawns.BaseIsland.html",
    "title": "Class BaseIsland | Harvest Grove code documentation",
    "keywords": "Class BaseIsland Inheritance object BaseIsland CaveIsland ForestIsland HomeIsland Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Managers._GameManager.IslandSpawns Assembly: cs.temp.dll.dll Syntax public abstract class BaseIsland Constructors BaseIsland(GameContextManager) Declaration public BaseIsland(GameContextManager gameContextManager) Parameters Type Name Description GameContextManager gameContextManager Fields GameContextManager Declaration protected GameContextManager GameContextManager Field Value Type Description GameContextManager Methods GetPlayerPosition(bool, bool) Declaration public abstract UniTask<Vector2> GetPlayerPosition(bool isSaving, bool isTravelling) Parameters Type Name Description bool isSaving bool isTravelling Returns Type Description UniTask<><Vector2>"
  },
  "api/Managers._GameManager.IslandSpawns.CaveIsland.html": {
    "href": "api/Managers._GameManager.IslandSpawns.CaveIsland.html",
    "title": "Class CaveIsland | Harvest Grove code documentation",
    "keywords": "Class CaveIsland Inheritance object BaseIsland CaveIsland Inherited Members BaseIsland.GameContextManager object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Managers._GameManager.IslandSpawns Assembly: cs.temp.dll.dll Syntax public class CaveIsland : BaseIsland Constructors CaveIsland(GameContextManager) Declaration public CaveIsland(GameContextManager gameContextManager) Parameters Type Name Description GameContextManager gameContextManager Methods GetPlayerPosition(bool, bool) Declaration public override UniTask<Vector2> GetPlayerPosition(bool isSaving, bool isTravelling) Parameters Type Name Description bool isSaving bool isTravelling Returns Type Description UniTask<><Vector2> Overrides BaseIsland.GetPlayerPosition(bool, bool)"
  },
  "api/Managers._GameManager.IslandSpawns.ForestIsland.html": {
    "href": "api/Managers._GameManager.IslandSpawns.ForestIsland.html",
    "title": "Class ForestIsland | Harvest Grove code documentation",
    "keywords": "Class ForestIsland Inheritance object BaseIsland ForestIsland Inherited Members BaseIsland.GameContextManager object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Managers._GameManager.IslandSpawns Assembly: cs.temp.dll.dll Syntax public class ForestIsland : BaseIsland Constructors ForestIsland(GameContextManager) Declaration public ForestIsland(GameContextManager gameContextManager) Parameters Type Name Description GameContextManager gameContextManager Methods GetPlayerPosition(bool, bool) Declaration public override UniTask<Vector2> GetPlayerPosition(bool isSaving, bool isTravelling) Parameters Type Name Description bool isSaving bool isTravelling Returns Type Description UniTask<><Vector2> Overrides BaseIsland.GetPlayerPosition(bool, bool)"
  },
  "api/Managers._GameManager.IslandSpawns.HomeIsland.html": {
    "href": "api/Managers._GameManager.IslandSpawns.HomeIsland.html",
    "title": "Class HomeIsland | Harvest Grove code documentation",
    "keywords": "Class HomeIsland Inheritance object BaseIsland HomeIsland Inherited Members BaseIsland.GameContextManager object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Managers._GameManager.IslandSpawns Assembly: cs.temp.dll.dll Syntax public class HomeIsland : BaseIsland Constructors HomeIsland(GameContextManager) Declaration public HomeIsland(GameContextManager gameContextManager) Parameters Type Name Description GameContextManager gameContextManager Methods GetPlayerPosition(bool, bool) Declaration public override UniTask<Vector2> GetPlayerPosition(bool isInitializing, bool isTravelling) Parameters Type Name Description bool isInitializing bool isTravelling Returns Type Description UniTask<><Vector2> Overrides BaseIsland.GetPlayerPosition(bool, bool)"
  },
  "api/Managers._GameManager.IslandSpawns.html": {
    "href": "api/Managers._GameManager.IslandSpawns.html",
    "title": "Namespace Managers._GameManager.IslandSpawns | Harvest Grove code documentation",
    "keywords": "Namespace Managers._GameManager.IslandSpawns Classes BaseIsland CaveIsland ForestIsland HomeIsland"
  },
  "api/Managers.ConsumableManager.ConsumableManager.html": {
    "href": "api/Managers.ConsumableManager.ConsumableManager.html",
    "title": "Class ConsumableManager | Harvest Grove code documentation",
    "keywords": "Class ConsumableManager Handles consuming items (eat/drink), animations, tutorial hooks, and remainings. Now works with percentage-based units via ThirstHungerManager APIs. Inheritance object ConsumableManager Namespace: Managers.ConsumableManager Assembly: cs.temp.dll.dll Syntax public class ConsumableManager : MonoBehaviour Properties Consumable Declaration public ConsumableSO Consumable { get; set; } Property Value Type Description ConsumableSO Methods Construct(IManagerData, InputsMap, IPlayerTransfromService) Declaration public void Construct(IManagerData managerData, InputsMap inputsMap, IPlayerTransfromService playerTransfromService) Parameters Type Name Description IManagerData managerData InputsMap inputsMap IPlayerTransfromService playerTransfromService"
  },
  "api/Managers.ConsumableManager.html": {
    "href": "api/Managers.ConsumableManager.html",
    "title": "Namespace Managers.ConsumableManager | Harvest Grove code documentation",
    "keywords": "Namespace Managers.ConsumableManager Classes ConsumableManager Handles consuming items (eat/drink), animations, tutorial hooks, and remainings. Now works with percentage-based units via ThirstHungerManager APIs."
  },
  "api/Managers.html": {
    "href": "api/Managers.html",
    "title": "Namespace Managers | Harvest Grove code documentation",
    "keywords": "Namespace Managers Classes MapBuildingsDataSO This ScriptableObject holds data about buildings and constructions in the game ScreenshotManager Interfaces INewWeekAction Enums SideEnum"
  },
  "api/Managers.INewWeekAction.html": {
    "href": "api/Managers.INewWeekAction.html",
    "title": "Interface INewWeekAction | Harvest Grove code documentation",
    "keywords": "Interface INewWeekAction Namespace: Managers Assembly: cs.temp.dll.dll Syntax public interface INewWeekAction Methods NewWeek() Declaration UniTask NewWeek() Returns Type Description UniTask"
  },
  "api/Managers.LoadingManager.html": {
    "href": "api/Managers.LoadingManager.html",
    "title": "Namespace Managers.LoadingManager | Harvest Grove code documentation",
    "keywords": "Namespace Managers.LoadingManager Classes LoadingEvents These events are used in the Loading prefab animator LoadingManager LoadingText"
  },
  "api/Managers.LoadingManager.LoadingEvents.html": {
    "href": "api/Managers.LoadingManager.LoadingEvents.html",
    "title": "Class LoadingEvents | Harvest Grove code documentation",
    "keywords": "Class LoadingEvents These events are used in the Loading prefab animator Inheritance object LoadingEvents Namespace: Managers.LoadingManager Assembly: cs.temp.dll.dll Syntax public class LoadingEvents : MonoBehaviour Methods DisableObject() Declaration public void DisableObject() LoadWorld() Declaration public void LoadWorld()"
  },
  "api/Managers.LoadingManager.LoadingManager.html": {
    "href": "api/Managers.LoadingManager.LoadingManager.html",
    "title": "Class LoadingManager | Harvest Grove code documentation",
    "keywords": "Class LoadingManager Inheritance object LoadingManager Namespace: Managers.LoadingManager Assembly: cs.temp.dll.dll Syntax public class LoadingManager : MonoBehaviour Fields Instance Declaration public static LoadingManager Instance Field Value Type Description LoadingManager Methods EnableLoadingObject() Declaration public void EnableLoadingObject() LoadIsland() Declaration public void LoadIsland() LoadIsland(SceneEnum, bool, WorldDataSO) Loads the island Declaration public void LoadIsland(SceneEnum sceneName, bool isRespawning = false, WorldDataSO passedWorldData = null) Parameters Type Name Description SceneEnum sceneName The name of the island to load bool isRespawning Determines if the player is respawning WorldDataSO passedWorldData Loaded world data OpenFolder() Declaration public void OpenFolder() ShowButton() Declaration public void ShowButton()"
  },
  "api/Managers.LoadingManager.LoadingText.html": {
    "href": "api/Managers.LoadingManager.LoadingText.html",
    "title": "Class LoadingText | Harvest Grove code documentation",
    "keywords": "Class LoadingText Inheritance object LoadingText Namespace: Managers.LoadingManager Assembly: cs.temp.dll.dll Syntax public class LoadingText : MonoBehaviour Properties Instance Declaration public static LoadingText Instance { get; } Property Value Type Description LoadingText Methods SetText(string) Declaration public void SetText(string text) Parameters Type Name Description string text"
  },
  "api/Managers.Managers._Dictionaries.AnimalHousingDictionary.html": {
    "href": "api/Managers.Managers._Dictionaries.AnimalHousingDictionary.html",
    "title": "Class AnimalHousingDictionary | Harvest Grove code documentation",
    "keywords": "Class AnimalHousingDictionary This class holds data about an animal house Inheritance object BuildingDictionary AnimalHousingDictionary BeeDictionary Inherited Members BuildingDictionary.ID BuildingDictionary.Side object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Managers.Managers._Dictionaries Assembly: cs.temp.dll.dll Syntax [Serializable] public class AnimalHousingDictionary : BuildingDictionary Constructors AnimalHousingDictionary(ushort, SideEnum, MainAnimalsEnum, ushort, Vector2) Declaration public AnimalHousingDictionary(ushort ID, SideEnum side, MainAnimalsEnum animalType, ushort maxAmount, Vector2 pos) Parameters Type Name Description ushort ID SideEnum side MainAnimalsEnum animalType ushort maxAmount Vector2 pos AnimalHousingDictionary(ushort, SideEnum, MainAnimalsEnum, Vector2, AnimalsDatabase) Declaration public AnimalHousingDictionary(ushort ID, SideEnum side, MainAnimalsEnum animalType, Vector2 pos, AnimalsDatabase animals) Parameters Type Name Description ushort ID SideEnum side MainAnimalsEnum animalType Vector2 pos AnimalsDatabase animals AnimalHousingDictionary(ushort, SideEnum) Declaration public AnimalHousingDictionary(ushort ID, SideEnum side) Parameters Type Name Description ushort ID SideEnum side Fields AnimalSlots Declaration public List<AnimalSlot> AnimalSlots Field Value Type Description List<><AnimalSlot> AnimalType Declaration public MainAnimalsEnum AnimalType Field Value Type Description MainAnimalsEnum GivenItems Declaration public Dictionary<InventoryItemData, int> GivenItems Field Value Type Description Dictionary<, ><InventoryItemData, int> HomePosition Declaration public Vector2 HomePosition Field Value Type Description Vector2 Methods AddGivenItemAmount(InventoryItemData, int) Declaration public void AddGivenItemAmount(InventoryItemData item, int amount) Parameters Type Name Description InventoryItemData item int amount AddItem(InventoryItemData, int) Declaration public void AddItem(InventoryItemData item, int amount) Parameters Type Name Description InventoryItemData item int amount AddToSlot(AnimalStage, SecondaryAnimalsEnum, bool, string, AnimalsDatabase) Adds the animal to free slot Declaration public GameObject AddToSlot(AnimalStage stage, SecondaryAnimalsEnum secondaryAnimalType, bool spawnAnimal, string animalName, AnimalsDatabase animalsDatabase) Parameters Type Name Description AnimalStage stage SecondaryAnimalsEnum secondaryAnimalType bool spawnAnimal string animalName AnimalsDatabase animalsDatabase Returns Type Description GameObject AnimalAged(int) Declaration public void AnimalAged(int animalID) Parameters Type Name Description int animalID AnimalDied(int, ObjectPooling) Animal died, remove it from the building Declaration public void AnimalDied(int animalID, ObjectPooling objectPooling) Parameters Type Name Description int animalID ObjectPooling objectPooling GetAnimalsEnum(int) Declaration public (MainAnimalsEnum, SecondaryAnimalsEnum) GetAnimalsEnum(int animalID) Parameters Type Name Description int animalID Returns Type Description (MainAnimalsEnum, SecondaryAnimalsEnum) GetOccupiedAnimalSlots() Get all occupied slots Declaration public List<AnimalSlot> GetOccupiedAnimalSlots() Returns Type Description List<><AnimalSlot> List with all the occupied slots GivenItemAmount(InventoryItemData) Declaration public int GivenItemAmount(InventoryItemData item) Parameters Type Name Description InventoryItemData item Returns Type Description int GiveSpecificAnimalWater(ushort) Give water specific animal {based on its id} Declaration public void GiveSpecificAnimalWater(ushort animalID) Parameters Type Name Description ushort animalID HasAnimalInSlot(int) Animal slot holds data about the animal which \"lives\" in this slot Declaration public AnimalSlot HasAnimalInSlot(int animalID) Parameters Type Name Description int animalID Returns Type Description AnimalSlot HasFreeSlot() Checks if the building has a free slot Declaration public bool HasFreeSlot() Returns Type Description bool InitilizeGivenItems(ItemDatabaseSO) Declaration public void InitilizeGivenItems(ItemDatabaseSO itemDatabase) Parameters Type Name Description ItemDatabaseSO itemDatabase OccupiedSLots() Returns how many slots are occupied Declaration public ushort OccupiedSLots() Returns Type Description ushort RemoveAnimal(int, ObjectPooling) Remove animal from the slot based on its id Declaration public void RemoveAnimal(int animalID, ObjectPooling objectPooling) Parameters Type Name Description int animalID ObjectPooling objectPooling RemoveGivenItemAmount(InventoryItemData, int) Declaration public bool RemoveGivenItemAmount(InventoryItemData item, int amount) Parameters Type Name Description InventoryItemData item int amount Returns Type Description bool true if the item was removed, otherwise false SetAnimalsHungry() Sets all animals hungry {when a new day starts!!} Declaration public void SetAnimalsHungry() SetAnimalsThirsty() Sets all animals thirsty {when a new day starts!!} Declaration public void SetAnimalsThirsty() SetSpecificAnimalFed(ushort) Feed specific animal {based on its id} Declaration public void SetSpecificAnimalFed(ushort animalID) Parameters Type Name Description ushort animalID SetSpecificAnimalHungry(ushort) Sets specific animal hungry {based on its id} Declaration public void SetSpecificAnimalHungry(ushort animalID) Parameters Type Name Description ushort animalID SetSpecificAnimalThirsty(ushort) Sets specific animal thirsty {based on its id} Declaration public void SetSpecificAnimalThirsty(ushort animalID) Parameters Type Name Description ushort animalID SpaceAmount() Returns how many free slots are left in the building Declaration public ushort SpaceAmount() Returns Type Description ushort"
  },
  "api/Managers.Managers._Dictionaries.AnimalSlot.html": {
    "href": "api/Managers.Managers._Dictionaries.AnimalSlot.html",
    "title": "Class AnimalSlot | Harvest Grove code documentation",
    "keywords": "Class AnimalSlot Animal slot holds data about the animal which \"lives\" in this slot Inheritance object AnimalSlot Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Managers.Managers._Dictionaries Assembly: cs.temp.dll.dll Syntax [Serializable] public class AnimalSlot Fields AnimalID Each animal {meaning gameobject acting as animal}, has its own id Declaration public int AnimalID Field Value Type Description int CanBeBred Declaration public bool CanBeBred Field Value Type Description bool CurrentStage Declaration public AnimalStagesEnum CurrentStage Field Value Type Description AnimalStagesEnum DaysOld Declaration public byte DaysOld Field Value Type Description byte HungryTimes How many times animal needed to be fed and wasn't Declaration public ushort HungryTimes Field Value Type Description ushort IsAnimalHungry Declaration public bool IsAnimalHungry Field Value Type Description bool IsAnimalThirsty Declaration public bool IsAnimalThirsty Field Value Type Description bool IsSlotFree Declaration public bool IsSlotFree Field Value Type Description bool Name Declaration public string Name Field Value Type Description string SecondaryAnimalType Declaration public SecondaryAnimalsEnum SecondaryAnimalType Field Value Type Description SecondaryAnimalsEnum WasBredBefore Declaration public bool WasBredBefore Field Value Type Description bool"
  },
  "api/Managers.Managers._Dictionaries.BeeDictionary.html": {
    "href": "api/Managers.Managers._Dictionaries.BeeDictionary.html",
    "title": "Class BeeDictionary | Harvest Grove code documentation",
    "keywords": "Class BeeDictionary Inheritance object BuildingDictionary AnimalHousingDictionary BeeDictionary Inherited Members AnimalHousingDictionary.AnimalType AnimalHousingDictionary.AnimalSlots AnimalHousingDictionary.HomePosition AnimalHousingDictionary.GivenItems AnimalHousingDictionary.AddItem(InventoryItemData, int) AnimalHousingDictionary.RemoveGivenItemAmount(InventoryItemData, int) AnimalHousingDictionary.AddGivenItemAmount(InventoryItemData, int) AnimalHousingDictionary.GivenItemAmount(InventoryItemData) AnimalHousingDictionary.HasFreeSlot() AnimalHousingDictionary.SpaceAmount() AnimalHousingDictionary.OccupiedSLots() AnimalHousingDictionary.SetAnimalsHungry() AnimalHousingDictionary.SetAnimalsThirsty() AnimalHousingDictionary.SetSpecificAnimalHungry(ushort) AnimalHousingDictionary.SetSpecificAnimalFed(ushort) AnimalHousingDictionary.SetSpecificAnimalThirsty(ushort) AnimalHousingDictionary.GiveSpecificAnimalWater(ushort) AnimalHousingDictionary.AddToSlot(AnimalStage, SecondaryAnimalsEnum, bool, string, AnimalsDatabase) AnimalHousingDictionary.GetOccupiedAnimalSlots() AnimalHousingDictionary.RemoveAnimal(int, ObjectPooling) AnimalHousingDictionary.HasAnimalInSlot(int) AnimalHousingDictionary.AnimalDied(int, ObjectPooling) AnimalHousingDictionary.AnimalAged(int) AnimalHousingDictionary.GetAnimalsEnum(int) AnimalHousingDictionary.InitilizeGivenItems(ItemDatabaseSO) BuildingDictionary.ID BuildingDictionary.Side object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Managers.Managers._Dictionaries Assembly: cs.temp.dll.dll Syntax public class BeeDictionary : AnimalHousingDictionary Constructors BeeDictionary(ushort, SideEnum, MainAnimalsEnum, Vector2, AnimalsDatabase) Declaration public BeeDictionary(ushort ID, SideEnum side, MainAnimalsEnum animalType, Vector2 pos, AnimalsDatabase animalsDatabase) Parameters Type Name Description ushort ID SideEnum side MainAnimalsEnum animalType Vector2 pos AnimalsDatabase animalsDatabase Fields HoneyStatus Declaration public CollectingHoneyStatusEnum HoneyStatus Field Value Type Description CollectingHoneyStatusEnum Methods IsAllBabies() Checks if the all animals inside the beehive are babies Declaration public bool IsAllBabies() Returns Type Description bool SetHoneyStatus(CollectingHoneyStatusEnum) Declaration public void SetHoneyStatus(CollectingHoneyStatusEnum status) Parameters Type Name Description CollectingHoneyStatusEnum status"
  },
  "api/Managers.Managers._Dictionaries.BuildingDictionary.html": {
    "href": "api/Managers.Managers._Dictionaries.BuildingDictionary.html",
    "title": "Class BuildingDictionary | Harvest Grove code documentation",
    "keywords": "Class BuildingDictionary This class holds data about a Building and its spawn position Inheritance object BuildingDictionary AnimalHousingDictionary Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Managers.Managers._Dictionaries Assembly: cs.temp.dll.dll Syntax [Serializable] public class BuildingDictionary Constructors BuildingDictionary(ushort, SideEnum) Declaration public BuildingDictionary(ushort ID, SideEnum side) Parameters Type Name Description ushort ID SideEnum side Fields ID Each Building has its own id Declaration public ushort ID Field Value Type Description ushort Side Declaration public SideEnum Side Field Value Type Description SideEnum"
  },
  "api/Managers.Managers._Dictionaries.CampfireDictionary.html": {
    "href": "api/Managers.Managers._Dictionaries.CampfireDictionary.html",
    "title": "Class CampfireDictionary | Harvest Grove code documentation",
    "keywords": "Class CampfireDictionary Inheritance object CampfireDictionary Namespace: Managers.Managers._Dictionaries Assembly: cs.temp.dll.dll Syntax public class CampfireDictionary : IComparable<CampfireDictionary> Fields FinishTime Declaration public TimeSpan FinishTime Field Value Type Description TimeSpan IsLightened Declaration public bool IsLightened Field Value Type Description bool OnFinishTimeChanged Declaration public static Action OnFinishTimeChanged Field Value Type Description Action Methods CompareTo(CampfireDictionary) Declaration public int CompareTo(CampfireDictionary other) Parameters Type Name Description CampfireDictionary other Returns Type Description int UpdateFinishTime(TimeSpan) Update the fire finish time Declaration public void UpdateFinishTime(TimeSpan time) Parameters Type Name Description TimeSpan time"
  },
  "api/Managers.Managers._Dictionaries.ConstructionDictionary.html": {
    "href": "api/Managers.Managers._Dictionaries.ConstructionDictionary.html",
    "title": "Class ConstructionDictionary | Harvest Grove code documentation",
    "keywords": "Class ConstructionDictionary This class holds data about a building and its spawn position Inheritance object ConstructionDictionary Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Managers.Managers._Dictionaries Assembly: cs.temp.dll.dll Syntax [Serializable] public class ConstructionDictionary Constructors ConstructionDictionary() Declaration public ConstructionDictionary() ConstructionDictionary(ushort, SideEnum, Vector2Int) Declaration public ConstructionDictionary(ushort ID, SideEnum side, Vector2Int bottomLeftTile) Parameters Type Name Description ushort ID SideEnum side Vector2Int bottomLeftTile Fields AddedMaterials The list of materials that have been added to the building Declaration public List<RequiredMaterials> AddedMaterials Field Value Type Description List<><RequiredMaterials> BottomLeftTilePosition Declaration public Vector2Int BottomLeftTilePosition Field Value Type Description Vector2Int BuildingID Each building has its own id Declaration public ushort BuildingID Field Value Type Description ushort Side Declaration public SideEnum Side Field Value Type Description SideEnum"
  },
  "api/Managers.Managers._Dictionaries.FeedType.html": {
    "href": "api/Managers.Managers._Dictionaries.FeedType.html",
    "title": "Enum FeedType | Harvest Grove code documentation",
    "keywords": "Enum FeedType This is just for food Trough type! Namespace: Managers.Managers._Dictionaries Assembly: cs.temp.dll.dll Syntax public enum FeedType Fields Name Description Chicken Herbivor None"
  },
  "api/Managers.Managers._Dictionaries.html": {
    "href": "api/Managers.Managers._Dictionaries.html",
    "title": "Namespace Managers.Managers._Dictionaries | Harvest Grove code documentation",
    "keywords": "Namespace Managers.Managers._Dictionaries Classes AnimalHousingDictionary This class holds data about an animal house AnimalSlot Animal slot holds data about the animal which \"lives\" in this slot BeeDictionary BuildingDictionary This class holds data about a Building and its spawn position CampfireDictionary ConstructionDictionary This class holds data about a building and its spawn position TroughDictionary This class holds data about a Trough Enums FeedType This is just for food Trough type! TroughType"
  },
  "api/Managers.Managers._Dictionaries.TroughDictionary.html": {
    "href": "api/Managers.Managers._Dictionaries.TroughDictionary.html",
    "title": "Class TroughDictionary | Harvest Grove code documentation",
    "keywords": "Class TroughDictionary This class holds data about a Trough Inheritance object TroughDictionary Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Managers.Managers._Dictionaries Assembly: cs.temp.dll.dll Syntax [Serializable] public class TroughDictionary Constructors TroughDictionary() Declaration public TroughDictionary() TroughDictionary(Vector2, TroughType, FeedType) Declaration public TroughDictionary(Vector2 leftDownTile, TroughType throughType, FeedType foodThroughType = FeedType.None) Parameters Type Name Description Vector2 leftDownTile TroughType throughType FeedType foodThroughType Fields AnimalsGoingAmount THe amount represents how many animals are going to eat from this trough Declaration public ushort AnimalsGoingAmount Field Value Type Description ushort FeedAmount How many animals can eat from it {meaning if it has amount of 2, 2 animals can eat from it} Declaration public ushort FeedAmount Field Value Type Description ushort FoodThroughType Declaration public FeedType FoodThroughType Field Value Type Description FeedType LeftDownTile Either left or down tile when the object is placed {for better management later} Declaration public Vector2 LeftDownTile Field Value Type Description Vector2 OnDecreaseFeed Declaration public static Func<Vector2, TroughType, bool> OnDecreaseFeed Field Value Type Description Func<, , ><Vector2, TroughType, bool> ThroughType Declaration public TroughType ThroughType Field Value Type Description TroughType Methods DecreaseFeed(ushort) Declaration public bool DecreaseFeed(ushort amount) Parameters Type Name Description ushort amount Returns Type Description bool True if the is not set empty; False if the Trough is set to empty IncreaseFeed(ushort) Declaration public void IncreaseFeed(ushort amount) Parameters Type Name Description ushort amount"
  },
  "api/Managers.Managers._Dictionaries.TroughType.html": {
    "href": "api/Managers.Managers._Dictionaries.TroughType.html",
    "title": "Enum TroughType | Harvest Grove code documentation",
    "keywords": "Enum TroughType Namespace: Managers.Managers._Dictionaries Assembly: cs.temp.dll.dll Syntax public enum TroughType Fields Name Description Food Water"
  },
  "api/Managers.Managers.AnimalHousingManager.html": {
    "href": "api/Managers.Managers.AnimalHousingManager.html",
    "title": "Class AnimalHousingManager | Harvest Grove code documentation",
    "keywords": "Class AnimalHousingManager Inheritance object AnimalHousingManager Implements ISavableWithPath Namespace: Managers.Managers Assembly: cs.temp.dll.dll Syntax public class AnimalHousingManager : ScriptableObject, ISavableWithPath Fields AnimalHousings Declaration public Dictionary<Vector2, AnimalHousingDictionary> AnimalHousings Field Value Type Description Dictionary<, ><Vector2, AnimalHousingDictionary> Beehives For faster access to the hives Declaration public Dictionary<Vector2, BeeDictionary> Beehives Field Value Type Description Dictionary<, ><Vector2, BeeDictionary> Properties LastAvailableAnimalID Declaration public int LastAvailableAnimalID { get; set; } Property Value Type Description int Priority Declaration public int Priority { get; } Property Value Type Description int Methods AddAnimalBuilding(Vector2, ushort, MainAnimalsEnum, SideEnum) Adds the new animal building Declaration public void AddAnimalBuilding(Vector2 position, ushort ID, MainAnimalsEnum animalType, SideEnum side = SideEnum.Down) Parameters Type Name Description Vector2 position ushort ID MainAnimalsEnum animalType SideEnum side AnimalHousePosition(int) Returns home position based on animal's id Declaration public Vector2 AnimalHousePosition(int animalID) Parameters Type Name Description int animalID Returns Type Description Vector2 CanBuyAnimal(MainAnimalsEnum) Checks if the animalType can be bought Declaration public bool CanBuyAnimal(MainAnimalsEnum animal) Parameters Type Name Description MainAnimalsEnum animal The animalType to check Returns Type Description bool ClearDictionary() Declaration public void ClearDictionary() FindHomeForAnimal(AnimalStage, MainAnimalsEnum, SecondaryAnimalsEnum, string, bool) Finds available spot and put the animal in there Declaration public GameObject FindHomeForAnimal(AnimalStage stage, MainAnimalsEnum animalType, SecondaryAnimalsEnum secondaryAnimalType, string name, bool spawnAnimal = false) Parameters Type Name Description AnimalStage stage MainAnimalsEnum animalType SecondaryAnimalsEnum secondaryAnimalType string name bool spawnAnimal Flag indicating whether to spawn the animal Returns Type Description GameObject Gameobject of the animal which was spawned {null if no animal was spawned} GetAnimalHousing(int) Declaration public (AnimalSlot, AnimalHousingDictionary) GetAnimalHousing(int ID) Parameters Type Name Description int ID Returns Type Description (AnimalSlot, AnimalHousingDictionary) GetAnimalHousing(Vector2) Gets the animalType housing at the specified position Declaration public AnimalHousingDictionary GetAnimalHousing(Vector2 position) Parameters Type Name Description Vector2 position Returns Type Description AnimalHousingDictionary GetAnimalHousingSide(Vector2) Get the side of the animalType housing based on its position Declaration public SideEnum GetAnimalHousingSide(Vector2 position) Parameters Type Name Description Vector2 position Returns Type Description SideEnum GetAnimalSide(Vector2) Gets the building side Declaration public SideEnum GetAnimalSide(Vector2 position) Parameters Type Name Description Vector2 position Returns Type Description SideEnum GetBeehive(Vector2) Gets the be hive at the specified position Declaration public BeeDictionary GetBeehive(Vector2 position) Parameters Type Name Description Vector2 position Returns Type Description BeeDictionary Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask IsAnimalHungry(int) Returns if the animal is hungry {based on its id} Declaration public bool IsAnimalHungry(int ID) Parameters Type Name Description int ID Returns Type Description bool IsAnimalThirsty(int) Returns if the animal is thirsty {based on its id} Declaration public bool IsAnimalThirsty(int ID) Parameters Type Name Description int ID Returns Type Description bool Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask SavingPath(IslandsDictionaryNames) Declaration public string SavingPath(IslandsDictionaryNames currentIsland) Parameters Type Name Description IslandsDictionaryNames currentIsland Returns Type Description string SpaceAmount(MainAnimalsEnum) Checks how many animals can be bought in all same-type animalType housing Declaration public ushort SpaceAmount(MainAnimalsEnum animal) Parameters Type Name Description MainAnimalsEnum animal The animalType to check Returns Type Description ushort Implements ISavableWithPath"
  },
  "api/Managers.Managers.BuildingsManager.html": {
    "href": "api/Managers.Managers.BuildingsManager.html",
    "title": "Class BuildingsManager | Harvest Grove code documentation",
    "keywords": "Class BuildingsManager Inheritance object BuildingsManager Implements ITaskSavable Namespace: Managers.Managers Assembly: cs.temp.dll.dll Syntax public class BuildingsManager : ScriptableObject, ITaskSavable Fields Buildings Declaration public Dictionary<Vector2, BuildingDictionary> Buildings Field Value Type Description Dictionary<, ><Vector2, BuildingDictionary> Properties Priority Declaration public int Priority { get; } Property Value Type Description int SavingPath Declaration public string SavingPath { get; } Property Value Type Description string Methods AddBuilding(Vector2, ushort, SideEnum) Adds a new Building to the list of buildings Declaration public void AddBuilding(Vector2 position, ushort ID, SideEnum side = SideEnum.Down) Parameters Type Name Description Vector2 position The Building's position ushort ID id of the Building SideEnum side ClearDictionary() Declaration public void ClearDictionary() GetBuildingSide(Vector2) Get the side of the building based on its position Declaration public SideEnum GetBuildingSide(Vector2 position) Parameters Type Name Description Vector2 position Returns Type Description SideEnum Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Implements ITaskSavable"
  },
  "api/Managers.Managers.CampfireManagerSO.html": {
    "href": "api/Managers.Managers.CampfireManagerSO.html",
    "title": "Class CampfireManagerSO | Harvest Grove code documentation",
    "keywords": "Class CampfireManagerSO Inheritance object CampfireManagerSO Implements ITaskSavable Namespace: Managers.Managers Assembly: cs.temp.dll.dll Syntax public class CampfireManagerSO : ScriptableObject, ITaskSavable Fields Campfires Declaration public Dictionary<Vector2, CampfireDictionary> Campfires Field Value Type Description Dictionary<, ><Vector2, CampfireDictionary> Properties Priority Declaration public int Priority { get; } Property Value Type Description int Methods AddCampfire(Vector2) Declaration public void AddCampfire(Vector2 position) Parameters Type Name Description Vector2 position ClearDictionary() Declaration public void ClearDictionary() FireFinishTime(Vector2) Declaration public TimeSpan FireFinishTime(Vector2 position) Parameters Type Name Description Vector2 position Returns Type Description TimeSpan Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask RemoveCampfire(Vector2) Declaration public void RemoveCampfire(Vector2 position) Parameters Type Name Description Vector2 position Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Implements ITaskSavable"
  },
  "api/Managers.Managers.ConstructionManager.html": {
    "href": "api/Managers.Managers.ConstructionManager.html",
    "title": "Class ConstructionManager | Harvest Grove code documentation",
    "keywords": "Class ConstructionManager Inheritance object ConstructionManager Implements ISavableWithPath Namespace: Managers.Managers Assembly: cs.temp.dll.dll Syntax public class ConstructionManager : ScriptableObject, ISavableWithPath Fields Constructions Declaration public Dictionary<Vector2, ConstructionDictionary> Constructions Field Value Type Description Dictionary<, ><Vector2, ConstructionDictionary> Properties Priority Declaration public int Priority { get; } Property Value Type Description int Methods AddConstruction(Vector2, ushort, Vector2Int, SideEnum) Adds a new building to the list of constructions Declaration public void AddConstruction(Vector2 position, ushort ID, Vector2Int bottomLeft, SideEnum side = SideEnum.Down) Parameters Type Name Description Vector2 position The position of building ushort ID id of the building Vector2Int bottomLeft SideEnum side CanBeBuild(Vector2) Checks if the building can be completed Declaration public bool CanBeBuild(Vector2 position) Parameters Type Name Description Vector2 position The position of the building to check Returns Type Description bool Returns true if the building can be completed, otherwise false ClearDictionary() Declaration public void ClearDictionary() GetAddedMaterial(Vector2) Retrieves the list of required materials for a building at the specified position Declaration public List<RequiredMaterials> GetAddedMaterial(Vector2 position) Parameters Type Name Description Vector2 position The position of the building Returns Type Description List<><RequiredMaterials> The list of required materials GetConstructionSide(Vector2) Get the side of the construction based on its position Declaration public SideEnum GetConstructionSide(Vector2 position) Parameters Type Name Description Vector2 position Returns Type Description SideEnum GetMaterialAmount(Vector2, InventoryItemData) Gets the amount of a specific material in a building at the given position If the material is not present in the building, it adds the material with an amount of 0 Declaration public byte GetMaterialAmount(Vector2 position, InventoryItemData material) Parameters Type Name Description Vector2 position The position of the building InventoryItemData material The material for which the amount should be retrieved Returns Type Description byte The amount of the specified material in the building at the given position GetMaterialAmount(Vector2, MaterialType) Declaration public byte GetMaterialAmount(Vector2 position, MaterialType materialType) Parameters Type Name Description Vector2 position MaterialType materialType Returns Type Description byte Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask RemoveConstruction(Vector2) Removes a building from the list based on its position Declaration public void RemoveConstruction(Vector2 position) Parameters Type Name Description Vector2 position The position of the building to be removed Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask SavingPath(IslandsDictionaryNames) Declaration public string SavingPath(IslandsDictionaryNames currentIsland) Parameters Type Name Description IslandsDictionaryNames currentIsland Returns Type Description string UpdateConstructionAddedMaterials(Vector2, InventoryItemData, byte) Updates the added materials for a building at a specific position Declaration public void UpdateConstructionAddedMaterials(Vector2 position, InventoryItemData givenMaterial, byte amount) Parameters Type Name Description Vector2 position The position of the building to update InventoryItemData givenMaterial The material to be added byte amount The amount of the material to be added Implements ISavableWithPath"
  },
  "api/Managers.Managers.html": {
    "href": "api/Managers.Managers.html",
    "title": "Namespace Managers.Managers | Harvest Grove code documentation",
    "keywords": "Namespace Managers.Managers Classes AnimalHousingManager BuildingsManager CampfireManagerSO ConstructionManager ScatteringManager TroughManager"
  },
  "api/Managers.Managers.ScatteringManager.html": {
    "href": "api/Managers.Managers.ScatteringManager.html",
    "title": "Class ScatteringManager | Harvest Grove code documentation",
    "keywords": "Class ScatteringManager Inheritance object ScatteringManager Implements IFeedSource ISavableWithPath Namespace: Managers.Managers Assembly: cs.temp.dll.dll Syntax public class ScatteringManager : ScriptableObject, IFeedSource, ISavableWithPath Fields OnScatteringDecreased Event raised when the scattering is decreased Declaration public static Action<Vector2, bool> OnScatteringDecreased Field Value Type Description Action<, ><Vector2, bool> Scattered0PercentHerbivorFood Declaration public const int Scattered0PercentHerbivorFood = 1063 Field Value Type Description int Scattered100PercentHerbivorFood Declaration public const int Scattered100PercentHerbivorFood = 1067 Field Value Type Description int Scattered25PercentHerbivorFood Declaration public const int Scattered25PercentHerbivorFood = 1064 Field Value Type Description int Scattered50PercentHerbivorFood Declaration public const int Scattered50PercentHerbivorFood = 1065 Field Value Type Description int Scattered75PercentHerbivorFood Declaration public const int Scattered75PercentHerbivorFood = 1066 Field Value Type Description int ScatteredDownChickenFood Declaration public const int ScatteredDownChickenFood = 1071 Field Value Type Description int ScatteredLeftChickenFood Declaration public const int ScatteredLeftChickenFood = 1068 Field Value Type Description int ScatteredRightChickenFood Declaration public const int ScatteredRightChickenFood = 1069 Field Value Type Description int ScatteredTopChickenFood Declaration public const int ScatteredTopChickenFood = 1070 Field Value Type Description int Scattering Declaration public Dictionary<Vector2, (ushort, FeedType, byte)> Scattering Field Value Type Description Dictionary<, ><Vector2, (ushort, FeedType, byte)> Properties Priority Declaration public int Priority { get; } Property Value Type Description int Methods AddScattering(Vector2, ushort, FeedType) Declaration public void AddScattering(Vector2 position, ushort feedAmount, FeedType feedType) Parameters Type Name Description Vector2 position ushort feedAmount FeedType feedType ClearDictionary() Declaration public void ClearDictionary() DecreaseFeed(Vector2, ushort, FeedType) Decreases the scattering value at the specified position by the specified feed amount and feed type Declaration public void DecreaseFeed(Vector2 position, ushort feedAmount, FeedType feedType) Parameters Type Name Description Vector2 position The position to decrease the scattering value at ushort feedAmount The amount by which to decrease the scattering value FeedType feedType The type of feed to decrease the scattering value for DecrementAnimalsGoingAmount(Vector2) Declaration public void DecrementAnimalsGoingAmount(Vector2 position) Parameters Type Name Description Vector2 position GetScatteringPositions(FeedType) Returns a list of Vector2 positions where the scattering is available Declaration public List<Vector2> GetScatteringPositions(FeedType feedType) Parameters Type Name Description FeedType feedType Returns Type Description List<><Vector2> IncrementAnimalsGoingAmount(Vector2) Declaration public void IncrementAnimalsGoingAmount(Vector2 position) Parameters Type Name Description Vector2 position Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask SavingPath(IslandsDictionaryNames) Declaration public string SavingPath(IslandsDictionaryNames currentIsland) Parameters Type Name Description IslandsDictionaryNames currentIsland Returns Type Description string Implements IFeedSource ISavableWithPath"
  },
  "api/Managers.Managers.TroughManager.html": {
    "href": "api/Managers.Managers.TroughManager.html",
    "title": "Class TroughManager | Harvest Grove code documentation",
    "keywords": "Class TroughManager Inheritance object TroughManager Implements IFeedSource ISavableWithPath Namespace: Managers.Managers Assembly: cs.temp.dll.dll Syntax public class TroughManager : ScriptableObject, IFeedSource, ISavableWithPath Fields Troughs Declaration public Dictionary<Vector2, TroughDictionary> Troughs Field Value Type Description Dictionary<, ><Vector2, TroughDictionary> Properties Priority Declaration public int Priority { get; } Property Value Type Description int Methods AddTrough(Vector2, TroughType, FeedType) Declaration public void AddTrough(Vector2 position, TroughType throughType, FeedType foodThroughType) Parameters Type Name Description Vector2 position The position of the Trough {EITHER LEFT OR DOWN TILE!!!!} TroughType throughType FeedType foodThroughType ClearDictionary() Declaration public void ClearDictionary() DecreaseFeed(Vector2, ushort, FeedType) Declaration public void DecreaseFeed(Vector2 position, ushort feedAmount, FeedType feedType) Parameters Type Name Description Vector2 position ushort feedAmount FeedType feedType DecrementAnimalsGoingAmount(Vector2) Declaration public void DecrementAnimalsGoingAmount(Vector2 position) Parameters Type Name Description Vector2 position GetFeedAmount(Vector2) Get the feed amount Declaration public ushort GetFeedAmount(Vector2 position) Parameters Type Name Description Vector2 position Returns Type Description ushort GetTrough(Vector2) Declaration public TroughDictionary GetTrough(Vector2 position) Parameters Type Name Description Vector2 position Returns Type Description TroughDictionary GetTroughsPosition(FeedType, TroughType) Returns a list with all the available troughs based on which type I'm looking for Declaration public List<Vector2> GetTroughsPosition(FeedType throughFoodType, TroughType throughType) Parameters Type Name Description FeedType throughFoodType TroughType throughType Returns Type Description List<><Vector2> IncreaseFeedAmount(Vector2, ushort) Declaration public void IncreaseFeedAmount(Vector2 position, ushort feedAmount) Parameters Type Name Description Vector2 position ushort feedAmount IncrementAnimalsGoingAmount(Vector2) Declaration public void IncrementAnimalsGoingAmount(Vector2 position) Parameters Type Name Description Vector2 position Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask RemoveTrough(Vector2) Declaration public void RemoveTrough(Vector2 position) Parameters Type Name Description Vector2 position Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask SavingPath(IslandsDictionaryNames) Declaration public string SavingPath(IslandsDictionaryNames currentIsland) Parameters Type Name Description IslandsDictionaryNames currentIsland Returns Type Description string TroughUpdateInfo(Vector2, TroughType, FeedType) THis method is used only when changing empty Trough to specific type {meaning it's being filled} Declaration public void TroughUpdateInfo(Vector2 position, TroughType throughType, FeedType foodThroughType = null) Parameters Type Name Description Vector2 position TroughType throughType FeedType foodThroughType Implements IFeedSource ISavableWithPath"
  },
  "api/Managers.MapBuildingsDataSO.html": {
    "href": "api/Managers.MapBuildingsDataSO.html",
    "title": "Class MapBuildingsDataSO | Harvest Grove code documentation",
    "keywords": "Class MapBuildingsDataSO This ScriptableObject holds data about buildings and constructions in the game Inheritance object MapBuildingsDataSO Implements IResetableSO Namespace: Managers Assembly: cs.temp.dll.dll Syntax public class MapBuildingsDataSO : ScriptableObject, IResetableSO Fields AnimalHousings Declaration public AnimalHousingManager AnimalHousings Field Value Type Description AnimalHousingManager Buildings Declaration public BuildingsManager Buildings Field Value Type Description BuildingsManager Campfires Declaration public CampfireManagerSO Campfires Field Value Type Description CampfireManagerSO Constructions Declaration public ConstructionManager Constructions Field Value Type Description ConstructionManager Scattering Declaration public ScatteringManager Scattering Field Value Type Description ScatteringManager Troughs Declaration public TroughManager Troughs Field Value Type Description TroughManager Methods Construct(IGameData) Declaration public void Construct(IGameData gameData) Parameters Type Name Description IGameData gameData LoadBuildables() Declaration public UniTask LoadBuildables() Returns Type Description UniTask ResetSO() Declaration public void ResetSO() SaveBuildables() Declaration public UniTask SaveBuildables() Returns Type Description UniTask Implements IResetableSO"
  },
  "api/Managers.ScreenshotManager.html": {
    "href": "api/Managers.ScreenshotManager.html",
    "title": "Class ScreenshotManager | Harvest Grove code documentation",
    "keywords": "Class ScreenshotManager Inheritance object ScreenshotManager Namespace: Managers Assembly: cs.temp.dll.dll Syntax public class ScreenshotManager : MonoBehaviour Methods Construct(InputsMap) Declaration public void Construct(InputsMap inputsMap) Parameters Type Name Description InputsMap inputsMap"
  },
  "api/Managers.SideEnum.html": {
    "href": "api/Managers.SideEnum.html",
    "title": "Enum SideEnum | Harvest Grove code documentation",
    "keywords": "Enum SideEnum Namespace: Managers Assembly: cs.temp.dll.dll Syntax public enum SideEnum Fields Name Description Down Left Right Up"
  },
  "api/Managers.Traveling.html": {
    "href": "api/Managers.Traveling.html",
    "title": "Namespace Managers.Traveling | Harvest Grove code documentation",
    "keywords": "Namespace Managers.Traveling Classes IslandDistance IslandDistanceMap IslandSettings TravelingButton TravelingUI Enums SceneEnum"
  },
  "api/Managers.Traveling.IslandDistance.html": {
    "href": "api/Managers.Traveling.IslandDistance.html",
    "title": "Class IslandDistance | Harvest Grove code documentation",
    "keywords": "Class IslandDistance Inheritance object IslandDistance Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Managers.Traveling Assembly: cs.temp.dll.dll Syntax [Serializable] public class IslandDistance Fields DistanceKm Declaration public float DistanceKm Field Value Type Description float From Declaration public SceneEnum From Field Value Type Description SceneEnum To Declaration public SceneEnum To Field Value Type Description SceneEnum"
  },
  "api/Managers.Traveling.IslandDistanceMap.html": {
    "href": "api/Managers.Traveling.IslandDistanceMap.html",
    "title": "Class IslandDistanceMap | Harvest Grove code documentation",
    "keywords": "Class IslandDistanceMap Inheritance object IslandDistanceMap Namespace: Managers.Traveling Assembly: cs.temp.dll.dll Syntax public class IslandDistanceMap : ScriptableObject Fields distances Declaration public List<IslandDistance> distances Field Value Type Description List<><IslandDistance> Methods GetDistance(SceneEnum, SceneEnum) Returns the distance in kilometers between two scenes (islands). If the scenes are the same, returns 0. If no distance is defined, returns -1 and logs a warning. Declaration public float GetDistance(SceneEnum from, SceneEnum to) Parameters Type Name Description SceneEnum from The starting scene. SceneEnum to The destination scene. Returns Type Description float Distance in kilometers, or -1 if not found. GetTravelCost(SceneEnum, SceneEnum) Calculates the action cost for traveling between two scenes. Returns null if no route is defined. Declaration public ActionCost? GetTravelCost(SceneEnum from, SceneEnum to) Parameters Type Name Description SceneEnum from SceneEnum to Returns Type Description ActionCost? GetTravelTimeHours(SceneEnum, SceneEnum) Calculates the travel time in hours between two scenes. Returns -1 if no route is defined. Declaration public float GetTravelTimeHours(SceneEnum from, SceneEnum to) Parameters Type Name Description SceneEnum from SceneEnum to Returns Type Description float"
  },
  "api/Managers.Traveling.IslandSettings.html": {
    "href": "api/Managers.Traveling.IslandSettings.html",
    "title": "Class IslandSettings | Harvest Grove code documentation",
    "keywords": "Class IslandSettings Inheritance object IslandSettings Namespace: Managers.Traveling Assembly: cs.temp.dll.dll Syntax public class IslandSettings : ScriptableObject Fields IslandName Declaration public LocalizedString IslandName Field Value Type Description LocalizedString SceneName Declaration public SceneEnum SceneName Field Value Type Description SceneEnum"
  },
  "api/Managers.Traveling.SceneEnum.html": {
    "href": "api/Managers.Traveling.SceneEnum.html",
    "title": "Enum SceneEnum | Harvest Grove code documentation",
    "keywords": "Enum SceneEnum Namespace: Managers.Traveling Assembly: cs.temp.dll.dll Syntax public enum SceneEnum Fields Name Description Cave Forest Homeland MainMenu"
  },
  "api/Managers.Traveling.TravelingButton.html": {
    "href": "api/Managers.Traveling.TravelingButton.html",
    "title": "Class TravelingButton | Harvest Grove code documentation",
    "keywords": "Class TravelingButton Inheritance object TravelingButton Namespace: Managers.Traveling Assembly: cs.temp.dll.dll Syntax public class TravelingButton : MonoBehaviour Methods Init(IslandDistanceMap, SceneEnum) Declaration public void Init(IslandDistanceMap islandDistanceMap, SceneEnum currentScene) Parameters Type Name Description IslandDistanceMap islandDistanceMap SceneEnum currentScene SetButtonState(bool, SceneEnum) Declaration public void SetButtonState(bool state, SceneEnum currentScene) Parameters Type Name Description bool state SceneEnum currentScene"
  },
  "api/Managers.Traveling.TravelingUI.html": {
    "href": "api/Managers.Traveling.TravelingUI.html",
    "title": "Class TravelingUI | Harvest Grove code documentation",
    "keywords": "Class TravelingUI Inheritance object TravelingUI Namespace: Managers.Traveling Assembly: cs.temp.dll.dll Syntax public class TravelingUI : MonoBehaviour Fields OnEnableTravelingUI Declaration public static Action OnEnableTravelingUI Field Value Type Description Action Methods CloseUI() Declaration public void CloseUI() Construct(ITileMapService, IManagerData, InputsMap, IPlayerData, IGameData) Declaration public void Construct(ITileMapService tileMapService, IManagerData managerData, InputsMap inputsMap, IPlayerData playerdata, IGameData gameData) Parameters Type Name Description ITileMapService tileMapService IManagerData managerData InputsMap inputsMap IPlayerData playerdata IGameData gameData TravelTo(IslandSettings) Declaration public void TravelTo(IslandSettings islandInfo) Parameters Type Name Description IslandSettings islandInfo"
  },
  "api/Packages.FlexibleColorPicker.Scripts.FCP_Persistence.html": {
    "href": "api/Packages.FlexibleColorPicker.Scripts.FCP_Persistence.html",
    "title": "Class FCP_Persistence | Harvest Grove code documentation",
    "keywords": "Class FCP_Persistence Handles persistence of FCP colors across scenes or gaming sessions Inheritance object FCP_Persistence Namespace: Packages.FlexibleColorPicker.Scripts Assembly: cs.temp.dll.dll Syntax public class FCP_Persistence : MonoBehaviour Fields saveName Declaration public string saveName Field Value Type Description string saveStrategy Declaration public FCP_Persistence.SaveStrategy saveStrategy Field Value Type Description FCP_Persistence.SaveStrategy Methods LoadColor(out Color) Declaration public bool LoadColor(out Color c) Parameters Type Name Description Color c Returns Type Description bool SaveColor(Color) Declaration public void SaveColor(Color c) Parameters Type Name Description Color c"
  },
  "api/Packages.FlexibleColorPicker.Scripts.FCP_Persistence.SaveStrategy.html": {
    "href": "api/Packages.FlexibleColorPicker.Scripts.FCP_Persistence.SaveStrategy.html",
    "title": "Enum FCP_Persistence.SaveStrategy | Harvest Grove code documentation",
    "keywords": "Enum FCP_Persistence.SaveStrategy Namespace: Packages.FlexibleColorPicker.Scripts Assembly: cs.temp.dll.dll Syntax public enum FCP_Persistence.SaveStrategy Fields Name Description File PlayerPrefs SessionOnly"
  },
  "api/Packages.FlexibleColorPicker.Scripts.FCP_SpriteMeshEditor.html": {
    "href": "api/Packages.FlexibleColorPicker.Scripts.FCP_SpriteMeshEditor.html",
    "title": "Class FCP_SpriteMeshEditor | Harvest Grove code documentation",
    "keywords": "Class FCP_SpriteMeshEditor Dynamically creates a mesh for a sprite so it can better display a gradient. The generated mesh is a simple square mesh with diagonals or center points to triangulate. Inheritance object FCP_SpriteMeshEditor Namespace: Packages.FlexibleColorPicker.Scripts Assembly: cs.temp.dll.dll Syntax public class FCP_SpriteMeshEditor : MonoBehaviour Fields meshType Declaration public FCP_SpriteMeshEditor.MeshType meshType Field Value Type Description FCP_SpriteMeshEditor.MeshType sprite Declaration public Sprite sprite Field Value Type Description Sprite x Declaration public int x Field Value Type Description int y Declaration public int y Field Value Type Description int"
  },
  "api/Packages.FlexibleColorPicker.Scripts.FCP_SpriteMeshEditor.MeshType.html": {
    "href": "api/Packages.FlexibleColorPicker.Scripts.FCP_SpriteMeshEditor.MeshType.html",
    "title": "Enum FCP_SpriteMeshEditor.MeshType | Harvest Grove code documentation",
    "keywords": "Enum FCP_SpriteMeshEditor.MeshType Namespace: Packages.FlexibleColorPicker.Scripts Assembly: cs.temp.dll.dll Syntax public enum FCP_SpriteMeshEditor.MeshType Fields Name Description backward CenterPoint forward"
  },
  "api/Packages.FlexibleColorPicker.Scripts.FlexibleColorPicker.AdvancedSettings.html": {
    "href": "api/Packages.FlexibleColorPicker.Scripts.FlexibleColorPicker.AdvancedSettings.html",
    "title": "Class FlexibleColorPicker.AdvancedSettings | Harvest Grove code documentation",
    "keywords": "Class FlexibleColorPicker.AdvancedSettings Inheritance object FlexibleColorPicker.AdvancedSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Packages.FlexibleColorPicker.Scripts Assembly: cs.temp.dll.dll Syntax public class FlexibleColorPicker.AdvancedSettings Fields a Declaration public FlexibleColorPicker.AdvancedSettings.PSettings a Field Value Type Description FlexibleColorPicker.AdvancedSettings.PSettings b Declaration public FlexibleColorPicker.AdvancedSettings.PSettings b Field Value Type Description FlexibleColorPicker.AdvancedSettings.PSettings g Declaration public FlexibleColorPicker.AdvancedSettings.PSettings g Field Value Type Description FlexibleColorPicker.AdvancedSettings.PSettings h Declaration public FlexibleColorPicker.AdvancedSettings.PSettings h Field Value Type Description FlexibleColorPicker.AdvancedSettings.PSettings mainStatic Declaration public bool mainStatic Field Value Type Description bool r Declaration public FlexibleColorPicker.AdvancedSettings.PSettings r Field Value Type Description FlexibleColorPicker.AdvancedSettings.PSettings s Declaration public FlexibleColorPicker.AdvancedSettings.PSettings s Field Value Type Description FlexibleColorPicker.AdvancedSettings.PSettings v Declaration public FlexibleColorPicker.AdvancedSettings.PSettings v Field Value Type Description FlexibleColorPicker.AdvancedSettings.PSettings Methods Get(int) Get PSettings for value associated with the given picker index. Returns default PSettings if none exists. Declaration public FlexibleColorPicker.AdvancedSettings.PSettings Get(int i) Parameters Type Name Description int i Returns Type Description FlexibleColorPicker.AdvancedSettings.PSettings"
  },
  "api/Packages.FlexibleColorPicker.Scripts.FlexibleColorPicker.AdvancedSettings.PSettings.html": {
    "href": "api/Packages.FlexibleColorPicker.Scripts.FlexibleColorPicker.AdvancedSettings.PSettings.html",
    "title": "Class FlexibleColorPicker.AdvancedSettings.PSettings | Harvest Grove code documentation",
    "keywords": "Class FlexibleColorPicker.AdvancedSettings.PSettings Inheritance object FlexibleColorPicker.AdvancedSettings.PSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Packages.FlexibleColorPicker.Scripts Assembly: cs.temp.dll.dll Syntax public class FlexibleColorPicker.AdvancedSettings.PSettings Fields overrideStatic Declaration public bool overrideStatic Field Value Type Description bool range Declaration public Vector2 range Field Value Type Description Vector2"
  },
  "api/Packages.FlexibleColorPicker.Scripts.FlexibleColorPicker.ColorUpdateEvent.html": {
    "href": "api/Packages.FlexibleColorPicker.Scripts.FlexibleColorPicker.ColorUpdateEvent.html",
    "title": "Class FlexibleColorPicker.ColorUpdateEvent | Harvest Grove code documentation",
    "keywords": "Class FlexibleColorPicker.ColorUpdateEvent Inheritance object FlexibleColorPicker.ColorUpdateEvent Namespace: Packages.FlexibleColorPicker.Scripts Assembly: cs.temp.dll.dll Syntax public class FlexibleColorPicker.ColorUpdateEvent : UnityEvent<Color>"
  },
  "api/Packages.FlexibleColorPicker.Scripts.FlexibleColorPicker.html": {
    "href": "api/Packages.FlexibleColorPicker.Scripts.FlexibleColorPicker.html",
    "title": "Class FlexibleColorPicker | Harvest Grove code documentation",
    "keywords": "Class FlexibleColorPicker Main controller script for the flexible color picker system Inheritance object FlexibleColorPicker Namespace: Packages.FlexibleColorPicker.Scripts Assembly: cs.temp.dll.dll Syntax public class FlexibleColorPicker : MonoBehaviour Fields advancedSettings Declaration public FlexibleColorPicker.AdvancedSettings advancedSettings Field Value Type Description FlexibleColorPicker.AdvancedSettings multiInstance Declaration public bool multiInstance Field Value Type Description bool onColorChange Declaration public FlexibleColorPicker.ColorUpdateEvent onColorChange Field Value Type Description FlexibleColorPicker.ColorUpdateEvent staticMode Declaration public bool staticMode Field Value Type Description bool Properties color Declaration public Color color { get; set; } Property Value Type Description Color Methods ChangeMode(MainPickingMode) Change mode of the main, 2D picking image Declaration public void ChangeMode(FlexibleColorPicker.MainPickingMode mode) Parameters Type Name Description FlexibleColorPicker.MainPickingMode mode ChangeMode(int) Change mode of the main, 2D picking image Declaration public void ChangeMode(int newMode) Parameters Type Name Description int newMode FinishTypeHex(string) Strongly sanitize hex color input and apply it. (appends zeroes to fit proper length in the text box). Declaration public void FinishTypeHex(string input) Parameters Type Name Description string input GetColor() Equivalent to fcp.color Returns starting color if FCP is not initialized. Declaration public Color GetColor() Returns Type Description Color GetColorFullAlpha() Returns current fcp color, but with its alpha channel value set to max. Declaration public Color GetColorFullAlpha() Returns Type Description Color GetSanitizedHex(string, bool) Santiive a given string so that it encodes a valid hex color string Declaration public static string GetSanitizedHex(string input, bool full) Parameters Type Name Description string input Input string bool full Insert zeroes to match #RRGGBB format Returns Type Description string HSVToRGB(float, float, float) Get color from hue, saturation, value format Declaration public static Color HSVToRGB(float h, float s, float v) Parameters Type Name Description float h hue value, ranging from 0 to 6; red to red float s saturation, 0 to 1; gray to colored float v value, 0 to 1; black to white Returns Type Description Color HSVToRGB(Vector3) Get color from hue, saturation, value format Declaration public static Color HSVToRGB(Vector3 hsv) Parameters Type Name Description Vector3 hsv Vector containing h, s and v values. Returns Type Description Color ParseHex(string, Color) tries to parse given string input as hexadecimal color e.g. \"#FF00FF\" or \"223344\" returns default color if string failed to parse. Declaration public static Color ParseHex(string input, Color defaultColor) Parameters Type Name Description string input Color defaultColor Returns Type Description Color ParseHex(string) tries to parse given string input as hexadecimal color e.g. \"#FF00FF\" or \"223344\" returns black if string failed to parse. Declaration public static Color ParseHex(string input) Parameters Type Name Description string input Returns Type Description Color PointerUpdate(BaseEventData) Update color based on the pointer position in the currently focused picker. Declaration public void PointerUpdate(BaseEventData e) Parameters Type Name Description BaseEventData e Pointer event RGBToHSV(Color) Get hue, saturation and value of a color. Complementary to HSVToRGB Declaration public static Vector3 RGBToHSV(Color color) Parameters Type Name Description Color color Returns Type Description Vector3 RGBToHSV(float, float, float) Get hue, saturation and value of a color. Complementary to HSVToRGB Declaration public static Vector3 RGBToHSV(float r, float g, float b) Parameters Type Name Description float r float g float b Returns Type Description Vector3 SetColor(Color) Equivalent to fcp.color Propogates color change to picker images, hex input and other components. Modifies starting color if FCP is not initialized. Declaration public void SetColor(Color color) Parameters Type Name Description Color color SetColorNoAlpha(Color) Changes fcp color while maintaining its current alpha value. Declaration public void SetColorNoAlpha(Color color) Parameters Type Name Description Color color SetPointerFocus(int) Change picker that is being focused (and edited) using the pointer. Declaration public void SetPointerFocus(int i) Parameters Type Name Description int i Index of the picker image. ShiftColor(int, float) Shift the FCP color by a small amount Declaration public void ShiftColor(int type, float delta) Parameters Type Name Description int type Select component of the color to change, 1: red, 2: green, 3:blue, 4:hue, 5:saturation, 6:value, 7:alpha float delta How much should the color be changed, note this value is normalized and the result is clamped, including for hue. ShiftHue(float) Shift hue of the FCP color in a looping fashion Declaration public void ShiftHue(float delta) Parameters Type Name Description float delta TypeHex(string) Softly sanitize hex color input and apply it Declaration public void TypeHex(string input) Parameters Type Name Description string input"
  },
  "api/Packages.FlexibleColorPicker.Scripts.FlexibleColorPicker.MainPickingMode.html": {
    "href": "api/Packages.FlexibleColorPicker.Scripts.FlexibleColorPicker.MainPickingMode.html",
    "title": "Enum FlexibleColorPicker.MainPickingMode | Harvest Grove code documentation",
    "keywords": "Enum FlexibleColorPicker.MainPickingMode Namespace: Packages.FlexibleColorPicker.Scripts Assembly: cs.temp.dll.dll Syntax public enum FlexibleColorPicker.MainPickingMode Fields Name Description HS HV SH SV VH VS"
  },
  "api/Packages.FlexibleColorPicker.Scripts.html": {
    "href": "api/Packages.FlexibleColorPicker.Scripts.html",
    "title": "Namespace Packages.FlexibleColorPicker.Scripts | Harvest Grove code documentation",
    "keywords": "Namespace Packages.FlexibleColorPicker.Scripts Classes FCP_Persistence Handles persistence of FCP colors across scenes or gaming sessions FCP_SpriteMeshEditor Dynamically creates a mesh for a sprite so it can better display a gradient. The generated mesh is a simple square mesh with diagonals or center points to triangulate. FlexibleColorPicker Main controller script for the flexible color picker system FlexibleColorPicker.AdvancedSettings FlexibleColorPicker.AdvancedSettings.PSettings FlexibleColorPicker.ColorUpdateEvent Enums FCP_Persistence.SaveStrategy FCP_SpriteMeshEditor.MeshType FlexibleColorPicker.MainPickingMode"
  },
  "api/Plantable.html": {
    "href": "api/Plantable.html",
    "title": "Namespace Plantable | Harvest Grove code documentation",
    "keywords": "Namespace Plantable Classes ItemInstance PlantableData ToolInstance"
  },
  "api/Plantable.ItemInstance.html": {
    "href": "api/Plantable.ItemInstance.html",
    "title": "Class ItemInstance | Harvest Grove code documentation",
    "keywords": "Class ItemInstance Inheritance object ItemInstance ToolInstance Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Plantable Assembly: cs.temp.dll.dll Syntax public class ItemInstance Constructors ItemInstance() Declaration protected ItemInstance() ItemInstance(InventoryItemData) Declaration protected ItemInstance(InventoryItemData data) Parameters Type Name Description InventoryItemData data Properties Data Declaration public InventoryItemData Data { get; set; } Property Value Type Description InventoryItemData"
  },
  "api/Plantable.PlantableData.html": {
    "href": "api/Plantable.PlantableData.html",
    "title": "Class PlantableData | Harvest Grove code documentation",
    "keywords": "Class PlantableData Inheritance object PlantableData Namespace: Plantable Assembly: cs.temp.dll.dll Syntax public class PlantableData : IComparable<PlantableData> Constructors PlantableData(PlantableBaseSO, Vector2Int, ITileMapService, IManagerData) Declaration public PlantableData(PlantableBaseSO plantable, Vector2Int position, ITileMapService tileMapService, IManagerData managerData) Parameters Type Name Description PlantableBaseSO plantable Vector2Int position ITileMapService tileMapService IManagerData managerData PlantableData(PlantableBaseSO, Vector2Int, ushort, ITileMapService, IManagerData) Declaration public PlantableData(PlantableBaseSO plantable, Vector2Int position, ushort width, ITileMapService tileMapService, IManagerData managerData) Parameters Type Name Description PlantableBaseSO plantable Vector2Int position ushort width ITileMapService tileMapService IManagerData managerData PlantableData(ushort, int, bool, Vector2Int, bool, TimeSpan, Guid, TimeSpan) Declaration public PlantableData(ushort plantID, int currentStage, bool isGrown, Vector2Int plantPosition, bool isWatered, TimeSpan finishTime, Guid id, TimeSpan plantFinishTime) Parameters Type Name Description ushort plantID int currentStage bool isGrown Vector2Int plantPosition bool isWatered TimeSpan finishTime Guid id TimeSpan plantFinishTime Fields CurrentStage Declaration public int CurrentStage Field Value Type Description int IsGrown Declaration public bool IsGrown Field Value Type Description bool IsWatered Declaration public bool IsWatered Field Value Type Description bool PlantFinishTime Declaration public TimeSpan PlantFinishTime Field Value Type Description TimeSpan PlantID Declaration public ushort PlantID Field Value Type Description ushort PlantPosition Declaration public Vector2Int PlantPosition Field Value Type Description Vector2Int StageFinishTime Declaration public TimeSpan StageFinishTime Field Value Type Description TimeSpan UNWATEREDVALUE Declaration public const ushort UNWATEREDVALUE = 3 Field Value Type Description ushort Properties Id Declaration public Guid Id { get; set; } Property Value Type Description Guid Plant Declaration public PlantableBaseSO Plant { get; set; } Property Value Type Description PlantableBaseSO Methods CompareTo(PlantableData) Comparing method.. The reason why it's comparing IDs is, that if the finis times are the same, it wouldn't compare, so it's comparing the IDs Declaration public int CompareTo(PlantableData other) Parameters Type Name Description PlantableData other Returns Type Description int GetCropName() Declaration public string GetCropName() Returns Type Description string SetCurrentTile() Declaration public void SetCurrentTile() UpdateGrowingTime() When the plant was watered, update the time Declaration public void UpdateGrowingTime() UpdateStage() Updates the plant's stage Declaration public void UpdateStage() UpdateStagePlayerSleeping() Declaration public void UpdateStagePlayerSleeping()"
  },
  "api/Plantable.ScriptableObjects.CropStagesSO.html": {
    "href": "api/Plantable.ScriptableObjects.CropStagesSO.html",
    "title": "Class CropStagesSO | Harvest Grove code documentation",
    "keywords": "Class CropStagesSO Inheritance object PlantableBaseSO CropStagesSO Inherited Members PlantableBaseSO.ID PlantableBaseSO.GrowingTime PlantableBaseSO.Stages PlantableBaseSO.AllowedTypes Namespace: Plantable.ScriptableObjects Assembly: cs.temp.dll.dll Syntax public class CropStagesSO : PlantableBaseSO Fields Food Declaration public InventoryItemData Food Field Value Type Description InventoryItemData"
  },
  "api/Plantable.ScriptableObjects.html": {
    "href": "api/Plantable.ScriptableObjects.html",
    "title": "Namespace Plantable.ScriptableObjects | Harvest Grove code documentation",
    "keywords": "Namespace Plantable.ScriptableObjects Classes CropStagesSO PlantableBaseSO Base class for saplings and crops stages SaplingStagesSO"
  },
  "api/Plantable.ScriptableObjects.PlantableBaseSO.html": {
    "href": "api/Plantable.ScriptableObjects.PlantableBaseSO.html",
    "title": "Class PlantableBaseSO | Harvest Grove code documentation",
    "keywords": "Class PlantableBaseSO Base class for saplings and crops stages Inheritance object PlantableBaseSO CropStagesSO SaplingStagesSO Namespace: Plantable.ScriptableObjects Assembly: cs.temp.dll.dll Syntax public class PlantableBaseSO : ScriptableObject Fields AllowedTypes Declaration public GroundTileTypeEnum[] AllowedTypes Field Value Type Description GroundTileTypeEnum[] GrowingTime Declaration public short GrowingTime Field Value Type Description short ID Declaration public ushort ID Field Value Type Description ushort Stages Declaration public List<ObjectTileSO> Stages Field Value Type Description List<><ObjectTileSO>"
  },
  "api/Plantable.ScriptableObjects.SaplingStagesSO.html": {
    "href": "api/Plantable.ScriptableObjects.SaplingStagesSO.html",
    "title": "Class SaplingStagesSO | Harvest Grove code documentation",
    "keywords": "Class SaplingStagesSO Inheritance object PlantableBaseSO SaplingStagesSO Inherited Members PlantableBaseSO.ID PlantableBaseSO.GrowingTime PlantableBaseSO.Stages PlantableBaseSO.AllowedTypes Namespace: Plantable.ScriptableObjects Assembly: cs.temp.dll.dll Syntax public class SaplingStagesSO : PlantableBaseSO Fields InitialTilebase Declaration public ObjectTileTypeEnum InitialTilebase Field Value Type Description ObjectTileTypeEnum"
  },
  "api/Plantable.SeedsManagers.html": {
    "href": "api/Plantable.SeedsManagers.html",
    "title": "Namespace Plantable.SeedsManagers | Harvest Grove code documentation",
    "keywords": "Namespace Plantable.SeedsManagers Classes SeedDatabaseSO SeedGrowinEvents SeedGrowing SeedItem SeedPlantingTool"
  },
  "api/Plantable.SeedsManagers.SeedDatabaseSO.html": {
    "href": "api/Plantable.SeedsManagers.SeedDatabaseSO.html",
    "title": "Class SeedDatabaseSO | Harvest Grove code documentation",
    "keywords": "Class SeedDatabaseSO Inheritance object SeedDatabaseSO Namespace: Plantable.SeedsManagers Assembly: cs.temp.dll.dll Syntax public class SeedDatabaseSO : ScriptableObject Fields objectTiles Declaration public ObjectTilesSO objectTiles Field Value Type Description ObjectTilesSO SeedItems Declaration public List<SeedItem> SeedItems Field Value Type Description List<><SeedItem> Methods GetPlantable(ushort) Declaration public PlantableBaseSO GetPlantable(ushort id) Parameters Type Name Description ushort id Returns Type Description PlantableBaseSO GetWidth(ushort) Declaration public ushort GetWidth(ushort id) Parameters Type Name Description ushort id Returns Type Description ushort"
  },
  "api/Plantable.SeedsManagers.SeedGrowinEvents.html": {
    "href": "api/Plantable.SeedsManagers.SeedGrowinEvents.html",
    "title": "Class SeedGrowinEvents | Harvest Grove code documentation",
    "keywords": "Class SeedGrowinEvents Inheritance object SeedGrowinEvents Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Plantable.SeedsManagers Assembly: cs.temp.dll.dll Syntax public class SeedGrowinEvents Fields OnAddToList Declaration public static Action<PlantableData> OnAddToList Field Value Type Description Action<><PlantableData> OnGetPlantableInfo Declaration public static Func<Vector2Int, (TimeSpan finishTime, string cropName)> OnGetPlantableInfo Field Value Type Description Func<, ><Vector2Int, (TimeSpan finishTime, string cropName)> OnHarvestPlant Declaration public static Func<Vector2Int, UniTask> OnHarvestPlant Field Value Type Description Func<, ><Vector2Int, UniTask> OnRemoveFromDictionary Declaration public static Action<Vector2> OnRemoveFromDictionary Field Value Type Description Action<><Vector2> OnResetGrowingTime Declaration public static Action<Vector2Int> OnResetGrowingTime Field Value Type Description Action<><Vector2Int> OnSpawnAttackingVegetable Declaration public static Action<int, Vector2Int> OnSpawnAttackingVegetable Field Value Type Description Action<, ><int, Vector2Int>"
  },
  "api/Plantable.SeedsManagers.SeedGrowing.html": {
    "href": "api/Plantable.SeedsManagers.SeedGrowing.html",
    "title": "Class SeedGrowing | Harvest Grove code documentation",
    "keywords": "Class SeedGrowing Inheritance object SeedGrowing Implements ITaskSavable Namespace: Plantable.SeedsManagers Assembly: cs.temp.dll.dll Syntax public class SeedGrowing : MonoBehaviour, ITaskSavable Fields OnIsPlantWatered Check if the plant is watered, constructionSO you don't water plant twice :] Declaration public static Func<Vector2Int, bool> OnIsPlantWatered Field Value Type Description Func<, ><Vector2Int, bool> Properties Priority Declaration public int Priority { get; } Property Value Type Description int Methods Construct(IManagerData, ITileMapService, IPlayerData) Declaration public void Construct(IManagerData managerData, ITileMapService tileMapService, IPlayerData playerData) Parameters Type Name Description IManagerData managerData ITileMapService tileMapService IPlayerData playerData Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) It's called only when the world is being loaded, not when the player is travelling Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask SavingPath(IslandsDictionaryNames) Declaration public string SavingPath(IslandsDictionaryNames currentIsland) Parameters Type Name Description IslandsDictionaryNames currentIsland Returns Type Description string Implements ITaskSavable"
  },
  "api/Plantable.SeedsManagers.SeedItem.html": {
    "href": "api/Plantable.SeedsManagers.SeedItem.html",
    "title": "Class SeedItem | Harvest Grove code documentation",
    "keywords": "Class SeedItem Inheritance object SeedItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Plantable.SeedsManagers Assembly: cs.temp.dll.dll Syntax [Serializable] public class SeedItem Fields ID Declaration public ushort ID Field Value Type Description ushort PlantableData Declaration public PlantableBaseSO PlantableData Field Value Type Description PlantableBaseSO SeedData Declaration public InventoryItemData SeedData Field Value Type Description InventoryItemData SeedTileType Declaration public ObjectTileTypeEnum SeedTileType Field Value Type Description ObjectTileTypeEnum VeggieController Declaration public RuntimeAnimatorController VeggieController Field Value Type Description RuntimeAnimatorController Width Declaration public ushort Width Field Value Type Description ushort"
  },
  "api/Plantable.SeedsManagers.SeedPlantingTool.html": {
    "href": "api/Plantable.SeedsManagers.SeedPlantingTool.html",
    "title": "Class SeedPlantingTool | Harvest Grove code documentation",
    "keywords": "Class SeedPlantingTool Inheritance object SeedPlantingTool Namespace: Plantable.SeedsManagers Assembly: cs.temp.dll.dll Syntax public class SeedPlantingTool : Tool Fields OnSeedPlanted Declaration public static Action<PlantableData> OnSeedPlanted Field Value Type Description Action<><PlantableData> Methods CanLeftClickHere(int, int) Declaration public override bool CanLeftClickHere(int xPos, int yPos) Parameters Type Name Description int xPos int yPos Returns Type Description bool Construct(ITileMapService, IManagerData) Declaration public void Construct(ITileMapService tileMapService, IManagerData managerData) Parameters Type Name Description ITileMapService tileMapService IManagerData managerData LeftClick() Declaration protected override void LeftClick() OnEnable() Declaration protected override void OnEnable()"
  },
  "api/Plantable.ToolInstance.html": {
    "href": "api/Plantable.ToolInstance.html",
    "title": "Class ToolInstance | Harvest Grove code documentation",
    "keywords": "Class ToolInstance Inheritance object ItemInstance ToolInstance Inherited Members ItemInstance.Data object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Plantable Assembly: cs.temp.dll.dll Syntax public class ToolInstance : ItemInstance Constructors ToolInstance(InventoryItemData, ToolInstance) Declaration public ToolInstance(InventoryItemData data, ToolInstance oldInstance) Parameters Type Name Description InventoryItemData data ToolInstance oldInstance ToolInstance(InventoryItemData, ushort) Declaration public ToolInstance(InventoryItemData data, ushort maxDurability) Parameters Type Name Description InventoryItemData data ushort maxDurability ToolInstance(InventoryItemData) Declaration public ToolInstance(InventoryItemData data) Parameters Type Name Description InventoryItemData data Properties CustomName The custom name of the tool set by the player. Declaration public string CustomName { get; set; } Property Value Type Description string CustomTextColor The custom text color of the tool set by the player. Declaration public Color CustomTextColor { get; set; } Property Value Type Description Color Durability Declaration public ushort Durability { get; set; } Property Value Type Description ushort WaterCapacity Declaration public float WaterCapacity { get; set; } Property Value Type Description float"
  },
  "api/Player.Clicking.Actions.BurningMaterialAction.html": {
    "href": "api/Player.Clicking.Actions.BurningMaterialAction.html",
    "title": "Class BurningMaterialAction | Harvest Grove code documentation",
    "keywords": "Class BurningMaterialAction Inheritance object BurningMaterialAction Namespace: Player.Clicking.Actions Assembly: cs.temp.dll.dll Syntax public class BurningMaterialAction : IRightClickAction Methods CanExecute(PlayerRightClick, Vector2Int) Declaration public bool CanExecute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description bool Execute(PlayerRightClick, Vector2Int) Declaration public void Execute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos RightClickText(PlayerRightClick, Vector2Int) Declaration public string RightClickText(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description string"
  },
  "api/Player.Clicking.Actions.Bushes.BerryBushAction.html": {
    "href": "api/Player.Clicking.Actions.Bushes.BerryBushAction.html",
    "title": "Class BerryBushAction | Harvest Grove code documentation",
    "keywords": "Class BerryBushAction Inheritance object BerryBushAction Namespace: Player.Clicking.Actions.Bushes Assembly: cs.temp.dll.dll Syntax public class BerryBushAction : IRightClickAction Methods CanExecute(PlayerRightClick, Vector2Int) Declaration public bool CanExecute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description bool Execute(PlayerRightClick, Vector2Int) Declaration public void Execute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos RightClickText(PlayerRightClick, Vector2Int) Declaration public string RightClickText(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description string"
  },
  "api/Player.Clicking.Actions.Bushes.html": {
    "href": "api/Player.Clicking.Actions.Bushes.html",
    "title": "Namespace Player.Clicking.Actions.Bushes | Harvest Grove code documentation",
    "keywords": "Namespace Player.Clicking.Actions.Bushes Classes BerryBushAction RaspberryAction StrawberryBushAction"
  },
  "api/Player.Clicking.Actions.Bushes.RaspberryAction.html": {
    "href": "api/Player.Clicking.Actions.Bushes.RaspberryAction.html",
    "title": "Class RaspberryAction | Harvest Grove code documentation",
    "keywords": "Class RaspberryAction Inheritance object RaspberryAction Namespace: Player.Clicking.Actions.Bushes Assembly: cs.temp.dll.dll Syntax public class RaspberryAction : IRightClickAction Methods CanExecute(PlayerRightClick, Vector2Int) Declaration public bool CanExecute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description bool Execute(PlayerRightClick, Vector2Int) Declaration public void Execute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos RightClickText(PlayerRightClick, Vector2Int) Declaration public string RightClickText(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description string"
  },
  "api/Player.Clicking.Actions.Bushes.StrawberryBushAction.html": {
    "href": "api/Player.Clicking.Actions.Bushes.StrawberryBushAction.html",
    "title": "Class StrawberryBushAction | Harvest Grove code documentation",
    "keywords": "Class StrawberryBushAction Inheritance object StrawberryBushAction Namespace: Player.Clicking.Actions.Bushes Assembly: cs.temp.dll.dll Syntax public class StrawberryBushAction : IRightClickAction Methods CanExecute(PlayerRightClick, Vector2Int) Declaration public bool CanExecute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description bool Execute(PlayerRightClick, Vector2Int) Declaration public void Execute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos RightClickText(PlayerRightClick, Vector2Int) Declaration public string RightClickText(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description string"
  },
  "api/Player.Clicking.Actions.FruitTreesAction.html": {
    "href": "api/Player.Clicking.Actions.FruitTreesAction.html",
    "title": "Class FruitTreesAction | Harvest Grove code documentation",
    "keywords": "Class FruitTreesAction Inheritance object FruitTreesAction Namespace: Player.Clicking.Actions Assembly: cs.temp.dll.dll Syntax public class FruitTreesAction : IRightClickAction Methods CanExecute(PlayerRightClick, Vector2Int) Declaration public bool CanExecute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description bool Execute(PlayerRightClick, Vector2Int) Declaration public void Execute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos RightClickText(PlayerRightClick, Vector2Int) Declaration public string RightClickText(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description string"
  },
  "api/Player.Clicking.Actions.GateAction.html": {
    "href": "api/Player.Clicking.Actions.GateAction.html",
    "title": "Class GateAction | Harvest Grove code documentation",
    "keywords": "Class GateAction Inheritance object GateAction Namespace: Player.Clicking.Actions Assembly: cs.temp.dll.dll Syntax public class GateAction : IRightClickAction Methods CanExecute(PlayerRightClick, Vector2Int) Declaration public bool CanExecute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description bool Execute(PlayerRightClick, Vector2Int) Declaration public void Execute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos RightClickText(PlayerRightClick, Vector2Int) Declaration public string RightClickText(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description string"
  },
  "api/Player.Clicking.Actions.GrassAction.html": {
    "href": "api/Player.Clicking.Actions.GrassAction.html",
    "title": "Class GrassAction | Harvest Grove code documentation",
    "keywords": "Class GrassAction Inheritance object GrassAction Namespace: Player.Clicking.Actions Assembly: cs.temp.dll.dll Syntax public class GrassAction : IRightClickAction Fields WheatSpawnRate Declaration public float WheatSpawnRate Field Value Type Description float Methods CanExecute(PlayerRightClick, Vector2Int) Declaration public bool CanExecute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description bool Execute(PlayerRightClick, Vector2Int) Declaration public void Execute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos RightClickText(PlayerRightClick, Vector2Int) Declaration public string RightClickText(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description string"
  },
  "api/Player.Clicking.Actions.GrownCropAction.html": {
    "href": "api/Player.Clicking.Actions.GrownCropAction.html",
    "title": "Class GrownCropAction | Harvest Grove code documentation",
    "keywords": "Class GrownCropAction Inheritance object GrownCropAction Namespace: Player.Clicking.Actions Assembly: cs.temp.dll.dll Syntax public class GrownCropAction : IRightClickAction Methods CanExecute(PlayerRightClick, Vector2Int) Declaration public bool CanExecute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description bool Execute(PlayerRightClick, Vector2Int) Declaration public void Execute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos RightClickText(PlayerRightClick, Vector2Int) Declaration public string RightClickText(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description string"
  },
  "api/Player.Clicking.Actions.html": {
    "href": "api/Player.Clicking.Actions.html",
    "title": "Namespace Player.Clicking.Actions | Harvest Grove code documentation",
    "keywords": "Namespace Player.Clicking.Actions Classes BurningMaterialAction FruitTreesAction GateAction GrassAction GrownCropAction MushroomAction SticksPickupAction StonePickupAction"
  },
  "api/Player.Clicking.Actions.MushroomAction.html": {
    "href": "api/Player.Clicking.Actions.MushroomAction.html",
    "title": "Class MushroomAction | Harvest Grove code documentation",
    "keywords": "Class MushroomAction Inheritance object MushroomAction Namespace: Player.Clicking.Actions Assembly: cs.temp.dll.dll Syntax public class MushroomAction : IRightClickAction Methods CanExecute(PlayerRightClick, Vector2Int) Declaration public bool CanExecute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description bool Execute(PlayerRightClick, Vector2Int) Declaration public void Execute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos RightClickText(PlayerRightClick, Vector2Int) Declaration public string RightClickText(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description string"
  },
  "api/Player.Clicking.Actions.SticksPickupAction.html": {
    "href": "api/Player.Clicking.Actions.SticksPickupAction.html",
    "title": "Class SticksPickupAction | Harvest Grove code documentation",
    "keywords": "Class SticksPickupAction Inheritance object SticksPickupAction Namespace: Player.Clicking.Actions Assembly: cs.temp.dll.dll Syntax public class SticksPickupAction : IRightClickAction Methods CanExecute(PlayerRightClick, Vector2Int) Declaration public bool CanExecute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description bool Execute(PlayerRightClick, Vector2Int) Declaration public void Execute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos RightClickText(PlayerRightClick, Vector2Int) Declaration public string RightClickText(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description string"
  },
  "api/Player.Clicking.Actions.StonePickupAction.html": {
    "href": "api/Player.Clicking.Actions.StonePickupAction.html",
    "title": "Class StonePickupAction | Harvest Grove code documentation",
    "keywords": "Class StonePickupAction Inheritance object StonePickupAction Namespace: Player.Clicking.Actions Assembly: cs.temp.dll.dll Syntax public class StonePickupAction : IRightClickAction Methods CanExecute(PlayerRightClick, Vector2Int) Declaration public bool CanExecute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description bool Execute(PlayerRightClick, Vector2Int) Declaration public void Execute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos RightClickText(PlayerRightClick, Vector2Int) Declaration public string RightClickText(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description string"
  },
  "api/Player.Clicking.RightClicking.html": {
    "href": "api/Player.Clicking.RightClicking.html",
    "title": "Namespace Player.Clicking.RightClicking | Harvest Grove code documentation",
    "keywords": "Namespace Player.Clicking.RightClicking Classes PlayerRightClick This class is responsible when the player right-clicks on an object in the game (i.e. bushes to collect berries) Interfaces IRightClickAction"
  },
  "api/Player.Clicking.RightClicking.IRightClickAction.html": {
    "href": "api/Player.Clicking.RightClicking.IRightClickAction.html",
    "title": "Interface IRightClickAction | Harvest Grove code documentation",
    "keywords": "Interface IRightClickAction Namespace: Player.Clicking.RightClicking Assembly: cs.temp.dll.dll Syntax public interface IRightClickAction Methods CanExecute(PlayerRightClick, Vector2Int) Declaration bool CanExecute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description bool Execute(PlayerRightClick, Vector2Int) Declaration void Execute(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos RightClickText(PlayerRightClick, Vector2Int) Declaration string RightClickText(PlayerRightClick playerRightClick, Vector2Int pos) Parameters Type Name Description PlayerRightClick playerRightClick Vector2Int pos Returns Type Description string"
  },
  "api/Player.Clicking.RightClicking.PlayerRightClick.html": {
    "href": "api/Player.Clicking.RightClicking.PlayerRightClick.html",
    "title": "Class PlayerRightClick | Harvest Grove code documentation",
    "keywords": "Class PlayerRightClick This class is responsible when the player right-clicks on an object in the game (i.e. bushes to collect berries) Inheritance object PlayerRightClick Implements IHoverable Namespace: Player.Clicking.RightClicking Assembly: cs.temp.dll.dll Syntax public class PlayerRightClick : MonoBehaviour, IHoverable Fields BlackRaspberry Declaration public ConsumableSO BlackRaspberry Field Value Type Description ConsumableSO BlueBerry Declaration public ConsumableSO BlueBerry Field Value Type Description ConsumableSO BlueMushroom Declaration public ConsumableSO BlueMushroom Field Value Type Description ConsumableSO BrownMushroom Declaration public ConsumableSO BrownMushroom Field Value Type Description ConsumableSO FruitTreesList Declaration public List<FruitTree> FruitTreesList Field Value Type Description List<><FruitTree> gateDown Declaration public GateTileSO gateDown Field Value Type Description GateTileSO gateSide Declaration public GateTileSO gateSide Field Value Type Description GateTileSO GreenMushroom Declaration public ConsumableSO GreenMushroom Field Value Type Description ConsumableSO MaxBerriesValue Declaration public ushort MaxBerriesValue Field Value Type Description ushort MinBerriesValue Declaration public ushort MinBerriesValue Field Value Type Description ushort OnAddActionSet Declaration public static Action<ActionSetType> OnAddActionSet Field Value Type Description Action<><ActionSetType> OnRemoveActionSet Declaration public static Action<ActionSetType> OnRemoveActionSet Field Value Type Description Action<><ActionSetType> PinkRaspberry Declaration public ConsumableSO PinkRaspberry Field Value Type Description ConsumableSO RedMushroom Declaration public ConsumableSO RedMushroom Field Value Type Description ConsumableSO SticksList Declaration public List<StickTile> SticksList Field Value Type Description List<><StickTile> Stone Declaration public MaterialSO Stone Field Value Type Description MaterialSO Strawberry Declaration public ConsumableSO Strawberry Field Value Type Description ConsumableSO ValidStoneTypes Declaration public HashSet<string> ValidStoneTypes Field Value Type Description HashSet<><string> Wheat Declaration public SeedSO Wheat Field Value Type Description SeedSO Properties CanExecute Declaration public bool CanExecute { get; set; } Property Value Type Description bool CropStructure Declaration public TilemapStructure CropStructure { get; } Property Value Type Description TilemapStructure Hotbar Declaration public Hotbar Hotbar { get; } Property Value Type Description Hotbar ManagerData Declaration public IManagerData ManagerData { get; } Property Value Type Description IManagerData ObjectsBelow Declaration public TilemapStructure ObjectsBelow { get; } Property Value Type Description TilemapStructure ObjectStructure Declaration public TilemapStructure ObjectStructure { get; } Property Value Type Description TilemapStructure PlayerTransform Declaration public Transform PlayerTransform { get; } Property Value Type Description Transform SeedDatabase Declaration public SeedDatabaseSO SeedDatabase { get; } Property Value Type Description SeedDatabaseSO TilemapService Declaration public ITileMapService TilemapService { get; } Property Value Type Description ITileMapService TutorialManager Declaration public TutorialManager TutorialManager { get; } Property Value Type Description TutorialManager WorldStructure Declaration public TilemapStructure WorldStructure { get; } Property Value Type Description TilemapStructure Methods CanShowText(HoveringCanvas) Declaration public bool CanShowText(HoveringCanvas hoveringCanvas) Parameters Type Name Description HoveringCanvas hoveringCanvas Returns Type Description bool Construct(ITileMapService, IGameData, IManagerData, IInventoryService, InputsMap, IPlayerTransfromService) Declaration public void Construct(ITileMapService tileMapService, IGameData gameData, IManagerData managerData, IInventoryService inventoryService, InputsMap inputsMap, IPlayerTransfromService playerTransfromService) Parameters Type Name Description ITileMapService tileMapService IGameData gameData IManagerData managerData IInventoryService inventoryService InputsMap inputsMap IPlayerTransfromService playerTransfromService GetHoverText(HoveringCanvas) Declaration public string GetHoverText(HoveringCanvas hoveringCanvas) Parameters Type Name Description HoveringCanvas hoveringCanvas Returns Type Description string TryAddItemAndUpdateTile(InventoryItemData, int, Action) Tries to add an item to one of the inventories and updates the tile accordingly If there's no space in the inventory, it will spawn the items on the ground Declaration public void TryAddItemAndUpdateTile(InventoryItemData item, int amount, Action OnAction) Parameters Type Name Description InventoryItemData item int amount The amount of the item to be added Action OnAction A callback function called what should happen UpdateBushTile(Vector2Int, ObjectTileTypeEnum, ObjectTileTypeEnum, int) Updates the tile on the given position + add the bush to the plant growing Declaration public void UpdateBushTile(Vector2Int pos, ObjectTileTypeEnum checkTileType, ObjectTileTypeEnum placeTileType, int placeTileCount) Parameters Type Name Description Vector2Int pos ObjectTileTypeEnum checkTileType ObjectTileTypeEnum placeTileType int placeTileCount Implements IHoverable"
  },
  "api/Player.Clicking.RightClicking.Structs.FruitTree.html": {
    "href": "api/Player.Clicking.RightClicking.Structs.FruitTree.html",
    "title": "Struct FruitTree | Harvest Grove code documentation",
    "keywords": "Struct FruitTree Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Player.Clicking.RightClicking.Structs Assembly: cs.temp.dll.dll Syntax public struct FruitTree Fields GivenFruit Declaration public ConsumableSO GivenFruit Field Value Type Description ConsumableSO GrownTreeTile Declaration public ObjectTileTypeEnum GrownTreeTile Field Value Type Description ObjectTileTypeEnum HarvestedTile Declaration public ObjectTileTypeEnum HarvestedTile Field Value Type Description ObjectTileTypeEnum"
  },
  "api/Player.Clicking.RightClicking.Structs.html": {
    "href": "api/Player.Clicking.RightClicking.Structs.html",
    "title": "Namespace Player.Clicking.RightClicking.Structs | Harvest Grove code documentation",
    "keywords": "Namespace Player.Clicking.RightClicking.Structs Structs FruitTree StickTile"
  },
  "api/Player.Clicking.RightClicking.Structs.StickTile.html": {
    "href": "api/Player.Clicking.RightClicking.Structs.StickTile.html",
    "title": "Struct StickTile | Harvest Grove code documentation",
    "keywords": "Struct StickTile Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Player.Clicking.RightClicking.Structs Assembly: cs.temp.dll.dll Syntax public struct StickTile Fields GivenStick Declaration public MaterialSO GivenStick Field Value Type Description MaterialSO Tiles Declaration public List<ObjectTileTypeEnum> Tiles Field Value Type Description List<><ObjectTileTypeEnum>"
  },
  "api/Player.CropTimeShowing.html": {
    "href": "api/Player.CropTimeShowing.html",
    "title": "Class CropTimeShowing | Harvest Grove code documentation",
    "keywords": "Class CropTimeShowing Inheritance object CropTimeShowing Namespace: Player Assembly: cs.temp.dll.dll Syntax public class CropTimeShowing : IHoverable Methods CanShowText(HoveringCanvas) Declaration public bool CanShowText(HoveringCanvas hoveringCanvas) Parameters Type Name Description HoveringCanvas hoveringCanvas Returns Type Description bool GetHoverText(HoveringCanvas) Declaration public string GetHoverText(HoveringCanvas hoveringCanvas) Parameters Type Name Description HoveringCanvas hoveringCanvas Returns Type Description string"
  },
  "api/Player.DeadTree.DeadTree.html": {
    "href": "api/Player.DeadTree.DeadTree.html",
    "title": "Class DeadTree | Harvest Grove code documentation",
    "keywords": "Class DeadTree Inheritance object DeadTree Namespace: Player.DeadTree Assembly: cs.temp.dll.dll Syntax public class DeadTree : InteractionСontroller Methods Construct(IManagerData, InputsMap) Declaration public void Construct(IManagerData managerData, InputsMap inputsMap) Parameters Type Name Description IManagerData managerData InputsMap inputsMap EndInteraction() Declaration public override void EndInteraction() Interact(CallbackContext) Declaration protected override void Interact(InputAction.CallbackContext _) Parameters Type Name Description InputAction.CallbackContext _ OnTriggerEnter2D(Collider2D) Declaration protected override void OnTriggerEnter2D(Collider2D other) Parameters Type Name Description Collider2D other OnTriggerExit2D(Collider2D) Declaration protected override void OnTriggerExit2D(Collider2D other) Parameters Type Name Description Collider2D other ReAddInventory() It's triggereed when the \"unlocked\" animations is about to stop playing Declaration public void ReAddInventory() StartInteraction() Declaration public override void StartInteraction()"
  },
  "api/Player.DeadTree.html": {
    "href": "api/Player.DeadTree.html",
    "title": "Namespace Player.DeadTree | Harvest Grove code documentation",
    "keywords": "Namespace Player.DeadTree Classes DeadTree"
  },
  "api/Player.html": {
    "href": "api/Player.html",
    "title": "Namespace Player | Harvest Grove code documentation",
    "keywords": "Namespace Player Classes CropTimeShowing PlayerCamera PlayerEvents PlayerMovement PlayerPickedUpObject"
  },
  "api/Player.Inputs.html": {
    "href": "api/Player.Inputs.html",
    "title": "Namespace Player.Inputs | Harvest Grove code documentation",
    "keywords": "Namespace Player.Inputs Classes InputsMap"
  },
  "api/Player.Inputs.InputsMap.html": {
    "href": "api/Player.Inputs.InputsMap.html",
    "title": "Class InputsMap | Harvest Grove code documentation",
    "keywords": "Class InputsMap Inheritance object InputsMap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Player.Inputs Assembly: cs.temp.dll.dll Syntax public class InputsMap Properties CloseInputAction Declaration public InputAction CloseInputAction { get; } Property Value Type Description InputAction CollectableAction Declaration public InputAction CollectableAction { get; } Property Value Type Description InputAction DebugInputAction Declaration public InputAction DebugInputAction { get; } Property Value Type Description InputAction DevConsole Declaration public InputAction DevConsole { get; } Property Value Type Description InputAction DividingAction Declaration public InputAction DividingAction { get; } Property Value Type Description InputAction DropItemHotbar Declaration public InputAction DropItemHotbar { get; } Property Value Type Description InputAction InteractInputAction Declaration public InputAction InteractInputAction { get; } Property Value Type Description InputAction LeftClickInputAction Declaration public InputAction LeftClickInputAction { get; } Property Value Type Description InputAction MapInputAction Declaration public InputAction MapInputAction { get; } Property Value Type Description InputAction MoveInputAction Declaration public InputAction MoveInputAction { get; } Property Value Type Description InputAction OpenBackpackAction Declaration public InputAction OpenBackpackAction { get; } Property Value Type Description InputAction PauseInputAction Declaration public InputAction PauseInputAction { get; } Property Value Type Description InputAction PlayerInput Declaration public PlayerInput PlayerInput { get; } Property Value Type Description PlayerInput QuestInputAction Declaration public InputAction QuestInputAction { get; } Property Value Type Description InputAction RightClickInputAction Declaration public InputAction RightClickInputAction { get; } Property Value Type Description InputAction RotateInputAction Declaration public InputAction RotateInputAction { get; } Property Value Type Description InputAction RunInputAction Declaration public InputAction RunInputAction { get; } Property Value Type Description InputAction ScreenshotInputAction Declaration public InputAction ScreenshotInputAction { get; } Property Value Type Description InputAction UseConsumableInputAction Declaration public InputAction UseConsumableInputAction { get; } Property Value Type Description InputAction Methods LoadInputs() Loads the rebinds from the playerprefs Declaration public void LoadInputs()"
  },
  "api/Player.PlayerCamera.html": {
    "href": "api/Player.PlayerCamera.html",
    "title": "Class PlayerCamera | Harvest Grove code documentation",
    "keywords": "Class PlayerCamera Inheritance object PlayerCamera Namespace: Player Assembly: cs.temp.dll.dll Syntax public class PlayerCamera : MonoBehaviour"
  },
  "api/Player.PlayerEvents.html": {
    "href": "api/Player.PlayerEvents.html",
    "title": "Class PlayerEvents | Harvest Grove code documentation",
    "keywords": "Class PlayerEvents Inheritance object PlayerEvents Namespace: Player Assembly: cs.temp.dll.dll Syntax public class PlayerEvents : MonoBehaviour Fields OnItemDrop Declaration public static Action<InventoryItemData, int> OnItemDrop Field Value Type Description Action<, ><InventoryItemData, int> OnToolDrop Declaration public static Action<InventoryItemData, ToolInstance, int> OnToolDrop Field Value Type Description Action<, , ><InventoryItemData, ToolInstance, int> Methods Construct(IOtherData, ICanvasData, InputsMap) Declaration public void Construct(IOtherData otherData, ICanvasData canvasData, InputsMap inputsMap) Parameters Type Name Description IOtherData otherData ICanvasData canvasData InputsMap inputsMap"
  },
  "api/Player.PlayerMovement.html": {
    "href": "api/Player.PlayerMovement.html",
    "title": "Class PlayerMovement | Harvest Grove code documentation",
    "keywords": "Class PlayerMovement Inheritance object PlayerMovement Namespace: Player Assembly: cs.temp.dll.dll Syntax public class PlayerMovement : MonoBehaviour Fields OnSetPlayerMovement Sets player movement. First bool is used for either enabling or disabling movement. Second bool is used if the player should be set to idle state Declaration public static Action<bool, bool> OnSetPlayerMovement Field Value Type Description Action<, ><bool, bool> OnTeleportPlayer Declaration public static Action<Vector2> OnTeleportPlayer Field Value Type Description Action<><Vector2> OnThrowPlayerAway Declaration public static Action<Vector2> OnThrowPlayerAway Field Value Type Description Action<><Vector2> Properties CanMove Declaration public static bool CanMove { get; set; } Property Value Type Description bool PlayerAnimator Declaration public static Animator PlayerAnimator { get; } Property Value Type Description Animator Methods CanExecute() Declaration public void CanExecute() Construct(IInventoryService, InputsMap, IManagerData, StatisticsService, IGameData) Declaration public void Construct(IInventoryService inventoryService, InputsMap inputsMap, IManagerData managerData, StatisticsService statisticsService, IGameData gameData) Parameters Type Name Description IInventoryService inventoryService InputsMap inputsMap IManagerData managerData StatisticsService statisticsService IGameData gameData SetIdle() Declaration public void SetIdle() ThrowAway(Vector2) Declaration public void ThrowAway(Vector2 enemyPosition) Parameters Type Name Description Vector2 enemyPosition"
  },
  "api/Player.PlayerPickedUpObject.html": {
    "href": "api/Player.PlayerPickedUpObject.html",
    "title": "Class PlayerPickedUpObject | Harvest Grove code documentation",
    "keywords": "Class PlayerPickedUpObject Inheritance object PlayerPickedUpObject Namespace: Player Assembly: cs.temp.dll.dll Syntax public class PlayerPickedUpObject : MonoBehaviour Fields OnSetSprite Declaration public static Action<Sprite> OnSetSprite Field Value Type Description Action<><Sprite> Methods DisablePickedUpObject() Declaration public void DisablePickedUpObject() EnablePickedUpObject() Declaration public void EnablePickedUpObject()"
  },
  "api/Player.ToolHolders.DamagableObjectsHolderSO.html": {
    "href": "api/Player.ToolHolders.DamagableObjectsHolderSO.html",
    "title": "Class DamagableObjectsHolderSO | Harvest Grove code documentation",
    "keywords": "Class DamagableObjectsHolderSO Inheritance object DamagableObjectsHolderSO Namespace: Player.ToolHolders Assembly: cs.temp.dll.dll Syntax public class DamagableObjectsHolderSO : ScriptableObject Fields DamagableTiles Declaration public ObjectTileTypeEnum[] DamagableTiles Field Value Type Description ObjectTileTypeEnum[]"
  },
  "api/Player.ToolHolders.DigoutObjectsHolderSO.html": {
    "href": "api/Player.ToolHolders.DigoutObjectsHolderSO.html",
    "title": "Class DigoutObjectsHolderSO | Harvest Grove code documentation",
    "keywords": "Class DigoutObjectsHolderSO Inheritance object DigoutObjectsHolderSO Namespace: Player.ToolHolders Assembly: cs.temp.dll.dll Syntax public class DigoutObjectsHolderSO : ScriptableObject Fields ObjectsToDigout Declaration public DigoutObject[] ObjectsToDigout Field Value Type Description DigoutObject[]"
  },
  "api/Player.ToolHolders.html": {
    "href": "api/Player.ToolHolders.html",
    "title": "Namespace Player.ToolHolders | Harvest Grove code documentation",
    "keywords": "Namespace Player.ToolHolders Classes DamagableObjectsHolderSO DigoutObjectsHolderSO"
  },
  "api/Player.Tools.Animals.AnimalFood.AnimalFood.html": {
    "href": "api/Player.Tools.Animals.AnimalFood.AnimalFood.html",
    "title": "Class AnimalFood | Harvest Grove code documentation",
    "keywords": "Class AnimalFood Inheritance object Tool AnimalFood Implements IToggleable Inherited Members Tool.HoveringTilemap Tool.WorldStructure Tool.ObjectStructure Tool.CropStructure Tool.BuildStructure Tool.ObjectsBelowStructure Tool.HarborStructure Tool.PlayerTransform Tool.CurrentIsland Tool.LeftClickAction Tool.Damage Tool.Width Tool.LockedTime Tool.Construct(ITileMapService, InputsMap, IPlayerTransfromService, IGameData, IManagerData) Tool.IsPlayerNearby(int, int, bool) Tool.GetMousePosition() Tool.SetInfo(ushort, float) Tool.DecreaseFoodAndWater() Tool.DigoutObject(int, int, DigoutObject[]) Namespace: Player.Tools.Animals.AnimalFood Assembly: cs.temp.dll.dll Syntax public class AnimalFood : Tool, IToggleable Fields OnFoodSpawned Declaration public static Action<AnimalFoodType, Vector2, bool> OnFoodSpawned Field Value Type Description Action<, , ><AnimalFoodType, Vector2, bool> Methods AssignFoodType(AnimalFoodType) Declaration public void AssignFoodType(AnimalFoodType passedFoodType) Parameters Type Name Description AnimalFoodType passedFoodType CanLeftClickHere(int, int) Checks if the player can right-click on the tile by checking object structure, world structure and objectsbelow Declaration public override bool CanLeftClickHere(int xPos, int yPos) Parameters Type Name Description int xPos int yPos Returns Type Description bool Overrides Tool.CanLeftClickHere(int, int) Construct(IGameData) Declaration public void Construct(IGameData managerData) Parameters Type Name Description IGameData managerData LeftClick() Declaration protected override void LeftClick() Overrides Tool.LeftClick() OnEnable() Declaration protected override void OnEnable() Overrides Tool.OnEnable() Implements IToggleable"
  },
  "api/Player.Tools.Animals.AnimalFood.html": {
    "href": "api/Player.Tools.Animals.AnimalFood.html",
    "title": "Namespace Player.Tools.Animals.AnimalFood | Harvest Grove code documentation",
    "keywords": "Namespace Player.Tools.Animals.AnimalFood Classes AnimalFood"
  },
  "api/Player.Tools.Animals.EmptyHoneyJar.EmptyHoneyJarTool.html": {
    "href": "api/Player.Tools.Animals.EmptyHoneyJar.EmptyHoneyJarTool.html",
    "title": "Class EmptyHoneyJarTool | Harvest Grove code documentation",
    "keywords": "Class EmptyHoneyJarTool Inheritance object Tool EmptyHoneyJarTool Implements IToggleable Inherited Members Tool.HoveringTilemap Tool.WorldStructure Tool.ObjectStructure Tool.CropStructure Tool.BuildStructure Tool.ObjectsBelowStructure Tool.HarborStructure Tool.PlayerTransform Tool.CurrentIsland Tool.LeftClickAction Tool.Damage Tool.Width Tool.LockedTime Tool.Construct(ITileMapService, InputsMap, IPlayerTransfromService, IGameData, IManagerData) Tool.IsPlayerNearby(int, int, bool) Tool.GetMousePosition() Tool.SetInfo(ushort, float) Tool.DecreaseFoodAndWater() Tool.DigoutObject(int, int, DigoutObject[]) Namespace: Player.Tools.Animals.EmptyHoneyJar Assembly: cs.temp.dll.dll Syntax public class EmptyHoneyJarTool : Tool, IToggleable Methods CanLeftClickHere(int, int) Declaration public override bool CanLeftClickHere(int xPos, int yPos) Parameters Type Name Description int xPos int yPos Returns Type Description bool Overrides Tool.CanLeftClickHere(int, int) LeftClick() Declaration protected override void LeftClick() Overrides Tool.LeftClick() OnEnable() Declaration protected override void OnEnable() Overrides Tool.OnEnable() Implements IToggleable"
  },
  "api/Player.Tools.Animals.EmptyHoneyJar.html": {
    "href": "api/Player.Tools.Animals.EmptyHoneyJar.html",
    "title": "Namespace Player.Tools.Animals.EmptyHoneyJar | Harvest Grove code documentation",
    "keywords": "Namespace Player.Tools.Animals.EmptyHoneyJar Classes EmptyHoneyJarTool"
  },
  "api/Player.Tools.Axe.Axe.html": {
    "href": "api/Player.Tools.Axe.Axe.html",
    "title": "Class Axe | Harvest Grove code documentation",
    "keywords": "Class Axe Inheritance object Tool ObjectBasedTool Axe Implements IToggleable Inherited Members ObjectBasedTool.damagableObjects ObjectBasedTool.DamageObject(Vector2Int) Tool.HoveringTilemap Tool.WorldStructure Tool.ObjectStructure Tool.CropStructure Tool.BuildStructure Tool.ObjectsBelowStructure Tool.HarborStructure Tool.PlayerTransform Tool.CurrentIsland Tool.LeftClickAction Tool.Damage Tool.Width Tool.LockedTime Tool.Construct(ITileMapService, InputsMap, IPlayerTransfromService, IGameData, IManagerData) Tool.IsPlayerNearby(int, int, bool) Tool.GetMousePosition() Tool.SetInfo(ushort, float) Tool.DecreaseFoodAndWater() Tool.DigoutObject(int, int, DigoutObject[]) Namespace: Player.Tools.Axe Assembly: cs.temp.dll.dll Syntax public class Axe : ObjectBasedTool, IToggleable Methods CanLeftClickHere(int, int) Declaration public override bool CanLeftClickHere(int xPos, int yPos) Parameters Type Name Description int xPos int yPos Returns Type Description bool Overrides ObjectBasedTool.CanLeftClickHere(int, int) LeftClick() Declaration protected override void LeftClick() Overrides ObjectBasedTool.LeftClick() OnEnable() Declaration protected override void OnEnable() Overrides Tool.OnEnable() Implements IToggleable"
  },
  "api/Player.Tools.Axe.html": {
    "href": "api/Player.Tools.Axe.html",
    "title": "Namespace Player.Tools.Axe | Harvest Grove code documentation",
    "keywords": "Namespace Player.Tools.Axe Classes Axe Enums LeftClickAxeStateEnum"
  },
  "api/Player.Tools.Axe.LeftClickAxeStateEnum.html": {
    "href": "api/Player.Tools.Axe.LeftClickAxeStateEnum.html",
    "title": "Enum LeftClickAxeStateEnum | Harvest Grove code documentation",
    "keywords": "Enum LeftClickAxeStateEnum Namespace: Player.Tools.Axe Assembly: cs.temp.dll.dll Syntax public enum LeftClickAxeStateEnum Fields Name Description Campfire Damage Digout DigoutHarbor Empty None"
  },
  "api/Player.Tools.Bucket.Bucket.html": {
    "href": "api/Player.Tools.Bucket.Bucket.html",
    "title": "Class Bucket | Harvest Grove code documentation",
    "keywords": "Class Bucket Inheritance object Tool Bucket Implements IToggleable Inherited Members Tool.HoveringTilemap Tool.WorldStructure Tool.ObjectStructure Tool.CropStructure Tool.BuildStructure Tool.ObjectsBelowStructure Tool.HarborStructure Tool.PlayerTransform Tool.CurrentIsland Tool.LeftClickAction Tool.Damage Tool.Width Tool.LockedTime Tool.Construct(ITileMapService, InputsMap, IPlayerTransfromService, IGameData, IManagerData) Tool.IsPlayerNearby(int, int, bool) Tool.GetMousePosition() Tool.SetInfo(ushort, float) Tool.DecreaseFoodAndWater() Tool.DigoutObject(int, int, DigoutObject[]) Namespace: Player.Tools.Bucket Assembly: cs.temp.dll.dll Syntax public class Bucket : Tool, IToggleable Fields EmptyBucket Declaration public ToolSO EmptyBucket Field Value Type Description ToolSO SandBucket Declaration public ToolSO SandBucket Field Value Type Description ToolSO WaterBucket Declaration public ToolSO WaterBucket Field Value Type Description ToolSO Properties CurrentSlotPosition Declaration public int CurrentSlotPosition { get; } Property Value Type Description int GetMousetPosition Declaration public Vector2Int GetMousetPosition { get; } Property Value Type Description Vector2Int GetObjectStructure Declaration public TilemapStructure GetObjectStructure { get; } Property Value Type Description TilemapStructure Hotbar Declaration public Inventory Hotbar { get; } Property Value Type Description Inventory World Declaration public TilemapStructure World { get; } Property Value Type Description TilemapStructure Methods CanLeftClickHere(int, int) Declaration public override bool CanLeftClickHere(int xPos, int yPos) Parameters Type Name Description int xPos int yPos Returns Type Description bool Overrides Tool.CanLeftClickHere(int, int) ChangeCurrentBucket(IBucket) Declaration public void ChangeCurrentBucket(IBucket curr) Parameters Type Name Description IBucket curr Construct(IInventoryService) Declaration public void Construct(IInventoryService inventoryService) Parameters Type Name Description IInventoryService inventoryService LeftClick() Declaration protected override void LeftClick() Overrides Tool.LeftClick() OnEnable() Declaration protected override void OnEnable() Overrides Tool.OnEnable() Implements IToggleable"
  },
  "api/Player.Tools.Bucket.EmptyBucket.html": {
    "href": "api/Player.Tools.Bucket.EmptyBucket.html",
    "title": "Class EmptyBucket | Harvest Grove code documentation",
    "keywords": "Class EmptyBucket Inheritance object EmptyBucket Implements IBucket Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Player.Tools.Bucket Assembly: cs.temp.dll.dll Syntax public class EmptyBucket : IBucket Methods CanLeftClickHere(int, int, Bucket) Declaration public bool CanLeftClickHere(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket Returns Type Description bool CanRightClickHere(int, int, Bucket) Declaration public bool CanRightClickHere(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket Returns Type Description bool LeftClick(int, int, Bucket) Declaration public void LeftClick(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket RightClick(int, int, Bucket) Declaration public void RightClick(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket Implements IBucket"
  },
  "api/Player.Tools.Bucket.html": {
    "href": "api/Player.Tools.Bucket.html",
    "title": "Namespace Player.Tools.Bucket | Harvest Grove code documentation",
    "keywords": "Namespace Player.Tools.Bucket Classes Bucket EmptyBucket SandBucket WaterBucket Interfaces IBucket"
  },
  "api/Player.Tools.Bucket.IBucket.html": {
    "href": "api/Player.Tools.Bucket.IBucket.html",
    "title": "Interface IBucket | Harvest Grove code documentation",
    "keywords": "Interface IBucket Namespace: Player.Tools.Bucket Assembly: cs.temp.dll.dll Syntax public interface IBucket Methods CanLeftClickHere(int, int, Bucket) Declaration bool CanLeftClickHere(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket Returns Type Description bool CanRightClickHere(int, int, Bucket) Declaration bool CanRightClickHere(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket Returns Type Description bool LeftClick(int, int, Bucket) Declaration void LeftClick(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket RightClick(int, int, Bucket) Declaration void RightClick(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket"
  },
  "api/Player.Tools.Bucket.SandBucket.html": {
    "href": "api/Player.Tools.Bucket.SandBucket.html",
    "title": "Class SandBucket | Harvest Grove code documentation",
    "keywords": "Class SandBucket Inheritance object SandBucket Implements IBucket Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Player.Tools.Bucket Assembly: cs.temp.dll.dll Syntax public class SandBucket : IBucket Methods CanLeftClickHere(int, int, Bucket) Declaration public bool CanLeftClickHere(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket Returns Type Description bool CanRightClickHere(int, int, Bucket) Declaration public bool CanRightClickHere(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket Returns Type Description bool LeftClick(int, int, Bucket) Declaration public void LeftClick(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket RightClick(int, int, Bucket) Declaration public void RightClick(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket Implements IBucket"
  },
  "api/Player.Tools.Bucket.WaterBucket.html": {
    "href": "api/Player.Tools.Bucket.WaterBucket.html",
    "title": "Class WaterBucket | Harvest Grove code documentation",
    "keywords": "Class WaterBucket Inheritance object WaterBucket Implements IBucket Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Player.Tools.Bucket Assembly: cs.temp.dll.dll Syntax public class WaterBucket : IBucket Methods CanLeftClickHere(int, int, Bucket) Declaration public bool CanLeftClickHere(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket Returns Type Description bool CanRightClickHere(int, int, Bucket) Declaration public bool CanRightClickHere(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket Returns Type Description bool Construct(IGameData) Declaration public void Construct(IGameData gameData) Parameters Type Name Description IGameData gameData LeftClick(int, int, Bucket) Declaration public void LeftClick(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket RightClick(int, int, Bucket) Declaration public void RightClick(int xPos, int yPos, Bucket bucket) Parameters Type Name Description int xPos int yPos Bucket bucket Implements IBucket"
  },
  "api/Player.Tools.Digout.DigoutItemToInventory.html": {
    "href": "api/Player.Tools.Digout.DigoutItemToInventory.html",
    "title": "Class DigoutItemToInventory | Harvest Grove code documentation",
    "keywords": "Class DigoutItemToInventory Inheritance object DigoutItemToInventory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Player.Tools.Digout Assembly: cs.temp.dll.dll Syntax [Serializable] public class DigoutItemToInventory Fields Item Declaration public InventoryItemData Item Field Value Type Description InventoryItemData MaxAmount Declaration public ushort MaxAmount Field Value Type Description ushort"
  },
  "api/Player.Tools.Digout.DigoutObject.html": {
    "href": "api/Player.Tools.Digout.DigoutObject.html",
    "title": "Class DigoutObject | Harvest Grove code documentation",
    "keywords": "Class DigoutObject Inheritance object DigoutObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Player.Tools.Digout Assembly: cs.temp.dll.dll Syntax [Serializable] public class DigoutObject Fields IsDroppable Declaration public bool IsDroppable Field Value Type Description bool ItemsToGet Items, which player will get if he destroy the object. Declaration public DigoutItemToInventory[] ItemsToGet Field Value Type Description DigoutItemToInventory[] TileType Declaration public ObjectTileTypeEnum TileType Field Value Type Description ObjectTileTypeEnum UsesHarborStructure Declaration public bool UsesHarborStructure Field Value Type Description bool"
  },
  "api/Player.Tools.Digout.html": {
    "href": "api/Player.Tools.Digout.html",
    "title": "Namespace Player.Tools.Digout | Harvest Grove code documentation",
    "keywords": "Namespace Player.Tools.Digout Classes DigoutItemToInventory DigoutObject"
  },
  "api/Player.Tools.Hoe.Hoe.html": {
    "href": "api/Player.Tools.Hoe.Hoe.html",
    "title": "Class Hoe | Harvest Grove code documentation",
    "keywords": "Class Hoe Inheritance object Tool Hoe Implements IToggleable Inherited Members Tool.HoveringTilemap Tool.WorldStructure Tool.ObjectStructure Tool.CropStructure Tool.BuildStructure Tool.ObjectsBelowStructure Tool.HarborStructure Tool.PlayerTransform Tool.CurrentIsland Tool.LeftClickAction Tool.Damage Tool.Width Tool.LockedTime Tool.Construct(ITileMapService, InputsMap, IPlayerTransfromService, IGameData, IManagerData) Tool.IsPlayerNearby(int, int, bool) Tool.GetMousePosition() Tool.SetInfo(ushort, float) Tool.DecreaseFoodAndWater() Tool.DigoutObject(int, int, DigoutObject[]) Namespace: Player.Tools.Hoe Assembly: cs.temp.dll.dll Syntax public class Hoe : Tool, IToggleable Methods CanLeftClickHere(int, int) Checks if the player can left click on the tile at (xPos, yPos). Declaration public override bool CanLeftClickHere(int xPos, int yPos) Parameters Type Name Description int xPos The x-coordinate of the tile. int yPos The y-coordinate of the tile. Returns Type Description bool True if the player can left click on the tile, false otherwise. Overrides Tool.CanLeftClickHere(int, int) HasForbiddenNeighbor(int, int) Checks if a tile at (x, y) has a forbidden neighbor in the tilemap structure Declaration protected bool HasForbiddenNeighbor(int x, int y) Parameters Type Name Description int x The x-coordinate of the tile to check int y The y-coordinate of the tile to check Returns Type Description bool LeftClick() Creates or destroys a field Declaration protected override void LeftClick() Overrides Tool.LeftClick() OnEnable() Declaration protected override void OnEnable() Overrides Tool.OnEnable() Implements IToggleable"
  },
  "api/Player.Tools.Hoe.html": {
    "href": "api/Player.Tools.Hoe.html",
    "title": "Namespace Player.Tools.Hoe | Harvest Grove code documentation",
    "keywords": "Namespace Player.Tools.Hoe Classes Hoe"
  },
  "api/Player.Tools.html": {
    "href": "api/Player.Tools.html",
    "title": "Namespace Player.Tools | Harvest Grove code documentation",
    "keywords": "Namespace Player.Tools Classes ObjectBasedTool Tool"
  },
  "api/Player.Tools.ObjectBasedTool.html": {
    "href": "api/Player.Tools.ObjectBasedTool.html",
    "title": "Class ObjectBasedTool | Harvest Grove code documentation",
    "keywords": "Class ObjectBasedTool Inheritance object Tool ObjectBasedTool Axe Pickaxe Implements IToggleable Inherited Members Tool.HoveringTilemap Tool.WorldStructure Tool.ObjectStructure Tool.CropStructure Tool.BuildStructure Tool.ObjectsBelowStructure Tool.HarborStructure Tool.PlayerTransform Tool.CurrentIsland Tool.LeftClickAction Tool.Damage Tool.Width Tool.LockedTime Tool.Construct(ITileMapService, InputsMap, IPlayerTransfromService, IGameData, IManagerData) Tool.OnEnable() Tool.IsPlayerNearby(int, int, bool) Tool.GetMousePosition() Tool.SetInfo(ushort, float) Tool.DecreaseFoodAndWater() Tool.DigoutObject(int, int, DigoutObject[]) Namespace: Player.Tools Assembly: cs.temp.dll.dll Syntax public class ObjectBasedTool : Tool, IToggleable Fields damagableObjects Declaration protected DamagableObjectsHolderSO damagableObjects Field Value Type Description DamagableObjectsHolderSO Methods CanLeftClickHere(int, int) Declaration public override bool CanLeftClickHere(int xPos, int yPos) Parameters Type Name Description int xPos int yPos Returns Type Description bool Overrides Tool.CanLeftClickHere(int, int) DamageObject(Vector2Int) Update the object state based on position Declaration protected void DamageObject(Vector2Int position) Parameters Type Name Description Vector2Int position LeftClick() Declaration protected override void LeftClick() Overrides Tool.LeftClick() Implements IToggleable"
  },
  "api/Player.Tools.Pickaxe.html": {
    "href": "api/Player.Tools.Pickaxe.html",
    "title": "Namespace Player.Tools.Pickaxe | Harvest Grove code documentation",
    "keywords": "Namespace Player.Tools.Pickaxe Classes Pickaxe"
  },
  "api/Player.Tools.Pickaxe.Pickaxe.html": {
    "href": "api/Player.Tools.Pickaxe.Pickaxe.html",
    "title": "Class Pickaxe | Harvest Grove code documentation",
    "keywords": "Class Pickaxe Inheritance object Tool ObjectBasedTool Pickaxe Implements IToggleable Inherited Members ObjectBasedTool.damagableObjects ObjectBasedTool.CanLeftClickHere(int, int) ObjectBasedTool.DamageObject(Vector2Int) Tool.HoveringTilemap Tool.WorldStructure Tool.ObjectStructure Tool.CropStructure Tool.BuildStructure Tool.ObjectsBelowStructure Tool.HarborStructure Tool.PlayerTransform Tool.CurrentIsland Tool.LeftClickAction Tool.Damage Tool.Width Tool.LockedTime Tool.Construct(ITileMapService, InputsMap, IPlayerTransfromService, IGameData, IManagerData) Tool.IsPlayerNearby(int, int, bool) Tool.GetMousePosition() Tool.SetInfo(ushort, float) Tool.DecreaseFoodAndWater() Tool.DigoutObject(int, int, DigoutObject[]) Namespace: Player.Tools.Pickaxe Assembly: cs.temp.dll.dll Syntax public class Pickaxe : ObjectBasedTool, IToggleable Methods LeftClick() Declaration protected override void LeftClick() Overrides ObjectBasedTool.LeftClick() OnEnable() Declaration protected override void OnEnable() Overrides Tool.OnEnable() Implements IToggleable"
  },
  "api/Player.Tools.Shovel.html": {
    "href": "api/Player.Tools.Shovel.html",
    "title": "Namespace Player.Tools.Shovel | Harvest Grove code documentation",
    "keywords": "Namespace Player.Tools.Shovel Classes SandItemsListSO Shovel Enums LeftClickShovelStateEnum"
  },
  "api/Player.Tools.Shovel.LeftClickShovelStateEnum.html": {
    "href": "api/Player.Tools.Shovel.LeftClickShovelStateEnum.html",
    "title": "Enum LeftClickShovelStateEnum | Harvest Grove code documentation",
    "keywords": "Enum LeftClickShovelStateEnum Namespace: Player.Tools.Shovel Assembly: cs.temp.dll.dll Syntax public enum LeftClickShovelStateEnum Fields Name Description Allowed Beach Digout Empty None"
  },
  "api/Player.Tools.Shovel.SandItemsListSO.html": {
    "href": "api/Player.Tools.Shovel.SandItemsListSO.html",
    "title": "Class SandItemsListSO | Harvest Grove code documentation",
    "keywords": "Class SandItemsListSO Inheritance object SandItemsListSO Namespace: Player.Tools.Shovel Assembly: cs.temp.dll.dll Syntax public class SandItemsListSO : ScriptableObject Fields SandItemsList Declaration public List<InventoryItemData> SandItemsList Field Value Type Description List<><InventoryItemData> SpawnChance Declaration public float SpawnChance Field Value Type Description float"
  },
  "api/Player.Tools.Shovel.Shovel.html": {
    "href": "api/Player.Tools.Shovel.Shovel.html",
    "title": "Class Shovel | Harvest Grove code documentation",
    "keywords": "Class Shovel Inheritance object Tool Shovel Implements IToggleable Inherited Members Tool.HoveringTilemap Tool.WorldStructure Tool.ObjectStructure Tool.CropStructure Tool.BuildStructure Tool.ObjectsBelowStructure Tool.HarborStructure Tool.PlayerTransform Tool.CurrentIsland Tool.LeftClickAction Tool.Damage Tool.Width Tool.LockedTime Tool.Construct(ITileMapService, InputsMap, IPlayerTransfromService, IGameData, IManagerData) Tool.IsPlayerNearby(int, int, bool) Tool.GetMousePosition() Tool.SetInfo(ushort, float) Tool.DecreaseFoodAndWater() Tool.DigoutObject(int, int, DigoutObject[]) Namespace: Player.Tools.Shovel Assembly: cs.temp.dll.dll Syntax public class Shovel : Tool, IToggleable Methods CanLeftClickHere(int, int) Declaration public override bool CanLeftClickHere(int xPos, int yPos) Parameters Type Name Description int xPos int yPos Returns Type Description bool Overrides Tool.CanLeftClickHere(int, int) LeftClick() Declaration protected override void LeftClick() Overrides Tool.LeftClick() OnEnable() Declaration protected override void OnEnable() Overrides Tool.OnEnable() Implements IToggleable"
  },
  "api/Player.Tools.Tool.html": {
    "href": "api/Player.Tools.Tool.html",
    "title": "Class Tool | Harvest Grove code documentation",
    "keywords": "Class Tool Inheritance object Tool AnimalFood EmptyHoneyJarTool Bucket Hoe ObjectBasedTool Shovel Bottle WateringCan Implements IToggleable Namespace: Player.Tools Assembly: cs.temp.dll.dll Syntax public abstract class Tool : MonoBehaviour, IToggleable Fields LeftClickAction Declaration protected InputAction LeftClickAction Field Value Type Description InputAction Width Declaration public ushort Width Field Value Type Description ushort Properties BuildStructure Declaration protected TilemapStructure BuildStructure { get; } Property Value Type Description TilemapStructure CropStructure Declaration protected TilemapStructure CropStructure { get; } Property Value Type Description TilemapStructure CurrentIsland Declaration protected IslandsDictionaryNames CurrentIsland { get; } Property Value Type Description IslandsDictionaryNames Damage Declaration protected ushort Damage { get; } Property Value Type Description ushort HarborStructure Declaration protected TilemapStructure HarborStructure { get; } Property Value Type Description TilemapStructure HoveringTilemap Declaration public Tilemap HoveringTilemap { get; } Property Value Type Description Tilemap LockedTime Declaration protected float LockedTime { get; } Property Value Type Description float ObjectsBelowStructure Declaration protected TilemapStructure ObjectsBelowStructure { get; } Property Value Type Description TilemapStructure ObjectStructure Declaration protected TilemapStructure ObjectStructure { get; } Property Value Type Description TilemapStructure PlayerTransform Declaration protected Transform PlayerTransform { get; set; } Property Value Type Description Transform WorldStructure Declaration protected TilemapStructure WorldStructure { get; } Property Value Type Description TilemapStructure Methods CanLeftClickHere(int, int) Checks if the player can left-click on a tile Declaration public virtual bool CanLeftClickHere(int xPos, int yPos) Parameters Type Name Description int xPos The X position of the player int yPos The Y position of the player Returns Type Description bool Construct(ITileMapService, InputsMap, IPlayerTransfromService, IGameData, IManagerData) Declaration public void Construct(ITileMapService tileMapService, InputsMap inputsMap, IPlayerTransfromService playerTransfromService, IGameData gameData, IManagerData managerData) Parameters Type Name Description ITileMapService tileMapService InputsMap inputsMap IPlayerTransfromService playerTransfromService IGameData gameData IManagerData managerData DecreaseFoodAndWater() Decreases food and water based on the action cost Declaration protected void DecreaseFoodAndWater() DigoutObject(int, int, DigoutObject[]) Dig out objects at the specified position and spawn items on the ground Declaration protected void DigoutObject(int posX, int posY, DigoutObject[] objectsToDigout) Parameters Type Name Description int posX int posY DigoutObject[] objectsToDigout The objects to dig out GetMousePosition() Get the mouse position in world coordinates Declaration public Vector2Int GetMousePosition() Returns Type Description Vector2Int Vector2Int with the mouse position in the world coordinates IsPlayerNearby(int, int, bool) Check, if the player is nearby specific tile (3x3 area around the player) Declaration protected bool IsPlayerNearby(int mouseXPos, int mouseYPos, bool takePlayerPositionInAccount = true) Parameters Type Name Description int mouseXPos Mouse position X int mouseYPos Mouse position Y bool takePlayerPositionInAccount Take the player in account or not {i.e. include the tile below the player} Returns Type Description bool Whenever the player is nearby or not LeftClick() Called when the player left clicks Declaration protected abstract void LeftClick() OnEnable() Declaration protected virtual void OnEnable() SetInfo(ushort, float) Set the damage and locked time from the tool SO Declaration public void SetInfo(ushort toolDamage, float lockedTime) Parameters Type Name Description ushort toolDamage float lockedTime Implements IToggleable"
  },
  "api/Player.Tools.WaterBottle.Bottle.html": {
    "href": "api/Player.Tools.WaterBottle.Bottle.html",
    "title": "Class Bottle | Harvest Grove code documentation",
    "keywords": "Class Bottle Inheritance object Tool Bottle Implements IToggleable Inherited Members Tool.HoveringTilemap Tool.WorldStructure Tool.ObjectStructure Tool.CropStructure Tool.BuildStructure Tool.ObjectsBelowStructure Tool.HarborStructure Tool.PlayerTransform Tool.CurrentIsland Tool.LeftClickAction Tool.Damage Tool.Width Tool.LockedTime Tool.Construct(ITileMapService, InputsMap, IPlayerTransfromService, IGameData, IManagerData) Tool.IsPlayerNearby(int, int, bool) Tool.GetMousePosition() Tool.SetInfo(ushort, float) Tool.DecreaseFoodAndWater() Tool.DigoutObject(int, int, DigoutObject[]) Namespace: Player.Tools.WaterBottle Assembly: cs.temp.dll.dll Syntax public class Bottle : Tool, IToggleable Properties BottleSO Declaration public InventoryItemData BottleSO { get; set; } Property Value Type Description InventoryItemData Methods CanLeftClickHere(int, int) Declaration public override bool CanLeftClickHere(int xPos, int yPos) Parameters Type Name Description int xPos int yPos Returns Type Description bool Overrides Tool.CanLeftClickHere(int, int) LeftClick() Declaration protected override void LeftClick() Overrides Tool.LeftClick() OnEnable() Declaration protected override void OnEnable() Overrides Tool.OnEnable() Implements IToggleable"
  },
  "api/Player.Tools.WaterBottle.html": {
    "href": "api/Player.Tools.WaterBottle.html",
    "title": "Namespace Player.Tools.WaterBottle | Harvest Grove code documentation",
    "keywords": "Namespace Player.Tools.WaterBottle Classes Bottle"
  },
  "api/Player.Tools.WateringCan.html": {
    "href": "api/Player.Tools.WateringCan.html",
    "title": "Namespace Player.Tools.WateringCan | Harvest Grove code documentation",
    "keywords": "Namespace Player.Tools.WateringCan Classes WateringCan WaterUI"
  },
  "api/Player.Tools.WateringCan.WateringCan.html": {
    "href": "api/Player.Tools.WateringCan.WateringCan.html",
    "title": "Class WateringCan | Harvest Grove code documentation",
    "keywords": "Class WateringCan Inheritance object Tool WateringCan Implements IToggleable Inherited Members Tool.HoveringTilemap Tool.WorldStructure Tool.ObjectStructure Tool.CropStructure Tool.BuildStructure Tool.ObjectsBelowStructure Tool.HarborStructure Tool.PlayerTransform Tool.CurrentIsland Tool.LeftClickAction Tool.Damage Tool.Width Tool.LockedTime Tool.Construct(ITileMapService, InputsMap, IPlayerTransfromService, IGameData, IManagerData) Tool.IsPlayerNearby(int, int, bool) Tool.GetMousePosition() Tool.SetInfo(ushort, float) Tool.DecreaseFoodAndWater() Tool.DigoutObject(int, int, DigoutObject[]) Namespace: Player.Tools.WateringCan Assembly: cs.temp.dll.dll Syntax public class WateringCan : Tool, IToggleable Fields OnGetWater Getting water from natural resources such as river or ocean Declaration public static Action<ToolInstance> OnGetWater Field Value Type Description Action<><ToolInstance> OnWaterField Declaration public static Action<ToolInstance, Vector2Int> OnWaterField Field Value Type Description Action<, ><ToolInstance, Vector2Int> Methods CanLeftClickHere(int, int) Declaration public override bool CanLeftClickHere(int xPos, int yPos) Parameters Type Name Description int xPos int yPos Returns Type Description bool Overrides Tool.CanLeftClickHere(int, int) Construct(ICanvasData, IInventoryService, IGameData) Declaration public void Construct(ICanvasData canvasData, IInventoryService inventoryService, IGameData gameData) Parameters Type Name Description ICanvasData canvasData IInventoryService inventoryService IGameData gameData LeftClick() Left click is for watering plants Declaration protected override void LeftClick() Overrides Tool.LeftClick() OnEnable() Declaration protected override void OnEnable() Overrides Tool.OnEnable() Implements IToggleable"
  },
  "api/Player.Tools.WateringCan.WaterUI.html": {
    "href": "api/Player.Tools.WateringCan.WaterUI.html",
    "title": "Class WaterUI | Harvest Grove code documentation",
    "keywords": "Class WaterUI Inheritance object WaterUI Namespace: Player.Tools.WateringCan Assembly: cs.temp.dll.dll Syntax public class WaterUI : MonoBehaviour Fields OnAlreadyWatered Declaration public static Action OnAlreadyWatered Field Value Type Description Action OnHideWaterUI Declaration public static Action OnHideWaterUI Field Value Type Description Action OnShowWaterUI Declaration public static Action<float, ushort> OnShowWaterUI Field Value Type Description Action<, ><float, ushort> OnWaterCanEmpty Declaration public static Action OnWaterCanEmpty Field Value Type Description Action Properties HasWater Declaration public bool HasWater { get; } Property Value Type Description bool"
  },
  "api/QuestSystem.html": {
    "href": "api/QuestSystem.html",
    "title": "Namespace QuestSystem | Harvest Grove code documentation",
    "keywords": "Namespace QuestSystem Classes Quest QuestBookUIDataHolder QuestsBookPage QuestsDataHolder Enums QuestType"
  },
  "api/QuestSystem.Quest.html": {
    "href": "api/QuestSystem.Quest.html",
    "title": "Class Quest | Harvest Grove code documentation",
    "keywords": "Class Quest Inheritance object Quest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: QuestSystem Assembly: cs.temp.dll.dll Syntax public class Quest Constructors Quest(QuestSavingStruct, InventoryItemData, NPC_Data) Declaration public Quest(QuestSavingStruct questSavingStruct, InventoryItemData item, NPC_Data questGiver) Parameters Type Name Description QuestSavingStruct questSavingStruct InventoryItemData item NPC_Data questGiver Quest(string, string, NPC_Data, string, InventoryItemData, int) Declaration public Quest(string questName, string questID, NPC_Data questGiver, string questText, InventoryItemData requiredItem, int requiredItemsAmount) Parameters Type Name Description string questName string questID NPC_Data questGiver string questText InventoryItemData requiredItem int requiredItemsAmount Properties CurrentAmount Declaration public int CurrentAmount { get; set; } Property Value Type Description int QuestGiver Declaration public NPC_Data QuestGiver { get; set; } Property Value Type Description NPC_Data QuestID Declaration public string QuestID { get; set; } Property Value Type Description string QuestName Declaration public string QuestName { get; set; } Property Value Type Description string QuestText Declaration public string QuestText { get; set; } Property Value Type Description string QuestType Declaration public QuestType QuestType { get; set; } Property Value Type Description QuestType RequiredItem Declaration public InventoryItemData RequiredItem { get; set; } Property Value Type Description InventoryItemData RequiredItemAmount Declaration public int RequiredItemAmount { get; set; } Property Value Type Description int Methods ~Quest() Declaration protected ~Quest()"
  },
  "api/QuestSystem.QuestBookUIDataHolder.html": {
    "href": "api/QuestSystem.QuestBookUIDataHolder.html",
    "title": "Class QuestBookUIDataHolder | Harvest Grove code documentation",
    "keywords": "Class QuestBookUIDataHolder Inheritance object QuestBookUIDataHolder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: QuestSystem Assembly: cs.temp.dll.dll Syntax public static class QuestBookUIDataHolder Fields QuestsBookPages Declaration public static readonly List<QuestsBookPage> QuestsBookPages Field Value Type Description List<><QuestsBookPage> Properties QuestsBookPagesCount Declaration public static int QuestsBookPagesCount { get; set; } Property Value Type Description int Methods ActivateQuest(Quest) Invokes the OnQuestAssigned event. Call it whenever you want to activate a quest. Declaration public static void ActivateQuest(Quest quest) Parameters Type Name Description Quest quest ClaimQuest(Quest) Declaration public static void ClaimQuest(Quest quest) Parameters Type Name Description Quest quest CompleteQuest(Quest) Declaration public static void CompleteQuest(Quest quest) Parameters Type Name Description Quest quest UpdateQuestBookUI(Quest) Declaration public static void UpdateQuestBookUI(Quest quest) Parameters Type Name Description Quest quest Events OnQuestAssigned Declaration public static event Action<Quest> OnQuestAssigned Event Type Type Description Action<><Quest> OnQuestBookUIUpdateRequested Declaration public static event Action<Quest> OnQuestBookUIUpdateRequested Event Type Type Description Action<><Quest> OnQuestClaimed Declaration public static event Action<Quest> OnQuestClaimed Event Type Type Description Action<><Quest> OnQuestCompleted Declaration public static event Action<Quest> OnQuestCompleted Event Type Type Description Action<><Quest>"
  },
  "api/QuestSystem.QuestsBookPage.html": {
    "href": "api/QuestSystem.QuestsBookPage.html",
    "title": "Class QuestsBookPage | Harvest Grove code documentation",
    "keywords": "Class QuestsBookPage Inheritance object QuestsBookPage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: QuestSystem Assembly: cs.temp.dll.dll Syntax public class QuestsBookPage Constructors QuestsBookPage(int, sbyte) Declaration public QuestsBookPage(int maxQuestsPerPage, sbyte pageUIIndex) Parameters Type Name Description int maxQuestsPerPage sbyte pageUIIndex Properties PageIndex Declaration public int PageIndex { get; } Property Value Type Description int PageUIIndex Declaration public sbyte PageUIIndex { get; } Property Value Type Description sbyte QuestsInPage Declaration public Quest[] QuestsInPage { get; set; } Property Value Type Description Quest[]"
  },
  "api/QuestSystem.QuestsDataHolder.html": {
    "href": "api/QuestSystem.QuestsDataHolder.html",
    "title": "Class QuestsDataHolder | Harvest Grove code documentation",
    "keywords": "Class QuestsDataHolder Inheritance object QuestsDataHolder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: QuestSystem Assembly: cs.temp.dll.dll Syntax public static class QuestsDataHolder Fields ActiveQuests Declaration public static readonly List<Quest> ActiveQuests Field Value Type Description List<><Quest> QuestsToClaim Declaration public static readonly List<Quest> QuestsToClaim Field Value Type Description List<><Quest> Methods GenerateRandomQuest(string, NPC_Data, string) Declaration public static void GenerateRandomQuest(string questName, NPC_Data npcData, string questText) Parameters Type Name Description string questName NPC_Data npcData string questText IsQuestActive(string) Declaration public static bool IsQuestActive(string givenQuestID) Parameters Type Name Description string givenQuestID Returns Type Description bool"
  },
  "api/QuestSystem.QuestType.html": {
    "href": "api/QuestSystem.QuestType.html",
    "title": "Enum QuestType | Harvest Grove code documentation",
    "keywords": "Enum QuestType Namespace: QuestSystem Assembly: cs.temp.dll.dll Syntax public enum QuestType Fields Name Description LocationDiscovery RetrieveItem"
  },
  "api/Systems.Animations.AnimationsEnum.html": {
    "href": "api/Systems.Animations.AnimationsEnum.html",
    "title": "Enum AnimationsEnum | Harvest Grove code documentation",
    "keywords": "Enum AnimationsEnum Namespace: Systems.Animations Assembly: cs.temp.dll.dll Syntax public enum AnimationsEnum Fields Name Description cat_licking cat_sit cat_sitting cat_standing cat_walking character_axe_iron character_axe_stone character_carry character_death character_dizzy character_eating character_hoe_iron character_hoe_stone character_idle character_kneeling character_pickaxe_iron character_pickaxe_stone character_picking_up character_pour_water character_run character_scoop_sand character_scoop_water character_shovel_iron character_shovel_stone character_tired character_walk character_water_empty character_water_full DayToNight NightToDay"
  },
  "api/Systems.Animations.AnimationsManager.html": {
    "href": "api/Systems.Animations.AnimationsManager.html",
    "title": "Class AnimationsManager | Harvest Grove code documentation",
    "keywords": "Class AnimationsManager Inheritance object AnimationsManager PlayerAnimationsManager Namespace: Systems.Animations Assembly: cs.temp.dll.dll Syntax public class AnimationsManager : MonoBehaviour Fields OnSetAnimation Declaration public static Action<float, float, AnimationsEnum, Animator> OnSetAnimation Field Value Type Description Action<, , , ><float, float, AnimationsEnum, Animator> Methods IsAnimationPlaying(Animator, AnimationsEnum) Checks if the specified animation state is currently playing and not finished. Declaration public static bool IsAnimationPlaying(Animator anim, AnimationsEnum stateName) Parameters Type Name Description Animator anim Animator component to check. AnimationsEnum stateName Name of the animation state. Returns Type Description bool True if the state is playing and not finished; otherwise, false. SetAnimation(float, float, AnimationsEnum, Animator) Sets the animation parameters and plays the specified animation. Declaration protected void SetAnimation(float xAxis, float yAxis, AnimationsEnum animationType, Animator animator) Parameters Type Name Description float xAxis Value for the X axis parameter. float yAxis Value for the Y axis parameter. AnimationsEnum animationType Type of animation to play. Animator animator Animator component to control."
  },
  "api/Systems.Animations.html": {
    "href": "api/Systems.Animations.html",
    "title": "Namespace Systems.Animations | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Animations Classes AnimationsManager PlayerAnimationsManager Manages player-specific animation logic and execution. Enums AnimationsEnum"
  },
  "api/Systems.Animations.PlayerAnimationsManager.html": {
    "href": "api/Systems.Animations.PlayerAnimationsManager.html",
    "title": "Class PlayerAnimationsManager | Harvest Grove code documentation",
    "keywords": "Class PlayerAnimationsManager Manages player-specific animation logic and execution. Inheritance object AnimationsManager PlayerAnimationsManager Inherited Members AnimationsManager.OnSetAnimation AnimationsManager.SetAnimation(float, float, AnimationsEnum, Animator) AnimationsManager.IsAnimationPlaying(Animator, AnimationsEnum) Namespace: Systems.Animations Assembly: cs.temp.dll.dll Syntax public class PlayerAnimationsManager : AnimationsManager Fields OnCanExecuteAction Declaration public static Action OnCanExecuteAction Field Value Type Description Action OnSetAnimationAsync Declaration public static Func<float, float, AnimationsEnum, Animator, UniTask<bool>> OnSetAnimationAsync Field Value Type Description Func<, , , , ><float, float, AnimationsEnum, Animator, UniTask<><bool>>"
  },
  "api/Systems.Cooking.Cauldron.html": {
    "href": "api/Systems.Cooking.Cauldron.html",
    "title": "Class Cauldron | Harvest Grove code documentation",
    "keywords": "Class Cauldron Inheritance object Cauldron Namespace: Systems.Cooking Assembly: cs.temp.dll.dll Syntax public class Cauldron : InteractionСontroller Methods Construct(ICookingSystemData) Declaration public void Construct(ICookingSystemData cookingSystemData) Parameters Type Name Description ICookingSystemData cookingSystemData Interact(CallbackContext) Declaration protected override void Interact(InputAction.CallbackContext _) Parameters Type Name Description InputAction.CallbackContext _"
  },
  "api/Systems.Cooking.CookingRecipeSO.html": {
    "href": "api/Systems.Cooking.CookingRecipeSO.html",
    "title": "Class CookingRecipeSO | Harvest Grove code documentation",
    "keywords": "Class CookingRecipeSO Inheritance object CookingRecipeSO Implements IComparable<><CookingRecipeSO> Namespace: Systems.Cooking Assembly: cs.temp.dll.dll Syntax public class CookingRecipeSO : ScriptableObject, IComparable<CookingRecipeSO> Fields Cooktime Declaration public float Cooktime Field Value Type Description float Ingredients Declaration public List<RecipeIngredient> Ingredients Field Value Type Description List<><RecipeIngredient> ItemID Declaration public int ItemID Field Value Type Description int Name Declaration public LocalizedString Name Field Value Type Description LocalizedString Outcome Declaration public ConsumableSO Outcome Field Value Type Description ConsumableSO Methods CompareTo(CookingRecipeSO) Declaration public int CompareTo(CookingRecipeSO other) Parameters Type Name Description CookingRecipeSO other Returns Type Description int Implements IComparable<>"
  },
  "api/Systems.Cooking.html": {
    "href": "api/Systems.Cooking.html",
    "title": "Namespace Systems.Cooking | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Cooking Classes Cauldron CookingRecipeSO RecipeBook RecipeDatabase This class holds all the IDs of the items, in order to access them easily later on. Create a ScriptableObject in the Project Tab and drag and drop the items in the list. UnlockableCookingRecipeSO UnlockedRecipesSO Structs RecipeIngredient"
  },
  "api/Systems.Cooking.RecipeBook.html": {
    "href": "api/Systems.Cooking.RecipeBook.html",
    "title": "Class RecipeBook | Harvest Grove code documentation",
    "keywords": "Class RecipeBook Inheritance object RecipeBook Namespace: Systems.Cooking Assembly: cs.temp.dll.dll Syntax public class RecipeBook : MonoBehaviour Fields IsEnabled Declaration public static bool IsEnabled Field Value Type Description bool OnToggleRecipeCanvas Declaration public static Action OnToggleRecipeCanvas Field Value Type Description Action"
  },
  "api/Systems.Cooking.RecipeDatabase.html": {
    "href": "api/Systems.Cooking.RecipeDatabase.html",
    "title": "Class RecipeDatabase | Harvest Grove code documentation",
    "keywords": "Class RecipeDatabase This class holds all the IDs of the items, in order to access them easily later on. Create a ScriptableObject in the Project Tab and drag and drop the items in the list. Inheritance object RecipeDatabase Namespace: Systems.Cooking Assembly: cs.temp.dll.dll Syntax public class RecipeDatabase : ScriptableObject Fields CookingRecipes Declaration public List<CookingRecipeSO> CookingRecipes Field Value Type Description List<><CookingRecipeSO> Methods GetRecipe(int) Declaration public CookingRecipeSO GetRecipe(int id) Parameters Type Name Description int id Returns Type Description CookingRecipeSO UpdateID() Updates all the items id Declaration public void UpdateID()"
  },
  "api/Systems.Cooking.RecipeIngredient.html": {
    "href": "api/Systems.Cooking.RecipeIngredient.html",
    "title": "Struct RecipeIngredient | Harvest Grove code documentation",
    "keywords": "Struct RecipeIngredient Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Systems.Cooking Assembly: cs.temp.dll.dll Syntax public struct RecipeIngredient Fields Amount Declaration public byte Amount Field Value Type Description byte IngredientType Declaration public BasicIngredientType IngredientType Field Value Type Description BasicIngredientType NeededItem Declaration public InventoryItemData NeededItem Field Value Type Description InventoryItemData"
  },
  "api/Systems.Cooking.UI.CauldronIngredient.html": {
    "href": "api/Systems.Cooking.UI.CauldronIngredient.html",
    "title": "Class CauldronIngredient | Harvest Grove code documentation",
    "keywords": "Class CauldronIngredient Inheritance object CauldronIngredient Namespace: Systems.Cooking.UI Assembly: cs.temp.dll.dll Syntax public class CauldronIngredient : MonoBehaviour Properties CurrentAmount Declaration public int CurrentAmount { get; } Property Value Type Description int ItemData Declaration public InventoryItemData ItemData { get; } Property Value Type Description InventoryItemData Methods Disable() Declaration public void Disable() IncreaseAmount() Declaration public void IncreaseAmount() RemoveFromInventory(int) Declaration public void RemoveFromInventory(int amount) Parameters Type Name Description int amount RemoveIngredient() Declaration public void RemoveIngredient() Setup(InventoryItemData, CookingSystem) Declaration public void Setup(InventoryItemData itemData, CookingSystem cookingSystem) Parameters Type Name Description InventoryItemData itemData CookingSystem cookingSystem"
  },
  "api/Systems.Cooking.UI.CookButton.html": {
    "href": "api/Systems.Cooking.UI.CookButton.html",
    "title": "Class CookButton | Harvest Grove code documentation",
    "keywords": "Class CookButton Inheritance object CookButton Namespace: Systems.Cooking.UI Assembly: cs.temp.dll.dll Syntax public class CookButton : MonoBehaviour Fields OnCookButtonCheck Declaration public static Action OnCookButtonCheck Field Value Type Description Action Methods Cook() Declaration public void Cook() TakeProduct() Declaration public void TakeProduct()"
  },
  "api/Systems.Cooking.UI.CookingInventoryItem.html": {
    "href": "api/Systems.Cooking.UI.CookingInventoryItem.html",
    "title": "Class CookingInventoryItem | Harvest Grove code documentation",
    "keywords": "Class CookingInventoryItem Inheritance object CookingInventoryItem Namespace: Systems.Cooking.UI Assembly: cs.temp.dll.dll Syntax public class CookingInventoryItem : MonoBehaviour Methods AddToCauldron() Declaration public void AddToCauldron() AssingInfo(InventoryItemData, int, CookingSystem) Declaration public void AssingInfo(InventoryItemData itemData, int inventoryAmount, CookingSystem cookingSystem) Parameters Type Name Description InventoryItemData itemData int inventoryAmount CookingSystem cookingSystem IncreaseAmount() Declaration public void IncreaseAmount()"
  },
  "api/Systems.Cooking.UI.CookingSystem.html": {
    "href": "api/Systems.Cooking.UI.CookingSystem.html",
    "title": "Class CookingSystem | Harvest Grove code documentation",
    "keywords": "Class CookingSystem Inheritance object CookingSystem Namespace: Systems.Cooking.UI Assembly: cs.temp.dll.dll Syntax public class CookingSystem : MonoBehaviour Fields IsCookingUIActive Declaration public static bool IsCookingUIActive Field Value Type Description bool OnDisableInventoryItems Declaration public static Action OnDisableInventoryItems Field Value Type Description Action OnShowCookingUI Declaration public static Action<GameObject> OnShowCookingUI Field Value Type Description Action<><GameObject> Properties CauldronIngredients Declaration public Dictionary<InventoryItemData, CauldronIngredient> CauldronIngredients { get; } Property Value Type Description Dictionary<, ><InventoryItemData, CauldronIngredient> Methods AddIngredientToCauldron(InventoryItemData) Declaration public void AddIngredientToCauldron(InventoryItemData ingredient) Parameters Type Name Description InventoryItemData ingredient AddIngredientToInventory(InventoryItemData) Declaration public void AddIngredientToInventory(InventoryItemData item) Parameters Type Name Description InventoryItemData item Construct(ICookingSystemData, InputsMap) Declaration public void Construct(ICookingSystemData cookingSystemData, InputsMap inputsMap) Parameters Type Name Description ICookingSystemData cookingSystemData InputsMap inputsMap DestroyCauldron() Declaration public void DestroyCauldron() RemoveAllIngredients() Declaration public void RemoveAllIngredients()"
  },
  "api/Systems.Cooking.UI.html": {
    "href": "api/Systems.Cooking.UI.html",
    "title": "Namespace Systems.Cooking.UI | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Cooking.UI Classes CauldronIngredient CookButton CookingInventoryItem CookingSystem RecipeIngredientPrefab RecipeIngredientsUI"
  },
  "api/Systems.Cooking.UI.RecipeIngredientPrefab.html": {
    "href": "api/Systems.Cooking.UI.RecipeIngredientPrefab.html",
    "title": "Class RecipeIngredientPrefab | Harvest Grove code documentation",
    "keywords": "Class RecipeIngredientPrefab Inheritance object RecipeIngredientPrefab Namespace: Systems.Cooking.UI Assembly: cs.temp.dll.dll Syntax public class RecipeIngredientPrefab : MonoBehaviour Methods AssignInfo(string, int, Sprite) Declaration public void AssignInfo(string name, int amount, Sprite icon) Parameters Type Name Description string name int amount Sprite icon"
  },
  "api/Systems.Cooking.UI.RecipeIngredientsUI.html": {
    "href": "api/Systems.Cooking.UI.RecipeIngredientsUI.html",
    "title": "Class RecipeIngredientsUI | Harvest Grove code documentation",
    "keywords": "Class RecipeIngredientsUI Inheritance object RecipeIngredientsUI Namespace: Systems.Cooking.UI Assembly: cs.temp.dll.dll Syntax public class RecipeIngredientsUI : MonoBehaviour Fields OnCloseRecipeIngredientsUI Declaration public static Action OnCloseRecipeIngredientsUI Field Value Type Description Action OnRecipeSelected Declaration public static Action<CookingRecipeSO> OnRecipeSelected Field Value Type Description Action<><CookingRecipeSO> OnShowRecipeIngredientsUI Declaration public static Action<CookingRecipeSO> OnShowRecipeIngredientsUI Field Value Type Description Action<><CookingRecipeSO> Methods CloseRecipeIngredientsUI() Declaration public void CloseRecipeIngredientsUI() SelectRecipe() Declaration public void SelectRecipe()"
  },
  "api/Systems.Cooking.UnlockableCookingRecipeSO.html": {
    "href": "api/Systems.Cooking.UnlockableCookingRecipeSO.html",
    "title": "Class UnlockableCookingRecipeSO | Harvest Grove code documentation",
    "keywords": "Class UnlockableCookingRecipeSO Inheritance object UnlockableCookingRecipeSO Namespace: Systems.Cooking Assembly: cs.temp.dll.dll Syntax public class UnlockableCookingRecipeSO : InventoryItemData Constructors UnlockableCookingRecipeSO() Declaration public UnlockableCookingRecipeSO()"
  },
  "api/Systems.Cooking.UnlockedRecipesSO.html": {
    "href": "api/Systems.Cooking.UnlockedRecipesSO.html",
    "title": "Class UnlockedRecipesSO | Harvest Grove code documentation",
    "keywords": "Class UnlockedRecipesSO Inheritance object UnlockedRecipesSO Implements IResetableSO Namespace: Systems.Cooking Assembly: cs.temp.dll.dll Syntax public class UnlockedRecipesSO : ScriptableObject, IResetableSO Fields UnlockedRecipesList Declaration public List<CookingRecipeSO> UnlockedRecipesList Field Value Type Description List<><CookingRecipeSO> Methods LoadRecipes() Declaration public UniTask LoadRecipes() Returns Type Description UniTask ResetSO() Declaration public void ResetSO() SaveRecipes() Declaration public UniTask SaveRecipes() Returns Type Description UniTask UnlockRandomRecipe() Declaration public bool UnlockRandomRecipe() Returns Type Description bool Implements IResetableSO"
  },
  "api/Systems.Crafting.CraftingRecipes.CraftingRecipeSO.html": {
    "href": "api/Systems.Crafting.CraftingRecipes.CraftingRecipeSO.html",
    "title": "Class CraftingRecipeSO | Harvest Grove code documentation",
    "keywords": "Class CraftingRecipeSO Inheritance object CraftingRecipeSO Namespace: Systems.Crafting.CraftingRecipes Assembly: cs.temp.dll.dll Syntax public class CraftingRecipeSO : ScriptableObject Fields CraftedResult Declaration public InventoryItemData CraftedResult Field Value Type Description InventoryItemData MaterialsRequiredList Declaration public List<NeededMaterial> MaterialsRequiredList Field Value Type Description List<><NeededMaterial> OtherCraftedResult Declaration public List<InventoryItemData> OtherCraftedResult Field Value Type Description List<><InventoryItemData> ResultAmount Declaration public byte ResultAmount Field Value Type Description byte"
  },
  "api/Systems.Crafting.CraftingRecipes.html": {
    "href": "api/Systems.Crafting.CraftingRecipes.html",
    "title": "Namespace Systems.Crafting.CraftingRecipes | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Crafting.CraftingRecipes Classes CraftingRecipeSO Structs NeededMaterial"
  },
  "api/Systems.Crafting.CraftingRecipes.NeededMaterial.html": {
    "href": "api/Systems.Crafting.CraftingRecipes.NeededMaterial.html",
    "title": "Struct NeededMaterial | Harvest Grove code documentation",
    "keywords": "Struct NeededMaterial Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Systems.Crafting.CraftingRecipes Assembly: cs.temp.dll.dll Syntax public struct NeededMaterial Fields Amount Declaration public byte Amount Field Value Type Description byte MaterialType Declaration public MaterialType MaterialType Field Value Type Description MaterialType NeededItem Declaration public InventoryItemData NeededItem Field Value Type Description InventoryItemData"
  },
  "api/Systems.Crafting.CraftingSystem.html": {
    "href": "api/Systems.Crafting.CraftingSystem.html",
    "title": "Class CraftingSystem | Harvest Grove code documentation",
    "keywords": "Class CraftingSystem Inheritance object CraftingSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Crafting Assembly: cs.temp.dll.dll Syntax public static class CraftingSystem Fields OnInventoryFull Declaration public static Action OnInventoryFull Field Value Type Description Action OnItemCrafted Declaration public static UnityAction OnItemCrafted Field Value Type Description UnityAction Methods CanBeCrafted(List<NeededMaterial>, BackpackInventory, HotBarInventory) Check if the item can be crafted based on needed materials Declaration public static bool CanBeCrafted(List<NeededMaterial> neededMaterials, BackpackInventory backpackInventory, HotBarInventory hotBarInventory) Parameters Type Name Description List<><NeededMaterial> neededMaterials List with needed materials BackpackInventory backpackInventory HotBarInventory hotBarInventory Returns Type Description bool True if can be crafted, false if cannot be crafted Craft(CraftingRecipeSO, BackpackInventory, HotBarInventory, Transform) Craft the recipe Declaration public static void Craft(CraftingRecipeSO recipe, BackpackInventory backpackInventory, HotBarInventory hotBarInventory, Transform playerTransform) Parameters Type Name Description CraftingRecipeSO recipe Which recipe to craft BackpackInventory backpackInventory HotBarInventory hotBarInventory Transform playerTransform DecreaseItem(InventoryItemData, int, BackpackInventory, HotBarInventory) Decreases the item by the amount Declaration public static void DecreaseItem(InventoryItemData item, int amount, BackpackInventory backpackInventory, HotBarInventory hotBarInventory) Parameters Type Name Description InventoryItemData item What item int amount The amount BackpackInventory backpackInventory HotBarInventory hotBarInventory DecreaseItem(MaterialType, int, BackpackInventory, HotBarInventory) Decreases the material type by the amount Declaration public static void DecreaseItem(MaterialType item, int amount, BackpackInventory backpackInventory, HotBarInventory hotBarInventory) Parameters Type Name Description MaterialType item What type int amount The amount BackpackInventory backpackInventory HotBarInventory hotBarInventory ItemAmountInInventory(InventoryItemData, BackpackInventory, HotBarInventory) Checks the big and quick inventory if they contains the item and what amount Declaration public static int ItemAmountInInventory(InventoryItemData item, BackpackInventory backpackInventory, HotBarInventory hotBarInventory) Parameters Type Name Description InventoryItemData item Which item BackpackInventory backpackInventory HotBarInventory hotBarInventory Returns Type Description int Item amount in both inventories ItemAmountInInventory(MaterialType, BackpackInventory, HotBarInventory) Checks the big and quick inventory if they contains the material amount and what amount Declaration public static int ItemAmountInInventory(MaterialType materialType, BackpackInventory backpackInventory, HotBarInventory hotBarInventory) Parameters Type Name Description MaterialType materialType BackpackInventory backpackInventory HotBarInventory hotBarInventory Returns Type Description int Item amount in both inventories"
  },
  "api/Systems.Crafting.html": {
    "href": "api/Systems.Crafting.html",
    "title": "Namespace Systems.Crafting | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Crafting Classes CraftingSystem"
  },
  "api/Systems.Crafting.Sections.CraftingSectionListSO.html": {
    "href": "api/Systems.Crafting.Sections.CraftingSectionListSO.html",
    "title": "Class CraftingSectionListSO | Harvest Grove code documentation",
    "keywords": "Class CraftingSectionListSO Inheritance object CraftingSectionListSO Namespace: Systems.Crafting.Sections Assembly: cs.temp.dll.dll Syntax public class CraftingSectionListSO : ScriptableObject Fields Sections Declaration public List<CraftingSectionSO> Sections Field Value Type Description List<><CraftingSectionSO> Methods GetRecipesContaining(string) Loops over all sections and returns all recipes containing the keyword Declaration public List<CraftingRecipeSO> GetRecipesContaining(string keyword) Parameters Type Name Description string keyword The keyword Returns Type Description List<><CraftingRecipeSO> All recipes containing the keyword"
  },
  "api/Systems.Crafting.Sections.CraftingSectionSO.html": {
    "href": "api/Systems.Crafting.Sections.CraftingSectionSO.html",
    "title": "Class CraftingSectionSO | Harvest Grove code documentation",
    "keywords": "Class CraftingSectionSO Scriptabel object which is holding section and its recipes Inheritance object CraftingSectionSO Namespace: Systems.Crafting.Sections Assembly: cs.temp.dll.dll Syntax public class CraftingSectionSO : ScriptableObject Fields Recipes Declaration public List<CraftingRecipeSO> Recipes Field Value Type Description List<><CraftingRecipeSO> SectionType Declaration public CraftingSectionEnum SectionType Field Value Type Description CraftingSectionEnum Properties SectionName Declaration public LocalizedString SectionName { get; } Property Value Type Description LocalizedString Methods GetRecipesContaining(string) Loops over all recipes and returns all recipes containing the keyword Declaration public IEnumerable<CraftingRecipeSO> GetRecipesContaining(string keyword) Parameters Type Name Description string keyword Returns Type Description IEnumerable<><CraftingRecipeSO>"
  },
  "api/Systems.Crafting.Sections.html": {
    "href": "api/Systems.Crafting.Sections.html",
    "title": "Namespace Systems.Crafting.Sections | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Crafting.Sections Classes CraftingSectionListSO CraftingSectionSO Scriptabel object which is holding section and its recipes"
  },
  "api/Systems.Crafting.UI.CraftingMaterial.html": {
    "href": "api/Systems.Crafting.UI.CraftingMaterial.html",
    "title": "Class CraftingMaterial | Harvest Grove code documentation",
    "keywords": "Class CraftingMaterial Inheritance object CraftingMaterial Namespace: Systems.Crafting.UI Assembly: cs.temp.dll.dll Syntax public class CraftingMaterial : MonoBehaviour Methods AnyMaterial(CraftingRecipeSO, int) Declaration public Coroutine AnyMaterial(CraftingRecipeSO recipe, int index) Parameters Type Name Description CraftingRecipeSO recipe int index Returns Type Description Coroutine DisableObject() Declaration public void DisableObject() NormalMaterial(CraftingRecipeSO, int) Declaration public void NormalMaterial(CraftingRecipeSO recipe, int index) Parameters Type Name Description CraftingRecipeSO recipe int index"
  },
  "api/Systems.Crafting.UI.CraftingSearch.html": {
    "href": "api/Systems.Crafting.UI.CraftingSearch.html",
    "title": "Class CraftingSearch | Harvest Grove code documentation",
    "keywords": "Class CraftingSearch Inheritance object CraftingSearch Namespace: Systems.Crafting.UI Assembly: cs.temp.dll.dll Syntax public class CraftingSearch : MonoBehaviour Fields OnEmptySearch Declaration public static Action OnEmptySearch Field Value Type Description Action OnResetCraftingSearch Declaration public static Action OnResetCraftingSearch Field Value Type Description Action OnSearchRecipe Called whenever we search (i.e. we type a new letter) Declaration public static Action OnSearchRecipe Field Value Type Description Action OnUnselectSection Declaration public static Action OnUnselectSection Field Value Type Description Action Methods Construct(InputsMap) Declaration public void Construct(InputsMap inputsMap) Parameters Type Name Description InputsMap inputsMap SearchRecipes(string) Search the recipes - this method should be put onto the input field Declaration public void SearchRecipes(string keyword) Parameters Type Name Description string keyword SearchSelected() Declaration public void SearchSelected() SearchUnselected() Declaration public void SearchUnselected() UnselectSection() Declaration public void UnselectSection()"
  },
  "api/Systems.Crafting.UI.CraftingSectionButton.html": {
    "href": "api/Systems.Crafting.UI.CraftingSectionButton.html",
    "title": "Class CraftingSectionButton | Harvest Grove code documentation",
    "keywords": "Class CraftingSectionButton Inheritance object CraftingSectionButton Namespace: Systems.Crafting.UI Assembly: cs.temp.dll.dll Syntax public class CraftingSectionButton : MonoBehaviour Fields OnSectionButtonClicked Declaration public static Action<CraftingSectionSO, Button> OnSectionButtonClicked Field Value Type Description Action<, ><CraftingSectionSO, Button>"
  },
  "api/Systems.Crafting.UI.CraftingSectionEnum.html": {
    "href": "api/Systems.Crafting.UI.CraftingSectionEnum.html",
    "title": "Enum CraftingSectionEnum | Harvest Grove code documentation",
    "keywords": "Enum CraftingSectionEnum Sections of the menu Namespace: Systems.Crafting.UI Assembly: cs.temp.dll.dll Syntax public enum CraftingSectionEnum Fields Name Description Animals Books Chests CropSeeds FruitSeeds Materials Other Tools"
  },
  "api/Systems.Crafting.UI.CraftingUI.html": {
    "href": "api/Systems.Crafting.UI.CraftingUI.html",
    "title": "Class CraftingUI | Harvest Grove code documentation",
    "keywords": "Class CraftingUI Inheritance object CraftingUI Namespace: Systems.Crafting.UI Assembly: cs.temp.dll.dll Syntax public class CraftingUI : LocalizeUI Fields CanOpenCrafting Declaration public static bool CanOpenCrafting Field Value Type Description bool IsCraftingOpened Declaration public static bool IsCraftingOpened Field Value Type Description bool OnShowRecipesOpened Declaration public static Action<CraftingSectionSO> OnShowRecipesOpened Field Value Type Description Action<><CraftingSectionSO> Methods CloseCrafting() Close crafting and reset the UI Declaration public void CloseCrafting() OnDisable() Declaration public override void OnDisable() OnEnable() Declaration public override void OnEnable() OpenCrafting() Declaration public void OpenCrafting() UpdateUI(Locale) Declaration public override void UpdateUI(Locale locale) Parameters Type Name Description Locale locale"
  },
  "api/Systems.Crafting.UI.html": {
    "href": "api/Systems.Crafting.UI.html",
    "title": "Namespace Systems.Crafting.UI | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Crafting.UI Classes CraftingMaterial CraftingSearch CraftingSectionButton CraftingUI RecipeDetail RecipesLayout Enums CraftingSectionEnum Sections of the menu"
  },
  "api/Systems.Crafting.UI.RecipeDetail.html": {
    "href": "api/Systems.Crafting.UI.RecipeDetail.html",
    "title": "Class RecipeDetail | Harvest Grove code documentation",
    "keywords": "Class RecipeDetail Inheritance object RecipeDetail Namespace: Systems.Crafting.UI Assembly: cs.temp.dll.dll Syntax public class RecipeDetail : MonoBehaviour"
  },
  "api/Systems.Crafting.UI.RecipesLayout.html": {
    "href": "api/Systems.Crafting.UI.RecipesLayout.html",
    "title": "Class RecipesLayout | Harvest Grove code documentation",
    "keywords": "Class RecipesLayout Inheritance object RecipesLayout Namespace: Systems.Crafting.UI Assembly: cs.temp.dll.dll Syntax public class RecipesLayout : MonoBehaviour Fields OnDetailOpened Update the details, constructionSO it shows correct information Declaration public static Action<CraftingRecipeSO> OnDetailOpened Field Value Type Description Action<><CraftingRecipeSO> OnMovedPage Called when player clicked on left/right button Declaration public static Action OnMovedPage Field Value Type Description Action Methods Left() Declaration public void Left() Right() Declaration public void Right()"
  },
  "api/Systems.DayNight.DawnState.html": {
    "href": "api/Systems.DayNight.DawnState.html",
    "title": "Class DawnState | Harvest Grove code documentation",
    "keywords": "Class DawnState Inheritance object DayNightBaseState DawnState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.DayNight Assembly: cs.temp.dll.dll Syntax public class DawnState : DayNightBaseState Methods EnterState(DayAndNightManager) Declaration public override IEnumerator EnterState(DayAndNightManager manager) Parameters Type Name Description DayAndNightManager manager Returns Type Description IEnumerator Overrides DayNightBaseState.EnterState(DayAndNightManager)"
  },
  "api/Systems.DayNight.DayAndNightManager.html": {
    "href": "api/Systems.DayNight.DayAndNightManager.html",
    "title": "Class DayAndNightManager | Harvest Grove code documentation",
    "keywords": "Class DayAndNightManager Inheritance object DayAndNightManager Implements ITaskSavable Namespace: Systems.DayNight Assembly: cs.temp.dll.dll Syntax public class DayAndNightManager : MonoBehaviour, ITaskSavable Fields Dawn Declaration public DawnState Dawn Field Value Type Description DawnState Day Declaration public DayState Day Field Value Type Description DayState Dusk Declaration public DuskState Dusk Field Value Type Description DuskState Night Declaration public NightState Night Field Value Type Description NightState OnSetSunColor Declaration public static Action<Color> OnSetSunColor Field Value Type Description Action<><Color> OnSetTime Declaration public static Action<TimeData> OnSetTime Field Value Type Description Action<><TimeData> Properties ElapsedMinutes Declaration public float ElapsedMinutes { get; } Property Value Type Description float GetDayColor Declaration public Color GetDayColor { get; } Property Value Type Description Color GetNightColor Declaration public Color GetNightColor { get; } Property Value Type Description Color GetSun Declaration public Light2D GetSun { get; } Property Value Type Description Light2D MinuteDuration Declaration public float MinuteDuration { get; } Property Value Type Description float Priority Declaration public int Priority { get; } Property Value Type Description int Methods Construct(IManagerData, IPlayerData, ITileMapService) Declaration public void Construct(IManagerData managerData, IPlayerData playerData, ITileMapService tilemapService) Parameters Type Name Description IManagerData managerData IPlayerData playerData ITileMapService tilemapService Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask SwitchState(DayNightBaseState) Declaration public void SwitchState(DayNightBaseState state) Parameters Type Name Description DayNightBaseState state Implements ITaskSavable"
  },
  "api/Systems.DayNight.DayNightBaseState.html": {
    "href": "api/Systems.DayNight.DayNightBaseState.html",
    "title": "Class DayNightBaseState | Harvest Grove code documentation",
    "keywords": "Class DayNightBaseState Inheritance object DayNightBaseState DawnState DayState DuskState NightState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.DayNight Assembly: cs.temp.dll.dll Syntax public abstract class DayNightBaseState Methods EnterState(DayAndNightManager) Declaration public abstract IEnumerator EnterState(DayAndNightManager manager) Parameters Type Name Description DayAndNightManager manager Returns Type Description IEnumerator"
  },
  "api/Systems.DayNight.DayState.html": {
    "href": "api/Systems.DayNight.DayState.html",
    "title": "Class DayState | Harvest Grove code documentation",
    "keywords": "Class DayState Inheritance object DayNightBaseState DayState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.DayNight Assembly: cs.temp.dll.dll Syntax public class DayState : DayNightBaseState Methods EnterState(DayAndNightManager) Declaration public override IEnumerator EnterState(DayAndNightManager manager) Parameters Type Name Description DayAndNightManager manager Returns Type Description IEnumerator Overrides DayNightBaseState.EnterState(DayAndNightManager)"
  },
  "api/Systems.DayNight.DuskState.html": {
    "href": "api/Systems.DayNight.DuskState.html",
    "title": "Class DuskState | Harvest Grove code documentation",
    "keywords": "Class DuskState Inheritance object DayNightBaseState DuskState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.DayNight Assembly: cs.temp.dll.dll Syntax public class DuskState : DayNightBaseState Methods EnterState(DayAndNightManager) Declaration public override IEnumerator EnterState(DayAndNightManager manager) Parameters Type Name Description DayAndNightManager manager Returns Type Description IEnumerator Overrides DayNightBaseState.EnterState(DayAndNightManager)"
  },
  "api/Systems.DayNight.html": {
    "href": "api/Systems.DayNight.html",
    "title": "Namespace Systems.DayNight | Harvest Grove code documentation",
    "keywords": "Namespace Systems.DayNight Classes DawnState DayAndNightManager DayNightBaseState DayState DuskState NightState"
  },
  "api/Systems.DayNight.NightState.html": {
    "href": "api/Systems.DayNight.NightState.html",
    "title": "Class NightState | Harvest Grove code documentation",
    "keywords": "Class NightState Inheritance object DayNightBaseState NightState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.DayNight Assembly: cs.temp.dll.dll Syntax public class NightState : DayNightBaseState Methods EnterState(DayAndNightManager) Declaration public override IEnumerator EnterState(DayAndNightManager manager) Parameters Type Name Description DayAndNightManager manager Returns Type Description IEnumerator Overrides DayNightBaseState.EnterState(DayAndNightManager)"
  },
  "api/Systems.Health.AttackedState.html": {
    "href": "api/Systems.Health.AttackedState.html",
    "title": "Class AttackedState | Harvest Grove code documentation",
    "keywords": "Class AttackedState Inheritance object AttackedState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Health Assembly: cs.temp.dll.dll Syntax public class AttackedState Constructors AttackedState(PlayerHealth) Declaration public AttackedState(PlayerHealth playerHealth) Parameters Type Name Description PlayerHealth playerHealth Fields OnShowText Declaration public static Action<bool> OnShowText Field Value Type Description Action<><bool> Methods InAttackMode(float, InputAction) Declaration public UniTask InAttackMode(float attackModeTime, InputAction pauseAction) Parameters Type Name Description float attackModeTime InputAction pauseAction Returns Type Description UniTask"
  },
  "api/Systems.Health.AttackedText.html": {
    "href": "api/Systems.Health.AttackedText.html",
    "title": "Class AttackedText | Harvest Grove code documentation",
    "keywords": "Class AttackedText Inheritance object AttackedText Namespace: Systems.Health Assembly: cs.temp.dll.dll Syntax public class AttackedText : MonoBehaviour"
  },
  "api/Systems.Health.HealthDisplay.html": {
    "href": "api/Systems.Health.HealthDisplay.html",
    "title": "Class HealthDisplay | Harvest Grove code documentation",
    "keywords": "Class HealthDisplay Inheritance object HealthDisplay Namespace: Systems.Health Assembly: cs.temp.dll.dll Syntax public class HealthDisplay : MonoBehaviour Fields OnUpdateHealthDisplay Declaration public static Action<int, int> OnUpdateHealthDisplay Field Value Type Description Action<, ><int, int>"
  },
  "api/Systems.Health.html": {
    "href": "api/Systems.Health.html",
    "title": "Namespace Systems.Health | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Health Classes AttackedState AttackedText HealthDisplay PlayerHealth"
  },
  "api/Systems.Health.PlayerHealth.html": {
    "href": "api/Systems.Health.PlayerHealth.html",
    "title": "Class PlayerHealth | Harvest Grove code documentation",
    "keywords": "Class PlayerHealth Inheritance object PlayerHealth Implements ITaskSavable Namespace: Systems.Health Assembly: cs.temp.dll.dll Syntax public class PlayerHealth : MonoBehaviour, ITaskSavable Fields OnDied Declaration public static Action OnDied Field Value Type Description Action OnTakeDamage Declaration public static Func<int, bool> OnTakeDamage Field Value Type Description Func<, ><int, bool> OnTakeDamageAndThrowAway Declaration public static Action<int, Vector2> OnTakeDamageAndThrowAway Field Value Type Description Action<, ><int, Vector2> Properties CurrentHealth Declaration public int CurrentHealth { get; } Property Value Type Description int IsDead Declaration public bool IsDead { get; set; } Property Value Type Description bool IsInAttackState Declaration public bool IsInAttackState { get; set; } Property Value Type Description bool Priority Declaration public int Priority { get; } Property Value Type Description int Methods Construct(ITileMapService, IPlayerData, InputsMap, IManagerData) Declaration public void Construct(ITileMapService tilemapService, IPlayerData playerData, InputsMap inputsMap, IManagerData managerData) Parameters Type Name Description ITileMapService tilemapService IPlayerData playerData InputsMap inputsMap IManagerData managerData Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Implements ITaskSavable"
  },
  "api/Systems.Interaction.html": {
    "href": "api/Systems.Interaction.html",
    "title": "Namespace Systems.Interaction | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Interaction Classes InteractionСontroller Interactor Interfaces IInteractive"
  },
  "api/Systems.Interaction.IInteractive.html": {
    "href": "api/Systems.Interaction.IInteractive.html",
    "title": "Interface IInteractive | Harvest Grove code documentation",
    "keywords": "Interface IInteractive Namespace: Systems.Interaction Assembly: cs.temp.dll.dll Syntax public interface IInteractive Methods EndInteraction() Declaration void EndInteraction() StartInteraction() Declaration void StartInteraction()"
  },
  "api/Systems.Interaction.InteractionСontroller.html": {
    "href": "api/Systems.Interaction.InteractionСontroller.html",
    "title": "Class InteractionСontroller | Harvest Grove code documentation",
    "keywords": "Class InteractionСontroller Inheritance object InteractionСontroller Implements IInteractive Namespace: Systems.Interaction Assembly: cs.temp.dll.dll Syntax public abstract class InteractionСontroller : MonoBehaviour, IInteractive Fields BackpackAction Declaration protected InputAction BackpackAction Field Value Type Description InputAction PauseAction Declaration protected InputAction PauseAction Field Value Type Description InputAction Methods Construct(InputsMap) Declaration public void Construct(InputsMap inputsMap) Parameters Type Name Description InputsMap inputsMap EndInteraction() Declaration public virtual void EndInteraction() Interact(CallbackContext) Declaration protected abstract void Interact(InputAction.CallbackContext _) Parameters Type Name Description InputAction.CallbackContext _ OnTriggerEnter2D(Collider2D) Declaration protected virtual void OnTriggerEnter2D(Collider2D other) Parameters Type Name Description Collider2D other OnTriggerExit2D(Collider2D) Declaration protected virtual void OnTriggerExit2D(Collider2D other) Parameters Type Name Description Collider2D other SetInputAction(InputAction) Declaration protected void SetInputAction(InputAction inputAction) Parameters Type Name Description InputAction inputAction StartInteraction() Declaration public virtual void StartInteraction() Implements IInteractive"
  },
  "api/Systems.Interaction.Interactor.html": {
    "href": "api/Systems.Interaction.Interactor.html",
    "title": "Class Interactor | Harvest Grove code documentation",
    "keywords": "Class Interactor Inheritance object Interactor Namespace: Systems.Interaction Assembly: cs.temp.dll.dll Syntax public class Interactor : MonoBehaviour Properties IsStartedInteracting Declaration public static bool IsStartedInteracting { get; } Property Value Type Description bool"
  },
  "api/Systems.Inventory.Chests.Chest.html": {
    "href": "api/Systems.Inventory.Chests.Chest.html",
    "title": "Class Chest | Harvest Grove code documentation",
    "keywords": "Class Chest Inheritance object InventoryHolder Chest Implements IInteractive ICustomDestroyable Inherited Members InventoryHolder.inventorySize InventoryHolder.OnDynamicInventoryDisplayRequested Namespace: Systems.Inventory.Chests Assembly: cs.temp.dll.dll Syntax public class Chest : InventoryHolder, IInteractive, ICustomDestroyable Fields MoveInventories Declaration public static Action<bool> MoveInventories Field Value Type Description Action<><bool> Properties ChestID Declaration public ushort ChestID { get; } Property Value Type Description ushort ChestInventory Declaration public Inventory ChestInventory { get; } Property Value Type Description Inventory Methods Construct(IGameData, IManagerData, InputsMap) Declaration public void Construct(IGameData gameData, IManagerData managerData, InputsMap inputsMap) Parameters Type Name Description IGameData gameData IManagerData managerData InputsMap inputsMap CustromDestroy() Declaration public void CustromDestroy() EndInteraction() Declaration public void EndInteraction() SetChest(BuildingSO, List<InventorySlot>) Declaration public void SetChest(BuildingSO buildingSO, List<InventorySlot> items) Parameters Type Name Description BuildingSO buildingSO List<><InventorySlot> items SetChest(BuildingSO) This method is called when the chest is placed on the map. It assigns the most important info Declaration public void SetChest(BuildingSO buildingSO) Parameters Type Name Description BuildingSO buildingSO StartInteraction() Declaration public void StartInteraction() Implements IInteractive ICustomDestroyable"
  },
  "api/Systems.Inventory.Chests.html": {
    "href": "api/Systems.Inventory.Chests.html",
    "title": "Namespace Systems.Inventory.Chests | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory.Chests Classes Chest"
  },
  "api/Systems.Inventory.Collectable.Collectable.html": {
    "href": "api/Systems.Inventory.Collectable.Collectable.html",
    "title": "Class Collectable | Harvest Grove code documentation",
    "keywords": "Class Collectable Class that handles when the player picks up an item. Assign it to the item drop prefab. Inheritance object Collectable Namespace: Systems.Inventory.Collectable Assembly: cs.temp.dll.dll Syntax public class Collectable : MonoBehaviour Properties CurrentLifeTime Declaration public sbyte CurrentLifeTime { get; set; } Property Value Type Description sbyte ID Declaration public Guid ID { get; set; } Property Value Type Description Guid ItemData Declaration public InventoryItemData ItemData { get; set; } Property Value Type Description InventoryItemData StackAmount Declaration public int StackAmount { get; set; } Property Value Type Description int ToolInstance Declaration public ToolInstance ToolInstance { get; set; } Property Value Type Description ToolInstance Methods Construct(IInventoryService, IOtherData, InputsMap) Declaration public void Construct(IInventoryService inventoryService, IOtherData otherData, InputsMap inputsMap) Parameters Type Name Description IInventoryService inventoryService IOtherData otherData InputsMap inputsMap"
  },
  "api/Systems.Inventory.Collectable.CollectableHelper.html": {
    "href": "api/Systems.Inventory.Collectable.CollectableHelper.html",
    "title": "Class CollectableHelper | Harvest Grove code documentation",
    "keywords": "Class CollectableHelper Inheritance object CollectableHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Inventory.Collectable Assembly: cs.temp.dll.dll Syntax public static class CollectableHelper Methods GetMainDrop(KeyValuePair<InventoryItemData, List<Collectable>>, int) Checks the object with the highest lifetime (i.e. oldest). If the objects have the same lifetime, then it chooses one totally random. Declaration public static Collectable GetMainDrop(KeyValuePair<InventoryItemData, List<Collectable>> drops, int currentItemID) Parameters Type Name Description KeyValuePair<, ><InventoryItemData, List<><Collectable>> drops A list with similar drops int currentItemID Returns Type Description Collectable The oldest drop. GetSimilarItems(Collider2D[]) Converts an array of Collider2D to a List of ItemPickUp, then returns a dictionary of grouped items by their ItemData. Declaration public static Dictionary<InventoryItemData, List<Collectable>> GetSimilarItems(Collider2D[] colliders) Parameters Type Name Description Collider2D[] colliders The colliders of the drops to group Returns Type Description Dictionary<, ><InventoryItemData, List<><Collectable>> The grouped items"
  },
  "api/Systems.Inventory.Collectable.html": {
    "href": "api/Systems.Inventory.Collectable.html",
    "title": "Namespace Systems.Inventory.Collectable | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory.Collectable Classes Collectable Class that handles when the player picks up an item. Assign it to the item drop prefab. CollectableHelper"
  },
  "api/Systems.Inventory.Displaying.html": {
    "href": "api/Systems.Inventory.Displaying.html",
    "title": "Namespace Systems.Inventory.Displaying | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory.Displaying Classes ItemInfoDisplay Class responsible for updating the position of the dragging slot. Assign it to the dragging slot. ItemPopupDisplay Enums ItemPopupDisplayEnum"
  },
  "api/Systems.Inventory.Displaying.ItemInfoDisplay.html": {
    "href": "api/Systems.Inventory.Displaying.ItemInfoDisplay.html",
    "title": "Class ItemInfoDisplay | Harvest Grove code documentation",
    "keywords": "Class ItemInfoDisplay Class responsible for updating the position of the dragging slot. Assign it to the dragging slot. Inheritance object ItemInfoDisplay Namespace: Systems.Inventory.Displaying Assembly: cs.temp.dll.dll Syntax public class ItemInfoDisplay : MonoBehaviour Methods StartDisplay(InventorySlot) Starts to update the dragging slot position Declaration public void StartDisplay(InventorySlot slot) Parameters Type Name Description InventorySlot slot StopDisplay() Stops to update the dragging slot position Declaration public void StopDisplay()"
  },
  "api/Systems.Inventory.Displaying.ItemPopupDisplay.html": {
    "href": "api/Systems.Inventory.Displaying.ItemPopupDisplay.html",
    "title": "Class ItemPopupDisplay | Harvest Grove code documentation",
    "keywords": "Class ItemPopupDisplay Inheritance object ItemPopupDisplay Namespace: Systems.Inventory.Displaying Assembly: cs.temp.dll.dll Syntax public class ItemPopupDisplay : MonoBehaviour Fields OnShowItemName Declaration public static Action<string, ItemPopupDisplayEnum> OnShowItemName Field Value Type Description Action<, ><string, ItemPopupDisplayEnum>"
  },
  "api/Systems.Inventory.Displaying.ItemPopupDisplayEnum.html": {
    "href": "api/Systems.Inventory.Displaying.ItemPopupDisplayEnum.html",
    "title": "Enum ItemPopupDisplayEnum | Harvest Grove code documentation",
    "keywords": "Enum ItemPopupDisplayEnum Namespace: Systems.Inventory.Displaying Assembly: cs.temp.dll.dll Syntax public enum ItemPopupDisplayEnum Fields Name Description Collected Crafted"
  },
  "api/Systems.Inventory.Hotbar.Hotbar.html": {
    "href": "api/Systems.Inventory.Hotbar.Hotbar.html",
    "title": "Class Hotbar | Harvest Grove code documentation",
    "keywords": "Class Hotbar Inheritance object Hotbar Namespace: Systems.Inventory.Hotbar Assembly: cs.temp.dll.dll Syntax public class Hotbar : MonoBehaviour Properties Building Declaration public BuildingManager Building { get; } Property Value Type Description BuildingManager CurrentSlotPosition Used only when the player is in range of the animal housing Declaration public short CurrentSlotPosition { get; } Property Value Type Description short HotbarSlots Declaration public InventorySlotUI[] HotbarSlots { get; } Property Value Type Description InventorySlotUI[] Methods Construct(IInventoryService, IManagerData, IGameData, InputsMap) Declaration public void Construct(IInventoryService inventoryService, IManagerData managerData, IGameData gameData, InputsMap playerInput) Parameters Type Name Description IInventoryService inventoryService IManagerData managerData IGameData gameData InputsMap playerInput CurrentSlotBackground(bool) When opening a chest inventory, the currently selected slot's highlighting is enabled. Otherwise, when closing the chest inventory, the highlighting for the selected slot is disabled. Declaration public void CurrentSlotBackground(bool isOpeningChest) Parameters Type Name Description bool isOpeningChest If the chest is being opened or closed"
  },
  "api/Systems.Inventory.Hotbar.HotbarEvents.html": {
    "href": "api/Systems.Inventory.Hotbar.HotbarEvents.html",
    "title": "Class HotbarEvents | Harvest Grove code documentation",
    "keywords": "Class HotbarEvents Inheritance object HotbarEvents Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Inventory.Hotbar Assembly: cs.temp.dll.dll Syntax public class HotbarEvents Fields OnBucketType Event raised when a specific type of bucket is used. Declaration public static Action<ToolType> OnBucketType Field Value Type Description Action<><ToolType> OnDisableTool Declaration public static Action OnDisableTool Field Value Type Description Action OnEnableTool Equips the currently selected slot Bool is used to for showing which item is on the position {i.e. triggering text}, if adding item to the inventory, set it to false Declaration public static Action OnEnableTool Field Value Type Description Action OnGetCurrentSlot Declaration public static Func<InventorySlotUI> OnGetCurrentSlot Field Value Type Description Func<><InventorySlotUI> OnSeedPlanted Event raised when a seed with specific id is planted. Declaration public static Action<int> OnSeedPlanted Field Value Type Description Action<><int>"
  },
  "api/Systems.Inventory.Hotbar.html": {
    "href": "api/Systems.Inventory.Hotbar.html",
    "title": "Namespace Systems.Inventory.Hotbar | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory.Hotbar Classes Hotbar HotbarEvents UnlockableItem"
  },
  "api/Systems.Inventory.Hotbar.UnlockableItem.html": {
    "href": "api/Systems.Inventory.Hotbar.UnlockableItem.html",
    "title": "Class UnlockableItem | Harvest Grove code documentation",
    "keywords": "Class UnlockableItem Inheritance object UnlockableItem Implements IToggleable Namespace: Systems.Inventory.Hotbar Assembly: cs.temp.dll.dll Syntax public class UnlockableItem : MonoBehaviour, IToggleable Methods AssignItem(ItemType) Declaration public void AssignItem(ItemType itemType) Parameters Type Name Description ItemType itemType Construct(InputsMap) Declaration public void Construct(InputsMap inputsMap) Parameters Type Name Description InputsMap inputsMap Explicit Interface Implementations IToggleable.Enabled Declaration bool IToggleable.Enabled { get; set; } Returns Type Description bool Implements IToggleable"
  },
  "api/Systems.Inventory.html": {
    "href": "api/Systems.Inventory.html",
    "title": "Namespace Systems.Inventory | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory Classes Inventory Class that contains the inventory data. InventoryHolder InventorySlot ItemDatabaseReadonly ItemDatabaseSO This class holds all the IDs of the items, in order to access them easily later on. Create a ScriptableObject in the Project Tab and drag and drop the items in the list. LoadingInventories SlotUI Structs InventoryAddResult Interfaces IToggleable"
  },
  "api/Systems.Inventory.Inventory.html": {
    "href": "api/Systems.Inventory.Inventory.html",
    "title": "Class Inventory | Harvest Grove code documentation",
    "keywords": "Class Inventory Class that contains the inventory data. Inheritance object Inventory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Inventory Assembly: cs.temp.dll.dll Syntax public class Inventory Constructors Inventory(int) Initializes the inventory with the given size Declaration public Inventory(int size) Parameters Type Name Description int size Fields OnInventorySlotChanged Declaration public UnityAction<InventorySlot> OnInventorySlotChanged Field Value Type Description UnityAction<><InventorySlot> OnItemAddedToInventory Fires when an item is added to the inventory. Declaration public static UnityAction<InventoryItemData, int> OnItemAddedToInventory Field Value Type Description UnityAction<, ><InventoryItemData, int> UpdateQuests Fires in when the quest book is opened Declaration public static UnityAction UpdateQuests Field Value Type Description UnityAction Properties InventorySize Declaration public int InventorySize { get; } Property Value Type Description int InventorySlots Declaration public List<InventorySlot> InventorySlots { get; set; } Property Value Type Description List<><InventorySlot> Methods ClearAllSlots() Declaration public void ClearAllSlots() ContainsItem(InventoryItemData, out List<InventorySlot>) Checks if the inventory contains at least 1 item in the inventory. Declaration public bool ContainsItem(InventoryItemData itemToAdd, out List<InventorySlot> invSlots) Parameters Type Name Description InventoryItemData itemToAdd The item that we are searching for List<><InventorySlot> invSlots The slots to check Returns Type Description bool If the inventory contains a slot with the item ContainsItemAmount(InventoryItemData, int, out List<InventorySlot>) Checks if the inventory contains the item with the requested amount Declaration public bool ContainsItemAmount(InventoryItemData item, int amountToCheck, out List<InventorySlot> invSlots) Parameters Type Name Description InventoryItemData item int amountToCheck List<><InventorySlot> invSlots Returns Type Description bool ContainsItemType(ItemType, out List<InventorySlot>) Checks if the inventory contains at least 1 item of the specified type. Declaration public bool ContainsItemType(ItemType itemType, out List<InventorySlot> invSlots) Parameters Type Name Description ItemType itemType The itemtype that we are searching for List<><InventorySlot> invSlots The slots to check Returns Type Description bool ContainsMaterial(MaterialType, out List<InventorySlot>) Checks if the inventory contains at least 1 item in the inventory. Declaration public bool ContainsMaterial(MaterialType materialType, out List<InventorySlot> invSlots) Parameters Type Name Description MaterialType materialType The material type that we are searching for List<><InventorySlot> invSlots The slots to check Returns Type Description bool If the inventory contains a slot with the item GetAllSlotsWithItemType(ItemType) Gets all slots that contain the specified item type. Declaration public List<InventorySlot> GetAllSlotsWithItemType(ItemType itemType) Parameters Type Name Description ItemType itemType The item type to search for. Returns Type Description List<><InventorySlot> A list of inventory slots that contain the specified item type. HasFreeSlot(out InventorySlot) Checks if the inventory has at least 1 free slot. Declaration public bool HasFreeSlot(out InventorySlot freeSlot) Parameters Type Name Description InventorySlot freeSlot Output of the free slot Returns Type Description bool RemoveItemFromInventory(InventoryItemData, int) Declaration public bool RemoveItemFromInventory(InventoryItemData item, int amount) Parameters Type Name Description InventoryItemData item int amount Returns Type Description bool ReplaceItemInInventoryAtPosition(InventoryItemData, int, int) Replaces an item in the inventory at a specific position. Declaration public bool ReplaceItemInInventoryAtPosition(InventoryItemData newItem, int amount, int position) Parameters Type Name Description InventoryItemData newItem The new item to be placed in the inventory. int amount The quantity of the new item to be placed. int position The position in the inventory where the item will be placed. Returns Type Description bool Returns true if the item was successfully replaced, otherwise false. SortInventory() Sorts the inventory Declaration public void SortInventory() TryAddToInventory(InventoryItemData, int) Attempts to add a specified item and quantity to the inventory. Declaration public InventoryAddResult TryAddToInventory(InventoryItemData itemToAdd, int amountToAdd) Parameters Type Name Description InventoryItemData itemToAdd The item to be added to the inventory. int amountToAdd The quantity of the item to be added. Returns Type Description InventoryAddResult An InventoryAddResult object that indicates the success of the operation and the remaining quantity of the item that could not be added due to insufficient space. For example, if 4 items are to be added but there is only space for 3, the remaining quantity will be 1. TryAddToInventory(ToolInstance, int) Declaration public InventoryAddResult TryAddToInventory(ToolInstance toolInstance, int amountToAdd) Parameters Type Name Description ToolInstance toolInstance int amountToAdd Returns Type Description InventoryAddResult"
  },
  "api/Systems.Inventory.InventoryAddResult.html": {
    "href": "api/Systems.Inventory.InventoryAddResult.html",
    "title": "Struct InventoryAddResult | Harvest Grove code documentation",
    "keywords": "Struct InventoryAddResult Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Systems.Inventory Assembly: cs.temp.dll.dll Syntax public struct InventoryAddResult Properties IsSuccessful Declaration public bool IsSuccessful { readonly get; set; } Property Value Type Description bool RemainingItems Declaration public int RemainingItems { readonly get; set; } Property Value Type Description int"
  },
  "api/Systems.Inventory.InventoryHolder.html": {
    "href": "api/Systems.Inventory.InventoryHolder.html",
    "title": "Class InventoryHolder | Harvest Grove code documentation",
    "keywords": "Class InventoryHolder Inheritance object InventoryHolder Chest BackpackInventory HotBarInventory Namespace: Systems.Inventory Assembly: cs.temp.dll.dll Syntax public abstract class InventoryHolder : MonoBehaviour Fields inventorySize Declaration protected int inventorySize Field Value Type Description int OnDynamicInventoryDisplayRequested Event triggered when a dynamic inventory display is requested. Declaration public static Action<Inventory, bool, bool> OnDynamicInventoryDisplayRequested Field Value Type Description Action<, , ><Inventory, bool, bool>"
  },
  "api/Systems.Inventory.InventorySlot.html": {
    "href": "api/Systems.Inventory.InventorySlot.html",
    "title": "Class InventorySlot | Harvest Grove code documentation",
    "keywords": "Class InventorySlot Inheritance object InventorySlot Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Inventory Assembly: cs.temp.dll.dll Syntax [Serializable] public class InventorySlot Constructors InventorySlot() Initializes an empty slot Declaration public InventorySlot() InventorySlot(InventoryItemData, int, ToolInstance) Declaration public InventorySlot(InventoryItemData source, int amount, ToolInstance tool) Parameters Type Name Description InventoryItemData source int amount ToolInstance tool InventorySlot(InventoryItemData, int) Initializes the slot by the given data Declaration public InventorySlot(InventoryItemData source, int amount) Parameters Type Name Description InventoryItemData source The item to initialize with the slot int amount Amount to put in the slot Properties ItemData Declaration public InventoryItemData ItemData { get; } Property Value Type Description InventoryItemData StackSize Declaration public int StackSize { get; } Property Value Type Description int ToolInstance Declaration public ToolInstance ToolInstance { get; set; } Property Value Type Description ToolInstance Methods AddItemToStack(int, bool) Increases the quantity of items in the slot by a specified amount. Declaration public void AddItemToStack(int amountToAdd, bool fireEvent = true) Parameters Type Name Description int amountToAdd The quantity of items to be added to the slot. bool fireEvent ClearSlot(Inventory) Clears the slot Declaration public void ClearSlot(Inventory inventory = null) Parameters Type Name Description Inventory inventory IsSlotValid(ItemType) Checks if the given item can be placed inside the slot Declaration public bool IsSlotValid(ItemType itemType) Parameters Type Name Description ItemType itemType The item type Returns Type Description bool If the item can be added MoveItemToSlot(InventorySlot) Assigns an item to a slot by stacking if they're the same, or swapping if they're not Declaration public void MoveItemToSlot(InventorySlot invSlot) Parameters Type Name Description InventorySlot invSlot The slot to assign the item to RemoveFromStack(int) Removes a certain amount from the stack Declaration public bool RemoveFromStack(int amountToRemove) Parameters Type Name Description int amountToRemove The amount to remove Returns Type Description bool If the slot has been emptied RoomLeftInStack(int, out int) Checks if the slot has still space for other items Declaration public bool RoomLeftInStack(int amountToAdd, out int remainingAmount) Parameters Type Name Description int amountToAdd Amount to add int remainingAmount Remaining amount if the stack size is full Returns Type Description bool If there's still space in the inventory RoomLeftInStack(int) Checks if the slot has still space for other items Declaration public bool RoomLeftInStack(int amountToAdd) Parameters Type Name Description int amountToAdd The amount to add Returns Type Description bool If there's still space in the inventory SplitStack(out InventorySlot) Splits the quantity of items in the slot. Declaration public bool SplitStack(out InventorySlot slotSplit) Parameters Type Name Description InventorySlot slotSplit The split slot Returns Type Description bool If it has been split UpdateInventorySlot(InventorySlot, InventoryItemData, int, Inventory) Updates the current inventory slot. Also triggers an event to notify of the inventory slot change. Declaration public void UpdateInventorySlot(InventorySlot updatedSlot, InventoryItemData newItemData, int newStackSize, Inventory inventory = null) Parameters Type Name Description InventorySlot updatedSlot The new data for the inventory slot. InventoryItemData newItemData The new item data for the inventory slot. int newStackSize The new stack size for the inventory slot. Inventory inventory Optional: the inventory object tied to this inventory slot. If provided, its OnInventorySlotChanged event will be invoked. UpdateInventorySlot(InventorySlot, ToolInstance, int, Inventory) Updates the current inventory slot with the provided item data, quantity, and tool instance. Also triggers an event to notify of the inventory slot change. Declaration public void UpdateInventorySlot(InventorySlot updatedSlot, ToolInstance toolInstance, int newStackSize, Inventory inventory = null) Parameters Type Name Description InventorySlot updatedSlot The updated slot ToolInstance toolInstance The ToolInstance object associated with the inventory slot. int newStackSize The new stack size for the inventory slot. Inventory inventory A reference to the Inventory object relating to the inventory slot."
  },
  "api/Systems.Inventory.ItemDatabaseReadonly.html": {
    "href": "api/Systems.Inventory.ItemDatabaseReadonly.html",
    "title": "Class ItemDatabaseReadonly | Harvest Grove code documentation",
    "keywords": "Class ItemDatabaseReadonly Inheritance object ItemDatabaseReadonly Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Inventory Assembly: cs.temp.dll.dll Syntax public static class ItemDatabaseReadonly Properties Foods Declaration public static List<InventoryItemData> Foods { get; set; } Property Value Type Description List<><InventoryItemData> Items Declaration public static InventoryItemData[] Items { get; set; } Property Value Type Description InventoryItemData[] Utilities Declaration public static List<InventoryItemData> Utilities { get; set; } Property Value Type Description List<><InventoryItemData> Methods LoadItemDatabaseReadonly(InventoryItemData[]) Declaration public static void LoadItemDatabaseReadonly(InventoryItemData[] items) Parameters Type Name Description InventoryItemData[] items"
  },
  "api/Systems.Inventory.ItemDatabaseSO.html": {
    "href": "api/Systems.Inventory.ItemDatabaseSO.html",
    "title": "Class ItemDatabaseSO | Harvest Grove code documentation",
    "keywords": "Class ItemDatabaseSO This class holds all the IDs of the items, in order to access them easily later on. Create a ScriptableObject in the Project Tab and drag and drop the items in the list. Inheritance object ItemDatabaseSO Namespace: Systems.Inventory Assembly: cs.temp.dll.dll Syntax public class ItemDatabaseSO : ScriptableObject Fields Items Declaration public InventoryItemData[] Items Field Value Type Description InventoryItemData[] Methods GetItem(int) Declaration public InventoryItemData GetItem(int id) Parameters Type Name Description int id Returns Type Description InventoryItemData UpdateID() Updates all the items id Declaration public void UpdateID()"
  },
  "api/Systems.Inventory.Items.Animals.AnimalsItemsEnum.html": {
    "href": "api/Systems.Inventory.Items.Animals.AnimalsItemsEnum.html",
    "title": "Enum AnimalsItemsEnum | Harvest Grove code documentation",
    "keywords": "Enum AnimalsItemsEnum Namespace: Systems.Inventory.Items.Animals Assembly: cs.temp.dll.dll Syntax public enum AnimalsItemsEnum Fields Name Description EmptyJar FoodChicken FoodHerbivor"
  },
  "api/Systems.Inventory.Items.Animals.html": {
    "href": "api/Systems.Inventory.Items.Animals.html",
    "title": "Namespace Systems.Inventory.Items.Animals | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory.Items.Animals Classes ItemsForAnimals Enums AnimalsItemsEnum"
  },
  "api/Systems.Inventory.Items.Animals.ItemsForAnimals.html": {
    "href": "api/Systems.Inventory.Items.Animals.ItemsForAnimals.html",
    "title": "Class ItemsForAnimals | Harvest Grove code documentation",
    "keywords": "Class ItemsForAnimals Inheritance object InventoryItemData ItemsForAnimals Implements IComparable<><InventoryItemData> Inherited Members InventoryItemData.ItemID InventoryItemData.DisplayName InventoryItemData.Icon InventoryItemData.MaxStackSize InventoryItemData.ItemType InventoryItemData.ItemPrice InventoryItemData.CompareTo(InventoryItemData) Namespace: Systems.Inventory.Items.Animals Assembly: cs.temp.dll.dll Syntax public class ItemsForAnimals : InventoryItemData, IComparable<InventoryItemData> Constructors ItemsForAnimals() Declaration public ItemsForAnimals() Fields AnimalItemType Declaration public AnimalsItemsEnum AnimalItemType Field Value Type Description AnimalsItemsEnum FoodType Declaration public AnimalFoodType FoodType Field Value Type Description AnimalFoodType Implements IComparable<>"
  },
  "api/Systems.Inventory.Items.BasicIngredientSO.html": {
    "href": "api/Systems.Inventory.Items.BasicIngredientSO.html",
    "title": "Class BasicIngredientSO | Harvest Grove code documentation",
    "keywords": "Class BasicIngredientSO Inheritance object InventoryItemData BasicIngredientSO Implements IComparable<><InventoryItemData> Inherited Members InventoryItemData.ItemID InventoryItemData.DisplayName InventoryItemData.Icon InventoryItemData.MaxStackSize InventoryItemData.ItemType InventoryItemData.ItemPrice InventoryItemData.CompareTo(InventoryItemData) Namespace: Systems.Inventory.Items Assembly: cs.temp.dll.dll Syntax public class BasicIngredientSO : InventoryItemData, IComparable<InventoryItemData> Constructors BasicIngredientSO() Declaration public BasicIngredientSO() Fields IngredientType Declaration public BasicIngredientType IngredientType Field Value Type Description BasicIngredientType Implements IComparable<>"
  },
  "api/Systems.Inventory.Items.BasicIngredientType.html": {
    "href": "api/Systems.Inventory.Items.BasicIngredientType.html",
    "title": "Enum BasicIngredientType | Harvest Grove code documentation",
    "keywords": "Enum BasicIngredientType Namespace: Systems.Inventory.Items Assembly: cs.temp.dll.dll Syntax public enum BasicIngredientType Fields Name Description Egg Flour None Wheat"
  },
  "api/Systems.Inventory.Items.BluePrints.BluePrintItem.html": {
    "href": "api/Systems.Inventory.Items.BluePrints.BluePrintItem.html",
    "title": "Class BluePrintItem | Harvest Grove code documentation",
    "keywords": "Class BluePrintItem Inheritance object InventoryItemData BluePrintItem Implements IComparable<><InventoryItemData> Inherited Members InventoryItemData.ItemID InventoryItemData.DisplayName InventoryItemData.Icon InventoryItemData.MaxStackSize InventoryItemData.ItemType InventoryItemData.ItemPrice InventoryItemData.CompareTo(InventoryItemData) Namespace: Systems.Inventory.Items.BluePrints Assembly: cs.temp.dll.dll Syntax public class BluePrintItem : InventoryItemData, IComparable<InventoryItemData> Constructors BluePrintItem() Declaration public BluePrintItem() Fields Building Declaration public ConstructionSO Building Field Value Type Description ConstructionSO Implements IComparable<>"
  },
  "api/Systems.Inventory.Items.BluePrints.html": {
    "href": "api/Systems.Inventory.Items.BluePrints.html",
    "title": "Namespace Systems.Inventory.Items.BluePrints | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory.Items.BluePrints Classes BluePrintItem"
  },
  "api/Systems.Inventory.Items.Books.BookItem.html": {
    "href": "api/Systems.Inventory.Items.Books.BookItem.html",
    "title": "Class BookItem | Harvest Grove code documentation",
    "keywords": "Class BookItem Inheritance object InventoryItemData BookItem Implements IComparable<><InventoryItemData> Inherited Members InventoryItemData.ItemID InventoryItemData.DisplayName InventoryItemData.Icon InventoryItemData.MaxStackSize InventoryItemData.ItemType InventoryItemData.ItemPrice InventoryItemData.CompareTo(InventoryItemData) Namespace: Systems.Inventory.Items.Books Assembly: cs.temp.dll.dll Syntax public class BookItem : InventoryItemData, IComparable<InventoryItemData> Constructors BookItem() Declaration public BookItem() Fields BookType Declaration public BookType BookType Field Value Type Description BookType Implements IComparable<>"
  },
  "api/Systems.Inventory.Items.Books.Books.html": {
    "href": "api/Systems.Inventory.Items.Books.Books.html",
    "title": "Class Books | Harvest Grove code documentation",
    "keywords": "Class Books This class ties books with their respective UI in game Inheritance object Books Implements IToggleable Namespace: Systems.Inventory.Items.Books Assembly: cs.temp.dll.dll Syntax public class Books : MonoBehaviour, IToggleable Fields OnUnlockedBuildingsBookClosed Declaration public static Action OnUnlockedBuildingsBookClosed Field Value Type Description Action Properties IsBookOpen Declaration public static bool IsBookOpen { get; set; } Property Value Type Description bool Methods AssignBooktype(BookType) Declaration public void AssignBooktype(BookType bookType) Parameters Type Name Description BookType bookType Construct(IInventoryService, InputsMap, IManagerData) Declaration public void Construct(IInventoryService inventoryService, InputsMap inputsMap, IManagerData managerData) Parameters Type Name Description IInventoryService inventoryService InputsMap inputsMap IManagerData managerData Explicit Interface Implementations IToggleable.Enabled Declaration bool IToggleable.Enabled { get; set; } Returns Type Description bool Implements IToggleable"
  },
  "api/Systems.Inventory.Items.Books.BookType.html": {
    "href": "api/Systems.Inventory.Items.Books.BookType.html",
    "title": "Enum BookType | Harvest Grove code documentation",
    "keywords": "Enum BookType Namespace: Systems.Inventory.Items.Books Assembly: cs.temp.dll.dll Syntax public enum BookType Fields Name Description Cookbook GuideBook QuestBook UnlockedBuildings"
  },
  "api/Systems.Inventory.Items.Books.html": {
    "href": "api/Systems.Inventory.Items.Books.html",
    "title": "Namespace Systems.Inventory.Items.Books | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory.Items.Books Classes BookItem Books This class ties books with their respective UI in game Enums BookType"
  },
  "api/Systems.Inventory.Items.BuildingItemSO.html": {
    "href": "api/Systems.Inventory.Items.BuildingItemSO.html",
    "title": "Class BuildingItemSO | Harvest Grove code documentation",
    "keywords": "Class BuildingItemSO Inheritance object InventoryItemData BuildingItemSO Implements IComparable<><InventoryItemData> Inherited Members InventoryItemData.ItemID InventoryItemData.DisplayName InventoryItemData.Icon InventoryItemData.MaxStackSize InventoryItemData.ItemType InventoryItemData.ItemPrice InventoryItemData.CompareTo(InventoryItemData) Namespace: Systems.Inventory.Items Assembly: cs.temp.dll.dll Syntax public class BuildingItemSO : InventoryItemData, IComparable<InventoryItemData> Constructors BuildingItemSO() Declaration public BuildingItemSO() Fields Building Declaration public BuildingSO Building Field Value Type Description BuildingSO Implements IComparable<>"
  },
  "api/Systems.Inventory.Items.Consumables.ConsumableSO.html": {
    "href": "api/Systems.Inventory.Items.Consumables.ConsumableSO.html",
    "title": "Class ConsumableSO | Harvest Grove code documentation",
    "keywords": "Class ConsumableSO Inheritance object InventoryItemData ConsumableSO Implements IComparable<><InventoryItemData> Inherited Members InventoryItemData.ItemID InventoryItemData.DisplayName InventoryItemData.Icon InventoryItemData.MaxStackSize InventoryItemData.ItemType InventoryItemData.ItemPrice InventoryItemData.CompareTo(InventoryItemData) Namespace: Systems.Inventory.Items.Consumables Assembly: cs.temp.dll.dll Syntax public class ConsumableSO : InventoryItemData, IComparable<InventoryItemData> Fields ConsumableType Declaration public ConsumableType ConsumableType Field Value Type Description ConsumableType DrinkType Declaration public DrinkType DrinkType Field Value Type Description DrinkType FoodType Declaration public FoodType FoodType Field Value Type Description FoodType HungerRegeneration Declaration public int HungerRegeneration Field Value Type Description int Remainings Declaration public InventoryItemData Remainings Field Value Type Description InventoryItemData ShouldRegenerateFood Declaration public bool ShouldRegenerateFood Field Value Type Description bool ShouldRegenerateThirst Declaration public bool ShouldRegenerateThirst Field Value Type Description bool ThirstRegeneration Declaration public int ThirstRegeneration Field Value Type Description int Implements IComparable<>"
  },
  "api/Systems.Inventory.Items.Consumables.ConsumableType.html": {
    "href": "api/Systems.Inventory.Items.Consumables.ConsumableType.html",
    "title": "Enum ConsumableType | Harvest Grove code documentation",
    "keywords": "Enum ConsumableType Namespace: Systems.Inventory.Items.Consumables Assembly: cs.temp.dll.dll Syntax public enum ConsumableType Fields Name Description Drink Food FoodAndDrink Nothing"
  },
  "api/Systems.Inventory.Items.Consumables.DrinkType.html": {
    "href": "api/Systems.Inventory.Items.Consumables.DrinkType.html",
    "title": "Enum DrinkType | Harvest Grove code documentation",
    "keywords": "Enum DrinkType Namespace: Systems.Inventory.Items.Consumables Assembly: cs.temp.dll.dll Syntax public enum DrinkType Fields Name Description MineralWater Nothing SaltWater"
  },
  "api/Systems.Inventory.Items.Consumables.FoodType.html": {
    "href": "api/Systems.Inventory.Items.Consumables.FoodType.html",
    "title": "Enum FoodType | Harvest Grove code documentation",
    "keywords": "Enum FoodType Namespace: Systems.Inventory.Items.Consumables Assembly: cs.temp.dll.dll Syntax public enum FoodType Fields Name Description Apple Berry Carrot Cucumber Eggplant Nothing Onions Potato Tomato Wheat"
  },
  "api/Systems.Inventory.Items.Consumables.html": {
    "href": "api/Systems.Inventory.Items.Consumables.html",
    "title": "Namespace Systems.Inventory.Items.Consumables | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory.Items.Consumables Classes ConsumableSO Enums ConsumableType DrinkType FoodType"
  },
  "api/Systems.Inventory.Items.html": {
    "href": "api/Systems.Inventory.Items.html",
    "title": "Namespace Systems.Inventory.Items | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory.Items Classes BasicIngredientSO BuildingItemSO InventoryItemData Enums BasicIngredientType ItemType"
  },
  "api/Systems.Inventory.Items.InventoryItemData.html": {
    "href": "api/Systems.Inventory.Items.InventoryItemData.html",
    "title": "Class InventoryItemData | Harvest Grove code documentation",
    "keywords": "Class InventoryItemData Inheritance object InventoryItemData ItemsForAnimals BasicIngredientSO BluePrintItem BookItem BuildingItemSO ConsumableSO MaterialSO SaplingSO SeedSO ToolSO Implements IComparable<><InventoryItemData> Namespace: Systems.Inventory.Items Assembly: cs.temp.dll.dll Syntax public class InventoryItemData : ScriptableObject, IComparable<InventoryItemData> Fields DisplayName Declaration public LocalizedString DisplayName Field Value Type Description LocalizedString Icon Declaration public Sprite Icon Field Value Type Description Sprite ItemID Declaration public int ItemID Field Value Type Description int ItemPrice Declaration public int ItemPrice Field Value Type Description int ItemType Declaration public ItemType ItemType Field Value Type Description ItemType MaxStackSize Declaration public int MaxStackSize Field Value Type Description int Methods CompareTo(InventoryItemData) Declaration public int CompareTo(InventoryItemData other) Parameters Type Name Description InventoryItemData other Returns Type Description int Implements IComparable<>"
  },
  "api/Systems.Inventory.Items.ItemType.html": {
    "href": "api/Systems.Inventory.Items.ItemType.html",
    "title": "Enum ItemType | Harvest Grove code documentation",
    "keywords": "Enum ItemType Namespace: Systems.Inventory.Items Assembly: cs.temp.dll.dll Syntax public enum ItemType Fields Name Description Animals BasicIngredient Blueprint Book Building Consumable EmptyBottle LifeKey Material Sapling Seed Tool Unknown UnlockableCookingRecipe"
  },
  "api/Systems.Inventory.Items.Materials.BurningMaterialSO.html": {
    "href": "api/Systems.Inventory.Items.Materials.BurningMaterialSO.html",
    "title": "Class BurningMaterialSO | Harvest Grove code documentation",
    "keywords": "Class BurningMaterialSO Inheritance object InventoryItemData MaterialSO BurningMaterialSO Implements IComparable<><InventoryItemData> Inherited Members MaterialSO.MaterialType InventoryItemData.ItemID InventoryItemData.DisplayName InventoryItemData.Icon InventoryItemData.MaxStackSize InventoryItemData.ItemType InventoryItemData.ItemPrice InventoryItemData.CompareTo(InventoryItemData) Namespace: Systems.Inventory.Items.Materials Assembly: cs.temp.dll.dll Syntax public class BurningMaterialSO : MaterialSO, IComparable<InventoryItemData> Fields MinutesBurning Declaration public ushort MinutesBurning Field Value Type Description ushort Implements IComparable<>"
  },
  "api/Systems.Inventory.Items.Materials.html": {
    "href": "api/Systems.Inventory.Items.Materials.html",
    "title": "Namespace Systems.Inventory.Items.Materials | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory.Items.Materials Classes BurningMaterialSO MaterialSO Enums MaterialType"
  },
  "api/Systems.Inventory.Items.Materials.MaterialSO.html": {
    "href": "api/Systems.Inventory.Items.Materials.MaterialSO.html",
    "title": "Class MaterialSO | Harvest Grove code documentation",
    "keywords": "Class MaterialSO Inheritance object InventoryItemData MaterialSO BurningMaterialSO Implements IComparable<><InventoryItemData> Inherited Members InventoryItemData.ItemID InventoryItemData.DisplayName InventoryItemData.Icon InventoryItemData.MaxStackSize InventoryItemData.ItemType InventoryItemData.ItemPrice InventoryItemData.CompareTo(InventoryItemData) Namespace: Systems.Inventory.Items.Materials Assembly: cs.temp.dll.dll Syntax public class MaterialSO : InventoryItemData, IComparable<InventoryItemData> Constructors MaterialSO() Declaration public MaterialSO() Fields MaterialType Declaration public MaterialType MaterialType Field Value Type Description MaterialType Implements IComparable<>"
  },
  "api/Systems.Inventory.Items.Materials.MaterialType.html": {
    "href": "api/Systems.Inventory.Items.Materials.MaterialType.html",
    "title": "Enum MaterialType | Harvest Grove code documentation",
    "keywords": "Enum MaterialType Namespace: Systems.Inventory.Items.Materials Assembly: cs.temp.dll.dll Syntax public enum MaterialType Fields Name Description Charcoal Coal Gold GoldOre Iron IronOre Log Nails NotSet Silver SilverOre Stick Stone Wheat"
  },
  "api/Systems.Inventory.Items.Saplings.html": {
    "href": "api/Systems.Inventory.Items.Saplings.html",
    "title": "Namespace Systems.Inventory.Items.Saplings | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory.Items.Saplings Classes SaplingSO"
  },
  "api/Systems.Inventory.Items.Saplings.SaplingSO.html": {
    "href": "api/Systems.Inventory.Items.Saplings.SaplingSO.html",
    "title": "Class SaplingSO | Harvest Grove code documentation",
    "keywords": "Class SaplingSO Inheritance object InventoryItemData SaplingSO Implements IComparable<><InventoryItemData> Inherited Members InventoryItemData.ItemID InventoryItemData.DisplayName InventoryItemData.Icon InventoryItemData.MaxStackSize InventoryItemData.ItemType InventoryItemData.ItemPrice InventoryItemData.CompareTo(InventoryItemData) Namespace: Systems.Inventory.Items.Saplings Assembly: cs.temp.dll.dll Syntax public class SaplingSO : InventoryItemData, IComparable<InventoryItemData> Implements IComparable<>"
  },
  "api/Systems.Inventory.Items.Seeds.html": {
    "href": "api/Systems.Inventory.Items.Seeds.html",
    "title": "Namespace Systems.Inventory.Items.Seeds | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory.Items.Seeds Classes SeedSO"
  },
  "api/Systems.Inventory.Items.Seeds.SeedSO.html": {
    "href": "api/Systems.Inventory.Items.Seeds.SeedSO.html",
    "title": "Class SeedSO | Harvest Grove code documentation",
    "keywords": "Class SeedSO Inheritance object InventoryItemData SeedSO Implements IComparable<><InventoryItemData> Inherited Members InventoryItemData.ItemID InventoryItemData.DisplayName InventoryItemData.Icon InventoryItemData.MaxStackSize InventoryItemData.ItemType InventoryItemData.ItemPrice InventoryItemData.CompareTo(InventoryItemData) Namespace: Systems.Inventory.Items.Seeds Assembly: cs.temp.dll.dll Syntax public class SeedSO : InventoryItemData, IComparable<InventoryItemData> Implements IComparable<>"
  },
  "api/Systems.Inventory.Items.Tools.html": {
    "href": "api/Systems.Inventory.Items.Tools.html",
    "title": "Namespace Systems.Inventory.Items.Tools | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory.Items.Tools Classes ToolSO Enums ToolType"
  },
  "api/Systems.Inventory.Items.Tools.ToolSO.html": {
    "href": "api/Systems.Inventory.Items.Tools.ToolSO.html",
    "title": "Class ToolSO | Harvest Grove code documentation",
    "keywords": "Class ToolSO Inheritance object InventoryItemData ToolSO Implements IComparable<><InventoryItemData> Inherited Members InventoryItemData.ItemID InventoryItemData.DisplayName InventoryItemData.Icon InventoryItemData.MaxStackSize InventoryItemData.ItemType InventoryItemData.ItemPrice InventoryItemData.CompareTo(InventoryItemData) Namespace: Systems.Inventory.Items.Tools Assembly: cs.temp.dll.dll Syntax public class ToolSO : InventoryItemData, IComparable<InventoryItemData> Fields LockedTime Declaration public float LockedTime Field Value Type Description float MaterialType Declaration public MaterialType MaterialType Field Value Type Description MaterialType ToolType Declaration public ToolType ToolType Field Value Type Description ToolType Properties Damage Declaration public short Damage { get; } Property Value Type Description short MaxDurability Declaration public ushort MaxDurability { get; } Property Value Type Description ushort RepairableMaterials Declaration public MaterialSO[] RepairableMaterials { get; } Property Value Type Description MaterialSO[] Implements IComparable<>"
  },
  "api/Systems.Inventory.Items.Tools.ToolType.html": {
    "href": "api/Systems.Inventory.Items.Tools.ToolType.html",
    "title": "Enum ToolType | Harvest Grove code documentation",
    "keywords": "Enum ToolType Namespace: Systems.Inventory.Items.Tools Assembly: cs.temp.dll.dll Syntax public enum ToolType Fields Name Description Axe BucketEmpty BucketMilk BucketSand BucketWater FishingRod Hammer Hoe Nothing Pickaxe Shovel WaterCanEmpty WaterCanFilled"
  },
  "api/Systems.Inventory.IToggleable.html": {
    "href": "api/Systems.Inventory.IToggleable.html",
    "title": "Interface IToggleable | Harvest Grove code documentation",
    "keywords": "Interface IToggleable Namespace: Systems.Inventory Assembly: cs.temp.dll.dll Syntax public interface IToggleable Properties Enabled Declaration bool Enabled { get; set; } Property Value Type Description bool"
  },
  "api/Systems.Inventory.LoadingInventories.html": {
    "href": "api/Systems.Inventory.LoadingInventories.html",
    "title": "Class LoadingInventories | Harvest Grove code documentation",
    "keywords": "Class LoadingInventories Inheritance object LoadingInventories Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Inventory Assembly: cs.temp.dll.dll Syntax public static class LoadingInventories Methods LoadDeathInventories(List<InventorySlot>, List<InventorySlot>, Vector2) Declaration public static UniTask LoadDeathInventories(List<InventorySlot> loadedHotbarSlots, List<InventorySlot> loadedBackpackSlots, Vector2 pos) Parameters Type Name Description List<><InventorySlot> loadedHotbarSlots List<><InventorySlot> loadedBackpackSlots Vector2 pos Returns Type Description UniTask LoadInventories(List<InventorySlot>, List<InventorySlot>, IInventoryService) Declaration public static UniTask LoadInventories(List<InventorySlot> loadedHotbarSlots, List<InventorySlot> loadedBackpackSlots, IInventoryService inventoryService) Parameters Type Name Description List<><InventorySlot> loadedHotbarSlots List<><InventorySlot> loadedBackpackSlots IInventoryService inventoryService Returns Type Description UniTask"
  },
  "api/Systems.Inventory.PlayerInventories.BackpackInventory.html": {
    "href": "api/Systems.Inventory.PlayerInventories.BackpackInventory.html",
    "title": "Class BackpackInventory | Harvest Grove code documentation",
    "keywords": "Class BackpackInventory Inheritance object InventoryHolder BackpackInventory Inherited Members InventoryHolder.inventorySize InventoryHolder.OnDynamicInventoryDisplayRequested Namespace: Systems.Inventory.PlayerInventories Assembly: cs.temp.dll.dll Syntax public class BackpackInventory : InventoryHolder Properties BackpackInventoryData Declaration public Inventory BackpackInventoryData { get; } Property Value Type Description Inventory Methods ClearBackpack() Declaration public void ClearBackpack() Construct(IInventoryService) Declaration public void Construct(IInventoryService inventoryService) Parameters Type Name Description IInventoryService inventoryService"
  },
  "api/Systems.Inventory.PlayerInventories.HotBarInventory.html": {
    "href": "api/Systems.Inventory.PlayerInventories.HotBarInventory.html",
    "title": "Class HotBarInventory | Harvest Grove code documentation",
    "keywords": "Class HotBarInventory Inheritance object InventoryHolder HotBarInventory Inherited Members InventoryHolder.inventorySize InventoryHolder.OnDynamicInventoryDisplayRequested Namespace: Systems.Inventory.PlayerInventories Assembly: cs.temp.dll.dll Syntax public class HotBarInventory : InventoryHolder Properties HotBarInventoryData Declaration public Inventory HotBarInventoryData { get; set; } Property Value Type Description Inventory Methods Construct(IInventoryService) Declaration public void Construct(IInventoryService inventoryService) Parameters Type Name Description IInventoryService inventoryService"
  },
  "api/Systems.Inventory.PlayerInventories.html": {
    "href": "api/Systems.Inventory.PlayerInventories.html",
    "title": "Namespace Systems.Inventory.PlayerInventories | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory.PlayerInventories Classes BackpackInventory HotBarInventory"
  },
  "api/Systems.Inventory.SlotUI.html": {
    "href": "api/Systems.Inventory.SlotUI.html",
    "title": "Class SlotUI | Harvest Grove code documentation",
    "keywords": "Class SlotUI Inheritance object SlotUI InventorySlotUI Namespace: Systems.Inventory Assembly: cs.temp.dll.dll Syntax public abstract class SlotUI : MonoBehaviour Fields assignedInventorySlot Declaration protected InventorySlot assignedInventorySlot Field Value Type Description InventorySlot mouseItemData Declaration protected MouseItemData mouseItemData Field Value Type Description MouseItemData ToolDurabilityFill Declaration public Image ToolDurabilityFill Field Value Type Description Image ToolDurabilitySlider Declaration public Slider ToolDurabilitySlider Field Value Type Description Slider Properties AssignedInventorySlot Declaration public InventorySlot AssignedInventorySlot { get; } Property Value Type Description InventorySlot InventoryDisplay Declaration public InventoryDisplay InventoryDisplay { get; } Property Value Type Description InventoryDisplay Methods Awake() Declaration protected virtual void Awake() ClearSlot() Clears the slot Declaration public void ClearSlot() Init(InventorySlot) Initializes a slot. Declaration public void Init(InventorySlot slot) Parameters Type Name Description InventorySlot slot The slot to initialize OnUISlotClick() Called when a slot is clicked Declaration protected abstract void OnUISlotClick() SetSlot() Declaration protected virtual void SetSlot() UpdateUISlot() Declaration public void UpdateUISlot()"
  },
  "api/Systems.Inventory.UI_Scripts.DynamicInventoryInterface.html": {
    "href": "api/Systems.Inventory.UI_Scripts.DynamicInventoryInterface.html",
    "title": "Class DynamicInventoryInterface | Harvest Grove code documentation",
    "keywords": "Class DynamicInventoryInterface Class responsible for creating and destroying slots based on the given inventory data. Inheritance object InventoryDisplay DynamicInventoryInterface Inherited Members InventoryDisplay.CurrentInventory InventoryDisplay.SlotsDictionary InventoryDisplay.Construct(IInventoryService, InputsMap) InventoryDisplay.Start() InventoryDisplay.UpdateSlot(InventorySlot) InventoryDisplay.SlotClicked(InventorySlotUI) InventoryDisplay.CallSortInventory() Namespace: Systems.Inventory.UI_Scripts Assembly: cs.temp.dll.dll Syntax public class DynamicInventoryInterface : InventoryDisplay Methods Construct(IInventoryService) Declaration public void Construct(IInventoryService inventoryService) Parameters Type Name Description IInventoryService inventoryService CreateDynamicSlots(Inventory, Transform) Creates all the slots Declaration public override void CreateDynamicSlots(Inventory invToDisplay, Transform slotsContainer) Parameters Type Name Description Inventory invToDisplay The inventory data Transform slotsContainer The container of the slots Overrides InventoryDisplay.CreateDynamicSlots(Inventory, Transform) RefreshDynamicInventory(Inventory, Transform, bool) Resets the dynamic inventory, and creates a new one based on the given inventory data Declaration public void RefreshDynamicInventory(Inventory invToDisplay, Transform slotsContainer, bool isChest) Parameters Type Name Description Inventory invToDisplay The new inventory Transform slotsContainer The container of the slots bool isChest"
  },
  "api/Systems.Inventory.UI_Scripts.html": {
    "href": "api/Systems.Inventory.UI_Scripts.html",
    "title": "Namespace Systems.Inventory.UI_Scripts | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Inventory.UI_Scripts Classes DynamicInventoryInterface Class responsible for creating and destroying slots based on the given inventory data. InteractUIController InventoryDisplay Responsive class for displaying the data of each object in the slots on the interface. InventorySlotHotbar InventorySlotUI Class responsible for updating the UI of a slot. Assign it to every slot. InventoryUIController MouseItemData This class is assigned to the \"dragging slot\" object StaticInventoryDisplay A class that needs to be assigned to inventories UIs"
  },
  "api/Systems.Inventory.UI_Scripts.InteractUIController.html": {
    "href": "api/Systems.Inventory.UI_Scripts.InteractUIController.html",
    "title": "Class InteractUIController | Harvest Grove code documentation",
    "keywords": "Class InteractUIController Inheritance object InteractUIController Namespace: Systems.Inventory.UI_Scripts Assembly: cs.temp.dll.dll Syntax public class InteractUIController : MonoBehaviour Fields OnBackpackOpened Declaration public static Action<bool> OnBackpackOpened Field Value Type Description Action<><bool> OnGetPlayerInventories Declaration public static Func<Tuple<BackpackInventory, HotBarInventory>> OnGetPlayerInventories Field Value Type Description Func<><Tuple<BackpackInventory, HotBarInventory>> Properties BackpackInventory Declaration public BackpackInventory BackpackInventory { get; } Property Value Type Description BackpackInventory CanOpenBackpack Declaration public static bool CanOpenBackpack { get; set; } Property Value Type Description bool HotBarInventory Declaration public HotBarInventory HotBarInventory { get; } Property Value Type Description HotBarInventory IsBackpackOpened Declaration public bool IsBackpackOpened { get; set; } Property Value Type Description bool Methods Construct(InputsMap, IManagerData) Declaration public void Construct(InputsMap inputsMap, IManagerData managerData) Parameters Type Name Description InputsMap inputsMap IManagerData managerData SetBackpackActionAvailability(bool) Sets if the backpack is available to be opened. (I.e: If the player is talking with a NPC, we dont' want to allow the player to open it). Declaration public void SetBackpackActionAvailability(bool isAvailable) Parameters Type Name Description bool isAvailable"
  },
  "api/Systems.Inventory.UI_Scripts.InventoryDisplay.html": {
    "href": "api/Systems.Inventory.UI_Scripts.InventoryDisplay.html",
    "title": "Class InventoryDisplay | Harvest Grove code documentation",
    "keywords": "Class InventoryDisplay Responsive class for displaying the data of each object in the slots on the interface. Inheritance object InventoryDisplay DynamicInventoryInterface StaticInventoryDisplay Namespace: Systems.Inventory.UI_Scripts Assembly: cs.temp.dll.dll Syntax public abstract class InventoryDisplay : MonoBehaviour Fields CurrentInventory Declaration protected Inventory CurrentInventory Field Value Type Description Inventory SlotsDictionary Declaration protected Dictionary<InventorySlotUI, InventorySlot> SlotsDictionary Field Value Type Description Dictionary<, ><InventorySlotUI, InventorySlot> Methods CallSortInventory() Declaration public void CallSortInventory() Construct(IInventoryService, InputsMap) Declaration public void Construct(IInventoryService canvasData, InputsMap inputsMap) Parameters Type Name Description IInventoryService canvasData InputsMap inputsMap CreateDynamicSlots(Inventory, Transform) Assigns the inventory slots to display in the interface. Declaration public abstract void CreateDynamicSlots(Inventory invToDisplay, Transform slotsContainer) Parameters Type Name Description Inventory invToDisplay Transform slotsContainer SlotClicked(InventorySlotUI) Declaration public void SlotClicked(InventorySlotUI clickedSlot) Parameters Type Name Description InventorySlotUI clickedSlot Start() Declaration protected virtual void Start() UpdateSlot(InventorySlot) Declaration protected void UpdateSlot(InventorySlot updatedSlot) Parameters Type Name Description InventorySlot updatedSlot"
  },
  "api/Systems.Inventory.UI_Scripts.InventorySlotHotbar.html": {
    "href": "api/Systems.Inventory.UI_Scripts.InventorySlotHotbar.html",
    "title": "Class InventorySlotHotbar | Harvest Grove code documentation",
    "keywords": "Class InventorySlotHotbar Inheritance object SlotUI InventorySlotUI InventorySlotHotbar Inherited Members InventorySlotUI.Construct(IInventoryService) InventorySlotUI.ShowInfo() InventorySlotUI.HideInfo() SlotUI.AssignedInventorySlot SlotUI.InventoryDisplay SlotUI.ToolDurabilitySlider SlotUI.ToolDurabilityFill SlotUI.mouseItemData SlotUI.assignedInventorySlot SlotUI.Awake() SlotUI.Init(InventorySlot) SlotUI.UpdateUISlot() SlotUI.ClearSlot() SlotUI.SetSlot() Namespace: Systems.Inventory.UI_Scripts Assembly: cs.temp.dll.dll Syntax public class InventorySlotHotbar : InventorySlotUI Properties IsLocked Declaration public bool IsLocked { get; } Property Value Type Description bool Methods DisableSelectedSlot() Declaration public void DisableSelectedSlot() EnableSelectedSlot() Declaration public void EnableSelectedSlot() LockSlot() Declaration public void LockSlot() OnUISlotClick() Declaration protected override void OnUISlotClick() Overrides InventorySlotUI.OnUISlotClick()"
  },
  "api/Systems.Inventory.UI_Scripts.InventorySlotUI.html": {
    "href": "api/Systems.Inventory.UI_Scripts.InventorySlotUI.html",
    "title": "Class InventorySlotUI | Harvest Grove code documentation",
    "keywords": "Class InventorySlotUI Class responsible for updating the UI of a slot. Assign it to every slot. Inheritance object SlotUI InventorySlotUI InventorySlotHotbar Inherited Members SlotUI.AssignedInventorySlot SlotUI.InventoryDisplay SlotUI.ToolDurabilitySlider SlotUI.ToolDurabilityFill SlotUI.mouseItemData SlotUI.assignedInventorySlot SlotUI.Awake() SlotUI.Init(InventorySlot) SlotUI.UpdateUISlot() SlotUI.ClearSlot() SlotUI.SetSlot() Namespace: Systems.Inventory.UI_Scripts Assembly: cs.temp.dll.dll Syntax public class InventorySlotUI : SlotUI Methods Construct(IInventoryService) Declaration public void Construct(IInventoryService inventoryService) Parameters Type Name Description IInventoryService inventoryService HideInfo() Declaration public void HideInfo() OnUISlotClick() Called when a slot is clicked Declaration protected override void OnUISlotClick() Overrides SlotUI.OnUISlotClick() ShowInfo() Declaration public void ShowInfo()"
  },
  "api/Systems.Inventory.UI_Scripts.InventoryUIController.html": {
    "href": "api/Systems.Inventory.UI_Scripts.InventoryUIController.html",
    "title": "Class InventoryUIController | Harvest Grove code documentation",
    "keywords": "Class InventoryUIController Inheritance object InventoryUIController Namespace: Systems.Inventory.UI_Scripts Assembly: cs.temp.dll.dll Syntax public class InventoryUIController : MonoBehaviour Fields OnChestClose Declaration public static Action OnChestClose Field Value Type Description Action Properties BackpackSlotsContainer Declaration public Transform BackpackSlotsContainer { get; } Property Value Type Description Transform ChestSlotsContainer Declaration public Transform ChestSlotsContainer { get; } Property Value Type Description Transform DynamicInventory Declaration public DynamicInventoryInterface DynamicInventory { get; } Property Value Type Description DynamicInventoryInterface Methods Construct(IInventoryService, InputsMap) Declaration public void Construct(IInventoryService inventoryService, InputsMap inputsMap) Parameters Type Name Description IInventoryService inventoryService InputsMap inputsMap"
  },
  "api/Systems.Inventory.UI_Scripts.MouseItemData.html": {
    "href": "api/Systems.Inventory.UI_Scripts.MouseItemData.html",
    "title": "Class MouseItemData | Harvest Grove code documentation",
    "keywords": "Class MouseItemData This class is assigned to the \"dragging slot\" object Inheritance object MouseItemData Namespace: Systems.Inventory.UI_Scripts Assembly: cs.temp.dll.dll Syntax public class MouseItemData : MonoBehaviour Fields AssignedInventorySlot Declaration public InventorySlot AssignedInventorySlot Field Value Type Description InventorySlot currentItemData Declaration public InventoryItemData currentItemData Field Value Type Description InventoryItemData ItemCount Declaration public TextMeshProUGUI ItemCount Field Value Type Description TextMeshProUGUI ItemSprite Declaration public Image ItemSprite Field Value Type Description Image OnReturnItemToSlot Declaration public static Action OnReturnItemToSlot Field Value Type Description Action Methods ClearItem() Declaration public void ClearItem() ClearSlot() Clears the dragging slot Declaration public void ClearSlot() Construct(IInventoryService, InputsMap) Declaration public void Construct(IInventoryService inventoryService, InputsMap inputsMap) Parameters Type Name Description IInventoryService inventoryService InputsMap inputsMap UpdateMouseSlot(InventorySlot, ToolInstance, InventorySlotUI) Updates the mouse slot with the given slot data Declaration public void UpdateMouseSlot(InventorySlot invSlot, ToolInstance toolInstance, InventorySlotUI slot_UI = null) Parameters Type Name Description InventorySlot invSlot The given slot data ToolInstance toolInstance InventorySlotUI slot_UI"
  },
  "api/Systems.Inventory.UI_Scripts.StaticInventoryDisplay.html": {
    "href": "api/Systems.Inventory.UI_Scripts.StaticInventoryDisplay.html",
    "title": "Class StaticInventoryDisplay | Harvest Grove code documentation",
    "keywords": "Class StaticInventoryDisplay A class that needs to be assigned to inventories UIs Inheritance object InventoryDisplay StaticInventoryDisplay Inherited Members InventoryDisplay.CurrentInventory InventoryDisplay.SlotsDictionary InventoryDisplay.Construct(IInventoryService, InputsMap) InventoryDisplay.Start() InventoryDisplay.UpdateSlot(InventorySlot) InventoryDisplay.SlotClicked(InventorySlotUI) InventoryDisplay.CallSortInventory() Namespace: Systems.Inventory.UI_Scripts Assembly: cs.temp.dll.dll Syntax public class StaticInventoryDisplay : InventoryDisplay Properties Slots Declaration public InventorySlotUI[] Slots { get; } Property Value Type Description InventorySlotUI[] Methods ClearHotbar() Declaration public void ClearHotbar() Construct(IInventoryService) Declaration public void Construct(IInventoryService inventoryService) Parameters Type Name Description IInventoryService inventoryService CreateDynamicSlots(Inventory, Transform) Called on start. Adds all the slots to the dictionary and initializes them Declaration public override void CreateDynamicSlots(Inventory invToDisplay, Transform slotsContainer) Parameters Type Name Description Inventory invToDisplay Transform slotsContainer The container of the slots Overrides InventoryDisplay.CreateDynamicSlots(Inventory, Transform)"
  },
  "api/Systems.Minimap.html": {
    "href": "api/Systems.Minimap.html",
    "title": "Namespace Systems.Minimap | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Minimap Classes Minimap MinimapSavingData"
  },
  "api/Systems.Minimap.Minimap.html": {
    "href": "api/Systems.Minimap.Minimap.html",
    "title": "Class Minimap | Harvest Grove code documentation",
    "keywords": "Class Minimap Inheritance object Minimap Implements ITaskSavable Namespace: Systems.Minimap Assembly: cs.temp.dll.dll Syntax public class Minimap : MonoBehaviour, ITaskSavable Fields OnMinimapInit Declaration public static Action<int, int> OnMinimapInit Field Value Type Description Action<, ><int, int> Properties Priority Declaration public int Priority { get; } Property Value Type Description int Methods Construct(IPlayerTransfromService, IGameData, ITileMapService, InputsMap) Declaration public void Construct(IPlayerTransfromService playerTransformService, IGameData gameData, ITileMapService tileMapService, InputsMap inputsMap) Parameters Type Name Description IPlayerTransfromService playerTransformService IGameData gameData ITileMapService tileMapService InputsMap inputsMap Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Implements ITaskSavable"
  },
  "api/Systems.Minimap.MinimapSavingData.html": {
    "href": "api/Systems.Minimap.MinimapSavingData.html",
    "title": "Class MinimapSavingData | Harvest Grove code documentation",
    "keywords": "Class MinimapSavingData Inheritance object MinimapSavingData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Minimap Assembly: cs.temp.dll.dll Syntax public class MinimapSavingData Fields revealedTiles Declaration public List<Vector2Int> revealedTiles Field Value Type Description List<><Vector2Int>"
  },
  "api/Systems.QuestSystem.html": {
    "href": "api/Systems.QuestSystem.html",
    "title": "Namespace Systems.QuestSystem | Harvest Grove code documentation",
    "keywords": "Namespace Systems.QuestSystem Classes QuestContainerUI The QuestContainerUI class is responsible for managing the UI for the quest book. It handles the creation and display of quest pages, navigation between pages, and the assignment of quests."
  },
  "api/Systems.QuestSystem.QuestContainerUI.html": {
    "href": "api/Systems.QuestSystem.QuestContainerUI.html",
    "title": "Class QuestContainerUI | Harvest Grove code documentation",
    "keywords": "Class QuestContainerUI The QuestContainerUI class is responsible for managing the UI for the quest book. It handles the creation and display of quest pages, navigation between pages, and the assignment of quests. Inheritance object QuestContainerUI Namespace: Systems.QuestSystem Assembly: cs.temp.dll.dll Syntax public class QuestContainerUI : MonoBehaviour Methods AddQuestTest() Declaration public void AddQuestTest() CompleteQuestTest() Declaration public void CompleteQuestTest() DecreasePagesIndex() Decreases the current page index and updates the navigation buttons. Declaration public void DecreasePagesIndex() IncreasePagesIndex() Increases the current page index and updates the navigation buttons. Declaration public void IncreasePagesIndex()"
  },
  "api/Systems.Rain.html": {
    "href": "api/Systems.Rain.html",
    "title": "Namespace Systems.Rain | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Rain Classes RainingInfo RainManagementSO RainManager This class is responsible for rain management"
  },
  "api/Systems.Rain.RainingInfo.html": {
    "href": "api/Systems.Rain.RainingInfo.html",
    "title": "Class RainingInfo | Harvest Grove code documentation",
    "keywords": "Class RainingInfo Inheritance object RainingInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Rain Assembly: cs.temp.dll.dll Syntax public class RainingInfo Fields CurrentParticles Declaration public int CurrentParticles Field Value Type Description int IsRaining Declaration public bool IsRaining Field Value Type Description bool MaxParticles Declaration public int MaxParticles Field Value Type Description int NextAvailableRainAt Declaration public TimeData NextAvailableRainAt Field Value Type Description TimeData StartRainAt Declaration public TimeData StartRainAt Field Value Type Description TimeData StopRainAt Declaration public TimeData StopRainAt Field Value Type Description TimeData Methods LoadRaining() Declaration public void LoadRaining() RainStopped() Declaration public void RainStopped() SaveRaining() Declaration public void SaveRaining()"
  },
  "api/Systems.Rain.RainManagementSO.html": {
    "href": "api/Systems.Rain.RainManagementSO.html",
    "title": "Class RainManagementSO | Harvest Grove code documentation",
    "keywords": "Class RainManagementSO Inheritance object RainManagementSO Namespace: Systems.Rain Assembly: cs.temp.dll.dll Syntax public class RainManagementSO : ScriptableObject Fields MaxDaysBetweenRains Declaration public int MaxDaysBetweenRains Field Value Type Description int MaxHoursRainDuration Declaration public int MaxHoursRainDuration Field Value Type Description int MaxRainIntensity Declaration public int MaxRainIntensity Field Value Type Description int MaxTimeWhenRainMayStart Declaration public int MaxTimeWhenRainMayStart Field Value Type Description int MinDaysBetweenRains Declaration public int MinDaysBetweenRains Field Value Type Description int MinHoursRainDuration Declaration public int MinHoursRainDuration Field Value Type Description int MinRainIntensity Declaration public int MinRainIntensity Field Value Type Description int MinTimeWhenRainMayStart Declaration public int MinTimeWhenRainMayStart Field Value Type Description int"
  },
  "api/Systems.Rain.RainManager.html": {
    "href": "api/Systems.Rain.RainManager.html",
    "title": "Class RainManager | Harvest Grove code documentation",
    "keywords": "Class RainManager This class is responsible for rain management Inheritance object RainManager Implements ITaskSavable Namespace: Systems.Rain Assembly: cs.temp.dll.dll Syntax public class RainManager : MonoBehaviour, ITaskSavable Fields IsRaining Declaration public static bool IsRaining Field Value Type Description bool OnRainStarted Declaration public static Action OnRainStarted Field Value Type Description Action OnRainStopped Declaration public static Action OnRainStopped Field Value Type Description Action Properties Priority Declaration public int Priority { get; } Property Value Type Description int Methods Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Implements ITaskSavable"
  },
  "api/Systems.Saving._Schema.html": {
    "href": "api/Systems.Saving._Schema.html",
    "title": "Namespace Systems.Saving._Schema | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Saving._Schema Classes WorldDirectories"
  },
  "api/Systems.Saving._Schema.WorldDirectories.html": {
    "href": "api/Systems.Saving._Schema.WorldDirectories.html",
    "title": "Class WorldDirectories | Harvest Grove code documentation",
    "keywords": "Class WorldDirectories Inheritance object WorldDirectories Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Saving._Schema Assembly: cs.temp.dll.dll Syntax public static class WorldDirectories Properties IslandDirectoriesDictionary Dictionary for all of the islands under \"Islands\" folder Declaration public static Dictionary<string, string> IslandDirectoriesDictionary { get; } Property Value Type Description Dictionary<, ><string, string> IslandsRootDirectory Declaration public static string IslandsRootDirectory { get; } Property Value Type Description string PlayerInventories Declaration public static string PlayerInventories { get; } Property Value Type Description string PlayerPlayerData Declaration public static string PlayerPlayerData { get; } Property Value Type Description string PlayerQuests Declaration public static string PlayerQuests { get; } Property Value Type Description string PlayerRootDirectory Declaration public static string PlayerRootDirectory { get; } Property Value Type Description string PlayerUnlockedItems Declaration public static string PlayerUnlockedItems { get; } Property Value Type Description string SavingPath Root folder for worlds Declaration public static string SavingPath { get; } Property Value Type Description string WorldRootDirectory Includes the world name.. i.e. /Worlds/{Name} Declaration public static string WorldRootDirectory { get; } Property Value Type Description string WorldSettingsDirectory Declaration public static string WorldSettingsDirectory { get; } Property Value Type Description string Methods SaveDirectories(List<string>) Declaration public static void SaveDirectories(List<string> paths) Parameters Type Name Description List<><string> paths"
  },
  "api/Systems.Saving.Autosave.html": {
    "href": "api/Systems.Saving.Autosave.html",
    "title": "Class Autosave | Harvest Grove code documentation",
    "keywords": "Class Autosave Inheritance object Autosave Namespace: Systems.Saving Assembly: cs.temp.dll.dll Syntax public class Autosave : MonoBehaviour Fields MinutesBeforeSaving Declaration public static float MinutesBeforeSaving Field Value Type Description float Methods Construct(IPlayerData) Declaration public void Construct(IPlayerData playerData) Parameters Type Name Description IPlayerData playerData"
  },
  "api/Systems.Saving.Conventers.CustomDictionaryVectorConverter-1.html": {
    "href": "api/Systems.Saving.Conventers.CustomDictionaryVectorConverter-1.html",
    "title": "Class CustomDictionaryVectorConverter<T> | Harvest Grove code documentation",
    "keywords": "Class CustomDictionaryVectorConverter<T> Inheritance object CustomDictionaryVectorConverter<T> Namespace: Systems.Saving.Conventers Assembly: cs.temp.dll.dll Syntax public class CustomDictionaryVectorConverter<T> : JsonConverter<Dictionary<Vector2, T>> Type Parameters Name Description T Methods ReadJson(JsonReader, Type, Dictionary<Vector2, T>, bool, JsonSerializer) Declaration public override Dictionary<Vector2, T> ReadJson(JsonReader reader, Type objectType, Dictionary<Vector2, T> existingValue, bool hasExistingValue, JsonSerializer serializer) Parameters Type Name Description JsonReader reader Type objectType Dictionary<, ><Vector2, T> existingValue bool hasExistingValue JsonSerializer serializer Returns Type Description Dictionary<, ><Vector2, T> WriteJson(JsonWriter, Dictionary<Vector2, T>, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, Dictionary<Vector2, T> value, JsonSerializer serializer) Parameters Type Name Description JsonWriter writer Dictionary<, ><Vector2, T> value JsonSerializer serializer"
  },
  "api/Systems.Saving.Conventers.html": {
    "href": "api/Systems.Saving.Conventers.html",
    "title": "Namespace Systems.Saving.Conventers | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Saving.Conventers Classes CustomDictionaryVectorConverter<T> VectorConverter"
  },
  "api/Systems.Saving.Conventers.VectorConverter.html": {
    "href": "api/Systems.Saving.Conventers.VectorConverter.html",
    "title": "Class VectorConverter | Harvest Grove code documentation",
    "keywords": "Class VectorConverter Inheritance object VectorConverter Namespace: Systems.Saving.Conventers Assembly: cs.temp.dll.dll Syntax public class VectorConverter : JsonConverter Methods CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description bool ReadJson(JsonReader, Type, object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description JsonReader reader Type objectType object existingValue JsonSerializer serializer Returns Type Description object WriteJson(JsonWriter, object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description JsonWriter writer object value JsonSerializer serializer"
  },
  "api/Systems.Saving.Helpers.AESData.html": {
    "href": "api/Systems.Saving.Helpers.AESData.html",
    "title": "Class AESData | Harvest Grove code documentation",
    "keywords": "Class AESData Inheritance object AESData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Saving.Helpers Assembly: cs.temp.dll.dll Syntax public static class AESData Fields IV Declaration public static string IV Field Value Type Description string KEY Declaration public static string KEY Field Value Type Description string"
  },
  "api/Systems.Saving.Helpers.DirectoriesHelper.html": {
    "href": "api/Systems.Saving.Helpers.DirectoriesHelper.html",
    "title": "Class DirectoriesHelper | Harvest Grove code documentation",
    "keywords": "Class DirectoriesHelper Inheritance object DirectoriesHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Saving.Helpers Assembly: cs.temp.dll.dll Syntax public static class DirectoriesHelper Methods CreateDirectory(string) Creates a directory Declaration public static bool CreateDirectory(string path) Parameters Type Name Description string path Path to create Returns Type Description bool True if created without any errors"
  },
  "api/Systems.Saving.Helpers.html": {
    "href": "api/Systems.Saving.Helpers.html",
    "title": "Namespace Systems.Saving.Helpers | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Saving.Helpers Classes AESData DirectoriesHelper Enums SavingPriorityEnum"
  },
  "api/Systems.Saving.Helpers.SavingPriorityEnum.html": {
    "href": "api/Systems.Saving.Helpers.SavingPriorityEnum.html",
    "title": "Enum SavingPriorityEnum | Harvest Grove code documentation",
    "keywords": "Enum SavingPriorityEnum Namespace: Systems.Saving.Helpers Assembly: cs.temp.dll.dll Syntax public enum SavingPriorityEnum Fields Name Description Cooking DestroyingObjects ForestManager Harbor Health Honey Minimap Rain SeedGrowing SellerBETA Spawner TileGrid Timer"
  },
  "api/Systems.Saving.html": {
    "href": "api/Systems.Saving.html",
    "title": "Namespace Systems.Saving | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Saving Classes Autosave ResetSOHolder SavingAndLoadingAES SavingAndLoadingManager Interfaces ISavableWithPath Interface for asynchronous saving, which also has path ITaskSavable Interface for asynchronous saving!"
  },
  "api/Systems.Saving.ISavableWithPath.html": {
    "href": "api/Systems.Saving.ISavableWithPath.html",
    "title": "Interface ISavableWithPath | Harvest Grove code documentation",
    "keywords": "Interface ISavableWithPath Interface for asynchronous saving, which also has path Inherited Members ITaskSavable.Save(IslandsDictionaryNames) ITaskSavable.Load(IslandsDictionaryNames) ITaskSavable.Initialize(IslandsDictionaryNames) ITaskSavable.Priority Namespace: Systems.Saving Assembly: cs.temp.dll.dll Syntax public interface ISavableWithPath : ITaskSavable Methods SavingPath(IslandsDictionaryNames) Declaration string SavingPath(IslandsDictionaryNames currentIsland) Parameters Type Name Description IslandsDictionaryNames currentIsland Returns Type Description string"
  },
  "api/Systems.Saving.ITaskSavable.html": {
    "href": "api/Systems.Saving.ITaskSavable.html",
    "title": "Interface ITaskSavable | Harvest Grove code documentation",
    "keywords": "Interface ITaskSavable Interface for asynchronous saving! Namespace: Systems.Saving Assembly: cs.temp.dll.dll Syntax public interface ITaskSavable Properties Priority Determines in which order the data will be load and saved Declaration int Priority { get; } Property Value Type Description int Methods Initialize(IslandsDictionaryNames) Is called when the island being spawned for the first time Declaration UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Is called when the world is loading Declaration UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Is called when the world is saving Declaration UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask"
  },
  "api/Systems.Saving.ResetSOHolder.html": {
    "href": "api/Systems.Saving.ResetSOHolder.html",
    "title": "Class ResetSOHolder | Harvest Grove code documentation",
    "keywords": "Class ResetSOHolder Inheritance object ResetSOHolder Namespace: Systems.Saving Assembly: cs.temp.dll.dll Syntax public class ResetSOHolder : ScriptableObject Fields Resetables Declaration public Object[] Resetables Field Value Type Description Object[] Methods ResetAllData() Declaration public void ResetAllData()"
  },
  "api/Systems.Saving.SavingAndLoadingAES.html": {
    "href": "api/Systems.Saving.SavingAndLoadingAES.html",
    "title": "Class SavingAndLoadingAES | Harvest Grove code documentation",
    "keywords": "Class SavingAndLoadingAES Inheritance object SavingAndLoadingAES Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Saving Assembly: cs.temp.dll.dll Syntax public static class SavingAndLoadingAES Methods LoadEncryptedData<T>(string, JsonSerializerSettings) This method reads the encrypted data Declaration public static UniTask<T> LoadEncryptedData<T>(string path, JsonSerializerSettings settings = null) Parameters Type Name Description string path Which file to read JsonSerializerSettings settings Returns Type Description UniTask<><T> Data from the file Type Parameters Name Description T ReadJsonData<T>(string, JsonSerializerSettings) Declaration public static T ReadJsonData<T>(string path, JsonSerializerSettings settings = null) Parameters Type Name Description string path JsonSerializerSettings settings Returns Type Description T Type Parameters Name Description T SaveEncryptedData<T>(T, string, JsonSerializerSettings) This method writes encrypted data to a Filestream Declaration public static UniTask<bool> SaveEncryptedData<T>(T data, string filePath, JsonSerializerSettings settings = null) Parameters Type Name Description T data Data for saving string filePath JsonSerializerSettings settings Returns Type Description UniTask<><bool> True if saved without any errors Type Parameters Name Description T WriteJsonData<T>(T, string, JsonSerializerSettings) Declaration public static void WriteJsonData<T>(T data, string filePath, JsonSerializerSettings settings = null) Parameters Type Name Description T data string filePath JsonSerializerSettings settings Type Parameters Name Description T"
  },
  "api/Systems.Saving.SavingAndLoadingManager.html": {
    "href": "api/Systems.Saving.SavingAndLoadingManager.html",
    "title": "Class SavingAndLoadingManager | Harvest Grove code documentation",
    "keywords": "Class SavingAndLoadingManager Inheritance object SavingAndLoadingManager Namespace: Systems.Saving Assembly: cs.temp.dll.dll Syntax public class SavingAndLoadingManager : MonoBehaviour Fields OnAddAfterPlayerLoaded Declaration public static Action<ITaskSavable> OnAddAfterPlayerLoaded Field Value Type Description Action<><ITaskSavable> OnAddISavable Declaration public static Action<ITaskSavable> OnAddISavable Field Value Type Description Action<><ITaskSavable> OnAfterPlayerSpawned Declaration public static Func<UniTask> OnAfterPlayerSpawned Field Value Type Description Func<><UniTask> OnFirstInitialization Declaration public static Func<UniTask> OnFirstInitialization Field Value Type Description Func<><UniTask> OnLoadData Declaration public static Func<UniTask> OnLoadData Field Value Type Description Func<><UniTask> OnSaveData Declaration public static Func<UniTask> OnSaveData Field Value Type Description Func<><UniTask> Methods Construct(IGameData) Declaration public void Construct(IGameData tileMapService) Parameters Type Name Description IGameData tileMapService"
  },
  "api/Systems.Saving.SavingSOs.AttackingVegetableSO.html": {
    "href": "api/Systems.Saving.SavingSOs.AttackingVegetableSO.html",
    "title": "Class AttackingVegetableSO | Harvest Grove code documentation",
    "keywords": "Class AttackingVegetableSO Inheritance object AttackingVegetableSO Implements IResetableSO Namespace: Systems.Saving.SavingSOs Assembly: cs.temp.dll.dll Syntax public class AttackingVegetableSO : ScriptableObject, IResetableSO Fields CropsPositions Declaration public List<Vector2> CropsPositions Field Value Type Description List<><Vector2> Methods AddCropPosition(Vector2) Declaration public void AddCropPosition(Vector2 position) Parameters Type Name Description Vector2 position LoadAttackingVegetable() Declaration public UniTask LoadAttackingVegetable() Returns Type Description UniTask RemoveCropPosition(Vector2) Declaration public void RemoveCropPosition(Vector2 position) Parameters Type Name Description Vector2 position ResetSO() Declaration public void ResetSO() SaveAttackingVegetable() Declaration public UniTask SaveAttackingVegetable() Returns Type Description UniTask Implements IResetableSO"
  },
  "api/Systems.Saving.SavingSOs.CauldronSavingSO.html": {
    "href": "api/Systems.Saving.SavingSOs.CauldronSavingSO.html",
    "title": "Class CauldronSavingSO | Harvest Grove code documentation",
    "keywords": "Class CauldronSavingSO Inheritance object CauldronSavingSO Implements IResetableSO Namespace: Systems.Saving.SavingSOs Assembly: cs.temp.dll.dll Syntax public class CauldronSavingSO : ScriptableObject, IResetableSO Methods AddCauldron(Vector2) Declaration public void AddCauldron(Vector2 cauldron) Parameters Type Name Description Vector2 cauldron LoadCauldrons() Declaration public UniTask LoadCauldrons() Returns Type Description UniTask RemoveCauldron(Vector2) Declaration public void RemoveCauldron(Vector2 cauldron) Parameters Type Name Description Vector2 cauldron ResetSO() Declaration public void ResetSO() SaveCauldrons() Declaration public UniTask SaveCauldrons() Returns Type Description UniTask Implements IResetableSO"
  },
  "api/Systems.Saving.SavingSOs.ChestSavingSO.html": {
    "href": "api/Systems.Saving.SavingSOs.ChestSavingSO.html",
    "title": "Class ChestSavingSO | Harvest Grove code documentation",
    "keywords": "Class ChestSavingSO Inheritance object ChestSavingSO Implements IResetableSO Namespace: Systems.Saving.SavingSOs Assembly: cs.temp.dll.dll Syntax public class ChestSavingSO : ScriptableObject, IResetableSO Fields ChestsList Declaration public List<Chest> ChestsList Field Value Type Description List<><Chest> Methods AddChest(Chest) Declaration public void AddChest(Chest chest) Parameters Type Name Description Chest chest DestroyChest(Vector2Int) Declaration public void DestroyChest(Vector2Int pos) Parameters Type Name Description Vector2Int pos LoadChests(ItemDatabaseSO) Declaration public UniTask LoadChests(ItemDatabaseSO itemDatabase) Parameters Type Name Description ItemDatabaseSO itemDatabase Returns Type Description UniTask RemoveChest(Chest) Declaration public void RemoveChest(Chest chest) Parameters Type Name Description Chest chest ResetSO() Declaration public void ResetSO() SaveChests() Declaration public UniTask SaveChests() Returns Type Description UniTask Implements IResetableSO"
  },
  "api/Systems.Saving.SavingSOs.ChestSavingStruct.html": {
    "href": "api/Systems.Saving.SavingSOs.ChestSavingStruct.html",
    "title": "Struct ChestSavingStruct | Harvest Grove code documentation",
    "keywords": "Struct ChestSavingStruct Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Systems.Saving.SavingSOs Assembly: cs.temp.dll.dll Syntax public struct ChestSavingStruct Fields ChestID Declaration public ushort ChestID Field Value Type Description ushort ChestPosition Declaration public Vector2 ChestPosition Field Value Type Description Vector2 Items Declaration public List<InventorySavingStruct> Items Field Value Type Description List<><InventorySavingStruct>"
  },
  "api/Systems.Saving.SavingSOs.DeathTreeSO.html": {
    "href": "api/Systems.Saving.SavingSOs.DeathTreeSO.html",
    "title": "Class DeathTreeSO | Harvest Grove code documentation",
    "keywords": "Class DeathTreeSO Inheritance object DeathTreeSO Implements IResetableSO Namespace: Systems.Saving.SavingSOs Assembly: cs.temp.dll.dll Syntax public class DeathTreeSO : ScriptableObject, IResetableSO Fields IslandSpawned Declaration public string IslandSpawned Field Value Type Description string IsTreeSpawned Declaration public bool IsTreeSpawned Field Value Type Description bool TreePosition Declaration public Vector2 TreePosition Field Value Type Description Vector2 TreePrefab Declaration public GameObject TreePrefab Field Value Type Description GameObject Methods LoadData() Declaration public UniTask LoadData() Returns Type Description UniTask ResetSO() Declaration public void ResetSO() SaveTreeData(Vector2, string) Declaration public UniTask SaveTreeData(Vector2 treePosition, string islandSpawned) Parameters Type Name Description Vector2 treePosition string islandSpawned Returns Type Description UniTask TreeKilled() Declaration public void TreeKilled() Implements IResetableSO"
  },
  "api/Systems.Saving.SavingSOs.html": {
    "href": "api/Systems.Saving.SavingSOs.html",
    "title": "Namespace Systems.Saving.SavingSOs | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Saving.SavingSOs Classes AttackingVegetableSO CauldronSavingSO ChestSavingSO DeathTreeSO PlayerDataSO Structs ChestSavingStruct Interfaces IResetableSO"
  },
  "api/Systems.Saving.SavingSOs.IResetableSO.html": {
    "href": "api/Systems.Saving.SavingSOs.IResetableSO.html",
    "title": "Interface IResetableSO | Harvest Grove code documentation",
    "keywords": "Interface IResetableSO Namespace: Systems.Saving.SavingSOs Assembly: cs.temp.dll.dll Syntax public interface IResetableSO Methods ResetSO() Declaration void ResetSO()"
  },
  "api/Systems.Saving.SavingSOs.PlayerData.html": {
    "href": "api/Systems.Saving.SavingSOs.PlayerData.html",
    "title": "Namespace Systems.Saving.SavingSOs.PlayerData | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Saving.SavingSOs.PlayerData Classes PlayerDataDTO"
  },
  "api/Systems.Saving.SavingSOs.PlayerData.PlayerDataDTO.html": {
    "href": "api/Systems.Saving.SavingSOs.PlayerData.PlayerDataDTO.html",
    "title": "Class PlayerDataDTO | Harvest Grove code documentation",
    "keywords": "Class PlayerDataDTO Inheritance object PlayerDataDTO Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Saving.SavingSOs.PlayerData Assembly: cs.temp.dll.dll Syntax public class PlayerDataDTO Fields CurrentTime Declaration public TimeData CurrentTime Field Value Type Description TimeData FirstSpawnPosition Declaration public Vector2 FirstSpawnPosition Field Value Type Description Vector2 ForestSpawnPosition Declaration public Vector2 ForestSpawnPosition Field Value Type Description Vector2 HealthAmount Declaration public int HealthAmount Field Value Type Description int HomeHarborSpawnPosition Declaration public Vector2 HomeHarborSpawnPosition Field Value Type Description Vector2 HungerUnits Declaration public List<float> HungerUnits Field Value Type Description List<><float> IsDead Declaration public bool IsDead Field Value Type Description bool LastAvailableAnimalID Declaration public int LastAvailableAnimalID Field Value Type Description int LastCampfirePosition Declaration public Vector2 LastCampfirePosition Field Value Type Description Vector2 LastFarmHousePosition Declaration public Vector2 LastFarmHousePosition Field Value Type Description Vector2 LastPlayerPosition Declaration public Vector2 LastPlayerPosition Field Value Type Description Vector2 LastVisitedDays Declaration public Dictionary<string, int> LastVisitedDays Field Value Type Description Dictionary<, ><string, int> LeftHomeislandTime Declaration public TimeData LeftHomeislandTime Field Value Type Description TimeData MoneyAmount Declaration public int MoneyAmount Field Value Type Description int ThirstUnits Declaration public List<float> ThirstUnits Field Value Type Description List<><float> TutorialIndex Declaration public int TutorialIndex Field Value Type Description int"
  },
  "api/Systems.Saving.SavingSOs.PlayerDataSO.html": {
    "href": "api/Systems.Saving.SavingSOs.PlayerDataSO.html",
    "title": "Class PlayerDataSO | Harvest Grove code documentation",
    "keywords": "Class PlayerDataSO Inheritance object PlayerDataSO Implements IResetableSO Namespace: Systems.Saving.SavingSOs Assembly: cs.temp.dll.dll Syntax public class PlayerDataSO : ScriptableObject, IResetableSO Fields CurrentTime Declaration public TimeData CurrentTime Field Value Type Description TimeData FirstSpawnPosition Declaration public Vector2 FirstSpawnPosition Field Value Type Description Vector2 ForestSpawnPosition Declaration public Vector2 ForestSpawnPosition Field Value Type Description Vector2 HealthAmount Declaration public int HealthAmount Field Value Type Description int HomeHarborSpawnPosition Declaration public Vector2 HomeHarborSpawnPosition Field Value Type Description Vector2 HungerUnits Declaration public List<float> HungerUnits Field Value Type Description List<><float> IsDead Declaration public bool IsDead Field Value Type Description bool LastAvailableAnimalID Declaration public int LastAvailableAnimalID Field Value Type Description int LastCampfirePosition Declaration public Vector2 LastCampfirePosition Field Value Type Description Vector2 LastFarmHousePosition Declaration public Vector2 LastFarmHousePosition Field Value Type Description Vector2 LastPlayerPosition Declaration public Vector2 LastPlayerPosition Field Value Type Description Vector2 LeftHomeislandTime Declaration public TimeData LeftHomeislandTime Field Value Type Description TimeData MoneyAmount Declaration public int MoneyAmount Field Value Type Description int ThirstUnits Declaration public List<float> ThirstUnits Field Value Type Description List<><float> TutorialIndex Declaration public int TutorialIndex Field Value Type Description int Methods AfterPlayerSpawned() Declaration public UniTask AfterPlayerSpawned() Returns Type Description UniTask FirstInitialization(bool) Declaration public UniTask FirstInitialization(bool isTravelling) Parameters Type Name Description bool isTravelling Returns Type Description UniTask GetLastVisitedDay(IslandsDictionaryNames) Declaration public int GetLastVisitedDay(IslandsDictionaryNames island) Parameters Type Name Description IslandsDictionaryNames island Returns Type Description int LoadData() Declaration public UniTask LoadData() Returns Type Description UniTask ResetSO() Declaration public void ResetSO() SaveData(bool) Declaration public UniTask SaveData(bool isTravelling) Parameters Type Name Description bool isTravelling Returns Type Description UniTask SetLastVisitedDay(IslandsDictionaryNames, int) Declaration public void SetLastVisitedDay(IslandsDictionaryNames island, int day) Parameters Type Name Description IslandsDictionaryNames island int day Implements IResetableSO"
  },
  "api/Systems.Saving.SpecificDataSaving.Animals.AnimalSavingReason.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Animals.AnimalSavingReason.html",
    "title": "Enum AnimalSavingReason | Harvest Grove code documentation",
    "keywords": "Enum AnimalSavingReason Represents the different reasons for saving animal data Namespace: Systems.Saving.SpecificDataSaving.Animals Assembly: cs.temp.dll.dll Syntax public enum AnimalSavingReason Fields Name Description AnimalHousing BeeHousing Honey ScaterringData SpawnedAnimals TroughData"
  },
  "api/Systems.Saving.SpecificDataSaving.Animals.AnimalsDirectory.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Animals.AnimalsDirectory.html",
    "title": "Enum AnimalsDirectory | Harvest Grove code documentation",
    "keywords": "Enum AnimalsDirectory Namespace: Systems.Saving.SpecificDataSaving.Animals Assembly: cs.temp.dll.dll Syntax public enum AnimalsDirectory Fields Name Description Animals FeedingInfo"
  },
  "api/Systems.Saving.SpecificDataSaving.Animals.AnimalsSaving.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Animals.AnimalsSaving.html",
    "title": "Class AnimalsSaving | Harvest Grove code documentation",
    "keywords": "Class AnimalsSaving Inheritance object AnimalsSaving Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Saving.SpecificDataSaving.Animals Assembly: cs.temp.dll.dll Syntax public static class AnimalsSaving Methods FilePath(IslandsDictionaryNames, AnimalSavingReason, AnimalsDirectory) Declaration public static string FilePath(IslandsDictionaryNames island, AnimalSavingReason reason, AnimalsDirectory animalsDirectory) Parameters Type Name Description IslandsDictionaryNames island AnimalSavingReason reason AnimalsDirectory animalsDirectory Returns Type Description string SaveAnimals(string, SpawnerList) Declaration public static void SaveAnimals(string path, SpawnerList spawnerList) Parameters Type Name Description string path SpawnerList spawnerList"
  },
  "api/Systems.Saving.SpecificDataSaving.Animals.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Animals.html",
    "title": "Namespace Systems.Saving.SpecificDataSaving.Animals | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Saving.SpecificDataSaving.Animals Classes AnimalsSaving Enums AnimalSavingReason Represents the different reasons for saving animal data AnimalsDirectory"
  },
  "api/Systems.Saving.SpecificDataSaving.Buildable.BuildableSaving.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Buildable.BuildableSaving.html",
    "title": "Class BuildableSaving | Harvest Grove code documentation",
    "keywords": "Class BuildableSaving Inheritance object BuildableSaving Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Saving.SpecificDataSaving.Buildable Assembly: cs.temp.dll.dll Syntax public static class BuildableSaving Methods GetFilePath(BuildableType) Declaration public static string GetFilePath(BuildableType type) Parameters Type Name Description BuildableType type Returns Type Description string LoadBuildable(MapBuildingsDataSO) Declaration public static UniTask LoadBuildable(MapBuildingsDataSO mapBuildingsDataSO) Parameters Type Name Description MapBuildingsDataSO mapBuildingsDataSO Returns Type Description UniTask SaveBuildable(MapBuildingsDataSO) Declaration public static UniTask SaveBuildable(MapBuildingsDataSO mapBuildingsDataSO) Parameters Type Name Description MapBuildingsDataSO mapBuildingsDataSO Returns Type Description UniTask"
  },
  "api/Systems.Saving.SpecificDataSaving.Buildable.BuildableType.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Buildable.BuildableType.html",
    "title": "Enum BuildableType | Harvest Grove code documentation",
    "keywords": "Enum BuildableType When saving any buildable, choose which type it is Namespace: Systems.Saving.SpecificDataSaving.Buildable Assembly: cs.temp.dll.dll Syntax public enum BuildableType Fields Name Description Buildings Campfire Construction"
  },
  "api/Systems.Saving.SpecificDataSaving.Buildable.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Buildable.html",
    "title": "Namespace Systems.Saving.SpecificDataSaving.Buildable | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Saving.SpecificDataSaving.Buildable Classes BuildableSaving Enums BuildableType When saving any buildable, choose which type it is"
  },
  "api/Systems.Saving.SpecificDataSaving.HungerUnits.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.HungerUnits.html",
    "title": "Namespace Systems.Saving.SpecificDataSaving.HungerUnits | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Saving.SpecificDataSaving.HungerUnits Classes SavingHungerUnits"
  },
  "api/Systems.Saving.SpecificDataSaving.HungerUnits.SavingHungerUnits.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.HungerUnits.SavingHungerUnits.html",
    "title": "Class SavingHungerUnits | Harvest Grove code documentation",
    "keywords": "Class SavingHungerUnits Inheritance object SavingHungerUnits Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Saving.SpecificDataSaving.HungerUnits Assembly: cs.temp.dll.dll Syntax public static class SavingHungerUnits Methods LoadPlayerStats(List<float>, List<float>, IManagerData) Declaration public static void LoadPlayerStats(List<float> loadedHunger, List<float> loadedThirst, IManagerData gameManager) Parameters Type Name Description List<><float> loadedHunger List<><float> loadedThirst IManagerData gameManager SaveUnits(List<float>, List<float>, IManagerData) Declaration public static void SaveUnits(List<float> hungerUnits, List<float> thirstUnits, IManagerData gameManager) Parameters Type Name Description List<><float> hungerUnits List<><float> thirstUnits IManagerData gameManager"
  },
  "api/Systems.Saving.SpecificDataSaving.Inventories.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Inventories.html",
    "title": "Namespace Systems.Saving.SpecificDataSaving.Inventories | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Saving.SpecificDataSaving.Inventories Classes InventoriesSaving Structs InventorySavingStruct Holds only the most important data for saving the inventory"
  },
  "api/Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.html",
    "title": "Class InventoriesSaving | Harvest Grove code documentation",
    "keywords": "Class InventoriesSaving Inheritance object InventoriesSaving Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Saving.SpecificDataSaving.Inventories Assembly: cs.temp.dll.dll Syntax public static class InventoriesSaving Properties DeathBackpackFile Declaration public static string DeathBackpackFile { get; } Property Value Type Description string DeathHotbarFile Declaration public static string DeathHotbarFile { get; } Property Value Type Description string Methods ConvertSlotsToStruct(List<InventorySlot>) Declaration public static List<InventorySavingStruct> ConvertSlotsToStruct(List<InventorySlot> slots) Parameters Type Name Description List<><InventorySlot> slots Returns Type Description List<><InventorySavingStruct> ConvertStructToSlots(List<InventorySavingStruct>, ItemDatabaseSO) Declaration public static List<InventorySlot> ConvertStructToSlots(List<InventorySavingStruct> loadedData, ItemDatabaseSO itemDatabase) Parameters Type Name Description List<><InventorySavingStruct> loadedData ItemDatabaseSO itemDatabase Returns Type Description List<><InventorySlot> LoadInventories(ItemDatabaseSO, IInventoryService) Declaration public static UniTask LoadInventories(ItemDatabaseSO itemDatabase, IInventoryService inventoryService) Parameters Type Name Description ItemDatabaseSO itemDatabase IInventoryService inventoryService Returns Type Description UniTask LoadSlots(ItemDatabaseSO, string) Declaration public static UniTask<List<InventorySlot>> LoadSlots(ItemDatabaseSO itemDatabase, string filePath) Parameters Type Name Description ItemDatabaseSO itemDatabase string filePath Returns Type Description UniTask<><List<><InventorySlot>> SaveDeathInventories(bool, HotBarInventory, BackpackInventory) Saves both inventories when the player dies. If the player died again and he didn't retrieve the inventories, the will be deleted Declaration public static UniTask SaveDeathInventories(bool isTreeSpawned, HotBarInventory hotBarInventory, BackpackInventory backpackInventory) Parameters Type Name Description bool isTreeSpawned HotBarInventory hotBarInventory BackpackInventory backpackInventory Returns Type Description UniTask SaveInventories(IInventoryService) Declaration public static UniTask SaveInventories(IInventoryService inventoryService) Parameters Type Name Description IInventoryService inventoryService Returns Type Description UniTask"
  },
  "api/Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct.html",
    "title": "Struct InventorySavingStruct | Harvest Grove code documentation",
    "keywords": "Struct InventorySavingStruct Holds only the most important data for saving the inventory Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Systems.Saving.SpecificDataSaving.Inventories Assembly: cs.temp.dll.dll Syntax public struct InventorySavingStruct Constructors InventorySavingStruct(int, string, ushort, int, float) Declaration public InventorySavingStruct(int id, string customName, ushort durability, int itemsAmount, float waterValue) Parameters Type Name Description int id string customName ushort durability int itemsAmount float waterValue Fields CustomName Declaration public string CustomName Field Value Type Description string Durability Declaration public ushort Durability Field Value Type Description ushort ID Declaration public int ID Field Value Type Description int ItemsAmount Declaration public int ItemsAmount Field Value Type Description int WaterValue Declaration public float WaterValue Field Value Type Description float"
  },
  "api/Systems.Saving.SpecificDataSaving.Map.HarborPositionsSaving.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Map.HarborPositionsSaving.html",
    "title": "Class HarborPositionsSaving | Harvest Grove code documentation",
    "keywords": "Class HarborPositionsSaving Inheritance object HarborPositionsSaving Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Saving.SpecificDataSaving.Map Assembly: cs.temp.dll.dll Syntax public static class HarborPositionsSaving Methods GetPath(string) Declaration public static string GetPath(string islandName) Parameters Type Name Description string islandName Returns Type Description string LoadPositions(string) Declaration public static UniTask<HarborData> LoadPositions(string path) Parameters Type Name Description string path Returns Type Description UniTask<><HarborData> SavePositions(HarborData, string) Declaration public static void SavePositions(HarborData harborSaving, string path) Parameters Type Name Description HarborData harborSaving string path"
  },
  "api/Systems.Saving.SpecificDataSaving.Map.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Map.html",
    "title": "Namespace Systems.Saving.SpecificDataSaving.Map | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Saving.SpecificDataSaving.Map Classes HarborPositionsSaving MapSavingAndLoading"
  },
  "api/Systems.Saving.SpecificDataSaving.Map.MapSavingAndLoading.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Map.MapSavingAndLoading.html",
    "title": "Class MapSavingAndLoading | Harvest Grove code documentation",
    "keywords": "Class MapSavingAndLoading Inheritance object MapSavingAndLoading Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Saving.SpecificDataSaving.Map Assembly: cs.temp.dll.dll Syntax public static class MapSavingAndLoading Methods GetOriginalDataPath(string, string) Declaration public static string GetOriginalDataPath(string tilemapsType, string island) Parameters Type Name Description string tilemapsType string island Returns Type Description string GetTilePath(string, string) Declaration public static string GetTilePath(string tilemapsType, string island) Parameters Type Name Description string tilemapsType string island Returns Type Description string GetTilesDirectory(string) Declaration public static string GetTilesDirectory(string island) Parameters Type Name Description string island Returns Type Description string LoadTiles(string, IslandsDictionaryNames) Loads tiles from the computer. Declaration public static UniTask<int[]> LoadTiles(string tilemapsType, IslandsDictionaryNames island) Parameters Type Name Description string tilemapsType IslandsDictionaryNames island Returns Type Description UniTask<><int[]> Loaded tiles SaveTiles(int[], string, IslandsDictionaryNames) Saves tilemap's tiles to the computer Declaration public static void SaveTiles(int[] tiles, string tilemapsType, IslandsDictionaryNames island) Parameters Type Name Description int[] tiles Array of tiles string tilemapsType Name of the saved tilemap IslandsDictionaryNames island"
  },
  "api/Systems.Saving.SpecificDataSaving.QuestSaving.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.QuestSaving.html",
    "title": "Namespace Systems.Saving.SpecificDataSaving.QuestSaving | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Saving.SpecificDataSaving.QuestSaving Classes QuestSaving Structs QuestSavingStruct"
  },
  "api/Systems.Saving.SpecificDataSaving.QuestSaving.QuestSaving.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.QuestSaving.QuestSaving.html",
    "title": "Class QuestSaving | Harvest Grove code documentation",
    "keywords": "Class QuestSaving Inheritance object QuestSaving Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Saving.SpecificDataSaving.QuestSaving Assembly: cs.temp.dll.dll Syntax public static class QuestSaving Methods LoadQuests(ItemDatabaseSO, NPCsHolderSO) Declaration public static UniTask LoadQuests(ItemDatabaseSO itemDatabase, NPCsHolderSO npcHolder) Parameters Type Name Description ItemDatabaseSO itemDatabase NPCsHolderSO npcHolder Returns Type Description UniTask SaveQuests() Declaration public static UniTask SaveQuests() Returns Type Description UniTask"
  },
  "api/Systems.Saving.SpecificDataSaving.QuestSaving.QuestSavingStruct.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.QuestSaving.QuestSavingStruct.html",
    "title": "Struct QuestSavingStruct | Harvest Grove code documentation",
    "keywords": "Struct QuestSavingStruct Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Systems.Saving.SpecificDataSaving.QuestSaving Assembly: cs.temp.dll.dll Syntax public struct QuestSavingStruct Constructors QuestSavingStruct(Quest) Declaration public QuestSavingStruct(Quest quest) Parameters Type Name Description Quest quest Fields CurrentAmount Declaration public int CurrentAmount Field Value Type Description int NpcID Declaration public ushort NpcID Field Value Type Description ushort QuestID Declaration public string QuestID Field Value Type Description string QuestName Declaration public string QuestName Field Value Type Description string QuestText Declaration public string QuestText Field Value Type Description string QuestType Declaration public QuestType QuestType Field Value Type Description QuestType RequiredItemAmount Declaration public int RequiredItemAmount Field Value Type Description int RequiredItemID Declaration public int RequiredItemID Field Value Type Description int"
  },
  "api/Systems.Saving.SpecificDataSaving.Raining.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Raining.html",
    "title": "Namespace Systems.Saving.SpecificDataSaving.Raining | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Saving.SpecificDataSaving.Raining Classes RainingSaving"
  },
  "api/Systems.Saving.SpecificDataSaving.Raining.RainingSaving.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Raining.RainingSaving.html",
    "title": "Class RainingSaving | Harvest Grove code documentation",
    "keywords": "Class RainingSaving Inheritance object RainingSaving Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Saving.SpecificDataSaving.Raining Assembly: cs.temp.dll.dll Syntax public static class RainingSaving Methods LoadRaining() Declaration public static UniTask<RainingInfo> LoadRaining() Returns Type Description UniTask<><RainingInfo> SaveRaining(RainingInfo) Declaration public static void SaveRaining(RainingInfo rainingSO) Parameters Type Name Description RainingInfo rainingSO"
  },
  "api/Systems.Saving.SpecificDataSaving.Seeds.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Seeds.html",
    "title": "Namespace Systems.Saving.SpecificDataSaving.Seeds | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Saving.SpecificDataSaving.Seeds Classes SeedsSaving"
  },
  "api/Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.html": {
    "href": "api/Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.html",
    "title": "Class SeedsSaving | Harvest Grove code documentation",
    "keywords": "Class SeedsSaving Inheritance object SeedsSaving Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Saving.SpecificDataSaving.Seeds Assembly: cs.temp.dll.dll Syntax public static class SeedsSaving Methods LoadSeeds() Declaration public static UniTask<Dictionary<Vector2, PlantableData>> LoadSeeds() Returns Type Description UniTask<><Dictionary<, ><Vector2, PlantableData>> SaveSeeds(Dictionary<Vector2, PlantableData>) Declaration public static void SaveSeeds(Dictionary<Vector2, PlantableData> data) Parameters Type Name Description Dictionary<, ><Vector2, PlantableData> data"
  },
  "api/Systems.Statistics.html": {
    "href": "api/Systems.Statistics.html",
    "title": "Namespace Systems.Statistics | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Statistics Classes Statistic StatisticsService Enums Statistic.StatisticType"
  },
  "api/Systems.Statistics.Statistic.html": {
    "href": "api/Systems.Statistics.Statistic.html",
    "title": "Class Statistic | Harvest Grove code documentation",
    "keywords": "Class Statistic Inheritance object Statistic Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Statistics Assembly: cs.temp.dll.dll Syntax public class Statistic Constructors Statistic(StatisticType, double, int?) Declaration public Statistic(Statistic.StatisticType type, double amount, int? id) Parameters Type Name Description Statistic.StatisticType type double amount int? id Properties Amount Declaration public double Amount { get; set; } Property Value Type Description double Id The id is used if we have to differentiate between stats of the same type. e.g. different items Declaration public int? Id { get; set; } Property Value Type Description int? LocalizeName Name of the Stat in the localization table. Format HAS to be: stat_{LocalizeName}_title stat_{LocalizeName}_pretext stat_{LocalizeName}_posttext If the LocalizeName is null, the stat will not be displayed. Declaration public string LocalizeName { get; set; } Property Value Type Description string Type Declaration public Statistic.StatisticType Type { get; set; } Property Value Type Description Statistic.StatisticType"
  },
  "api/Systems.Statistics.Statistic.StatisticType.html": {
    "href": "api/Systems.Statistics.Statistic.StatisticType.html",
    "title": "Enum Statistic.StatisticType | Harvest Grove code documentation",
    "keywords": "Enum Statistic.StatisticType Namespace: Systems.Statistics Assembly: cs.temp.dll.dll Syntax public enum Statistic.StatisticType Fields Name Description AnimalsBred Cooked Crafted Item Ran Walked"
  },
  "api/Systems.Statistics.StatisticsService.html": {
    "href": "api/Systems.Statistics.StatisticsService.html",
    "title": "Class StatisticsService | Harvest Grove code documentation",
    "keywords": "Class StatisticsService Inheritance object StatisticsService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Statistics Assembly: cs.temp.dll.dll Syntax public class StatisticsService Constructors StatisticsService(ITileMapService) Declaration public StatisticsService(ITileMapService tileMapService) Parameters Type Name Description ITileMapService tileMapService Properties PlayerStatistics Declaration public List<Statistic> PlayerStatistics { get; set; } Property Value Type Description List<><Statistic> Methods AddStatistic(StatisticType, double, int?, bool) If the statistic already exists, the amount is added to the already collected amount. Declaration public void AddStatistic(Statistic.StatisticType type, double amount, int? id = null, bool allowZeroAmount = false) Parameters Type Name Description Statistic.StatisticType type The type of the statistic that is being collected double amount The amount to add or the initial value if the statistic doesn't exist yet int? id An id to differentiate between stats of the same type bool allowZeroAmount This is only for initialization"
  },
  "api/Systems.Statistics.UI.html": {
    "href": "api/Systems.Statistics.UI.html",
    "title": "Namespace Systems.Statistics.UI | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Statistics.UI Classes StatisticsUI"
  },
  "api/Systems.Statistics.UI.StatisticsUI.html": {
    "href": "api/Systems.Statistics.UI.StatisticsUI.html",
    "title": "Class StatisticsUI | Harvest Grove code documentation",
    "keywords": "Class StatisticsUI Inheritance object StatisticsUI Namespace: Systems.Statistics.UI Assembly: cs.temp.dll.dll Syntax public class StatisticsUI : MonoBehaviour Methods Construct(StatisticsService) Declaration public void Construct(StatisticsService statisticsService) Parameters Type Name Description StatisticsService statisticsService"
  },
  "api/Systems.ThirstHunger.Actions.ActionCost.html": {
    "href": "api/Systems.ThirstHunger.Actions.ActionCost.html",
    "title": "Struct ActionCost | Harvest Grove code documentation",
    "keywords": "Struct ActionCost Represents the cost of an action in terms of hunger and thirst. Values are divided by 100, where 100 is one unit. Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Systems.ThirstHunger.Actions Assembly: cs.temp.dll.dll Syntax public struct ActionCost Fields HungerCost Declaration public float HungerCost Field Value Type Description float ThirstCost Declaration public float ThirstCost Field Value Type Description float Methods ScaledBy(float) Declaration public ActionCost ScaledBy(float multiplier) Parameters Type Name Description float multiplier Returns Type Description ActionCost"
  },
  "api/Systems.ThirstHunger.Actions.ActionTypeEnum.html": {
    "href": "api/Systems.ThirstHunger.Actions.ActionTypeEnum.html",
    "title": "Enum ActionTypeEnum | Harvest Grove code documentation",
    "keywords": "Enum ActionTypeEnum Represents the types of actions available in the ThirstHunger system. Namespace: Systems.ThirstHunger.Actions Assembly: cs.temp.dll.dll Syntax public enum ActionTypeEnum Fields Name Description Bucket Using a bucket. Empty No action specified. Pickup Picking up an item. PlantSeeds Planting seeds. Run Running action. Tools Using tools. Walk Walking action. Watering Watering plants."
  },
  "api/Systems.ThirstHunger.Actions.html": {
    "href": "api/Systems.ThirstHunger.Actions.html",
    "title": "Namespace Systems.ThirstHunger.Actions | Harvest Grove code documentation",
    "keywords": "Namespace Systems.ThirstHunger.Actions Structs ActionCost Represents the cost of an action in terms of hunger and thirst. Values are divided by 100, where 100 is one unit. Enums ActionTypeEnum Represents the types of actions available in the ThirstHunger system."
  },
  "api/Systems.ThirstHunger.html": {
    "href": "api/Systems.ThirstHunger.html",
    "title": "Namespace Systems.ThirstHunger | Harvest Grove code documentation",
    "keywords": "Namespace Systems.ThirstHunger Classes HungerUnit Represents a single hunger unit, tracking its fill percentage and providing sprites for its state. ThirstHungerManager Holds 10 hunger units + 10 thirst units. Each unit is 0–100%. Actions drain/fill PERCENTAGES across units. UI images are filled sprites reflecting per-unit percentage; empty units use empty sprite. Damage ticks if total hunger or thirst falls under the configured threshold. WaterUnit"
  },
  "api/Systems.ThirstHunger.HungerUnit.html": {
    "href": "api/Systems.ThirstHunger.HungerUnit.html",
    "title": "Class HungerUnit | Harvest Grove code documentation",
    "keywords": "Class HungerUnit Represents a single hunger unit, tracking its fill percentage and providing sprites for its state. Inheritance object HungerUnit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.ThirstHunger Assembly: cs.temp.dll.dll Syntax public class HungerUnit Properties IsEmpty Indicates whether this hunger unit is empty. Declaration public bool IsEmpty { get; } Property Value Type Description bool IsHungerUnitFull Gets or sets whether this hunger unit is full. Declaration public bool IsHungerUnitFull { get; set; } Property Value Type Description bool Percent Gets or sets the percentage value (0–100) of this hunger unit. Declaration public float Percent { get; set; } Property Value Type Description float SpriteForCurrentState Gets the sprite corresponding to the current state of this hunger unit. Declaration public Sprite SpriteForCurrentState { get; } Property Value Type Description Sprite"
  },
  "api/Systems.ThirstHunger.ThirstHungerManager.html": {
    "href": "api/Systems.ThirstHunger.ThirstHungerManager.html",
    "title": "Class ThirstHungerManager | Harvest Grove code documentation",
    "keywords": "Class ThirstHungerManager Holds 10 hunger units + 10 thirst units. Each unit is 0–100%. Actions drain/fill PERCENTAGES across units. UI images are filled sprites reflecting per-unit percentage; empty units use empty sprite. Damage ticks if total hunger or thirst falls under the configured threshold. Inheritance object ThirstHungerManager Namespace: Systems.ThirstHunger Assembly: cs.temp.dll.dll Syntax public class ThirstHungerManager : MonoBehaviour Fields OnHungerThirstChanged Declaration public static Action OnHungerThirstChanged Field Value Type Description Action Properties EmptyHungerUnitsCount Declaration public int EmptyHungerUnitsCount { get; } Property Value Type Description int EmptyThirstUnitsCount Declaration public int EmptyThirstUnitsCount { get; } Property Value Type Description int HungerUnits Declaration public List<HungerUnit> HungerUnits { get; set; } Property Value Type Description List<><HungerUnit> IsDamaged Declaration public bool IsDamaged { get; } Property Value Type Description bool IsHungerFull Declaration public bool IsHungerFull { get; } Property Value Type Description bool IsThirstFull Declaration public bool IsThirstFull { get; } Property Value Type Description bool ThirstUnits Declaration public List<WaterUnit> ThirstUnits { get; set; } Property Value Type Description List<><WaterUnit> TotalHungerPercent Total HUNGER percent across all units: 0..1000. Declaration public float TotalHungerPercent { get; } Property Value Type Description float TotalThirstPercent Total THIRST percent across all units: 0..1000. Declaration public float TotalThirstPercent { get; } Property Value Type Description float Methods AddHunger(float) Increase hunger by percent (can be >100; spreads across units). Declaration public void AddHunger(float percent) Parameters Type Name Description float percent AddThirst(float) Increase thirst by percent (can be >100; spreads across units). Declaration public void AddThirst(float percent) Parameters Type Name Description float percent Construct(InputsMap, IHealthService) Declaration public void Construct(InputsMap input, IHealthService healthService) Parameters Type Name Description InputsMap input IHealthService healthService DrainHunger(float) Force drain hunger by percent (can be >100; cascades right-to-left). Declaration public void DrainHunger(float percent) Parameters Type Name Description float percent DrainThirst(float) Force drain thirst by percent. Declaration public void DrainThirst(float percent) Parameters Type Name Description float percent HasPlayerEnoughResources(ActionCost) Declaration public bool HasPlayerEnoughResources(ActionCost actionCost) Parameters Type Name Description ActionCost actionCost Returns Type Description bool TryPerformAction(ActionCost) Try to spend the costs. Returns true if done; false if not enough. Declaration public bool TryPerformAction(ActionCost actionCost) Parameters Type Name Description ActionCost actionCost Returns Type Description bool"
  },
  "api/Systems.ThirstHunger.WaterUnit.html": {
    "href": "api/Systems.ThirstHunger.WaterUnit.html",
    "title": "Class WaterUnit | Harvest Grove code documentation",
    "keywords": "Class WaterUnit Inheritance object WaterUnit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.ThirstHunger Assembly: cs.temp.dll.dll Syntax public class WaterUnit Properties IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description bool IsThirstUnitFull Declaration public bool IsThirstUnitFull { get; set; } Property Value Type Description bool Percent Declaration public float Percent { get; set; } Property Value Type Description float SpriteForCurrentState Declaration public Sprite SpriteForCurrentState { get; } Property Value Type Description Sprite"
  },
  "api/Systems.Time.DayInformationSO.html": {
    "href": "api/Systems.Time.DayInformationSO.html",
    "title": "Class DayInformationSO | Harvest Grove code documentation",
    "keywords": "Class DayInformationSO Inheritance object DayInformationSO Namespace: Systems.Time Assembly: cs.temp.dll.dll Syntax public class DayInformationSO : ScriptableObject Fields SellerComing Declaration public byte SellerComing Field Value Type Description byte SellerLeaving Declaration public byte SellerLeaving Field Value Type Description byte TimeForDawn Declaration public byte TimeForDawn Field Value Type Description byte TimeForDusk Declaration public byte TimeForDusk Field Value Type Description byte TimeForGivingItems Declaration public byte TimeForGivingItems Field Value Type Description byte TimeForMorningFood Declaration public byte TimeForMorningFood Field Value Type Description byte"
  },
  "api/Systems.Time.html": {
    "href": "api/Systems.Time.html",
    "title": "Namespace Systems.Time | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Time Classes DayInformationSO TimeData Class that stores time data (minutes, wentSleepAtHour, days)"
  },
  "api/Systems.Time.TimeData.html": {
    "href": "api/Systems.Time.TimeData.html",
    "title": "Class TimeData | Harvest Grove code documentation",
    "keywords": "Class TimeData Class that stores time data (minutes, wentSleepAtHour, days) Inheritance object TimeData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Time Assembly: cs.temp.dll.dll Syntax public class TimeData Constructors TimeData() Declaration public TimeData() TimeData(int, int, int) Declaration public TimeData(int minutes, int hours, int days) Parameters Type Name Description int minutes int hours int days TimeData(TimeData) Declaration public TimeData(TimeData timeData) Parameters Type Name Description TimeData timeData Properties Days Declaration public int Days { get; set; } Property Value Type Description int Hours Declaration public int Hours { get; set; } Property Value Type Description int Minutes Declaration public int Minutes { get; set; } Property Value Type Description int Methods AddDays(int) Declaration public void AddDays(int value) Parameters Type Name Description int value AddHours(int) Declaration public void AddHours(int value) Parameters Type Name Description int value AddMinutes(int) Declaration public void AddMinutes(int value) Parameters Type Name Description int value GetTimeInMinutes() This method returns data time in minutes Declaration public int GetTimeInMinutes() Returns Type Description int SetDays(int) Declaration public void SetDays(int value) Parameters Type Name Description int value SetHours(byte) Declaration public void SetHours(byte value) Parameters Type Name Description byte value SetMinutes(byte) Declaration public void SetMinutes(byte value) Parameters Type Name Description byte value SetTime(int, int, int) Declaration public void SetTime(int minutes = 0, int hours = 0, int days = 0) Parameters Type Name Description int minutes int hours int days SetTime(TimeData) Declaration public void SetTime(TimeData timeData) Parameters Type Name Description TimeData timeData Subtract(TimeData) Declaration public TimeData Subtract(TimeData other) Parameters Type Name Description TimeData other Returns Type Description TimeData Operators operator +(TimeData, TimeData) This method returns sum of two time data Declaration public static TimeData operator +(TimeData time1, TimeData time2) Parameters Type Name Description TimeData time1 TimeData time2 Returns Type Description TimeData operator >(TimeData, TimeData) Declaration public static bool operator >(TimeData time1, TimeData time2) Parameters Type Name Description TimeData time1 TimeData time2 Returns Type Description bool operator >=(TimeData, TimeData) Declaration public static bool operator >=(TimeData time1, TimeData time2) Parameters Type Name Description TimeData time1 TimeData time2 Returns Type Description bool operator <(TimeData, TimeData) Declaration public static bool operator <(TimeData time1, TimeData time2) Parameters Type Name Description TimeData time1 TimeData time2 Returns Type Description bool operator <=(TimeData, TimeData) Declaration public static bool operator <=(TimeData time1, TimeData time2) Parameters Type Name Description TimeData time1 TimeData time2 Returns Type Description bool operator -(TimeData, TimeData) This method returns difference of two time data !(absolute value)! Declaration public static TimeData operator -(TimeData time1, TimeData time2) Parameters Type Name Description TimeData time1 TimeData time2 Returns Type Description TimeData"
  },
  "api/Systems.Time.Timer.html": {
    "href": "api/Systems.Time.Timer.html",
    "title": "Namespace Systems.Time.Timer | Harvest Grove code documentation",
    "keywords": "Namespace Systems.Time.Timer Classes TimeManager Timer WeekAction"
  },
  "api/Systems.Time.Timer.TimeManager.html": {
    "href": "api/Systems.Time.Timer.TimeManager.html",
    "title": "Class TimeManager | Harvest Grove code documentation",
    "keywords": "Class TimeManager Inheritance object TimeManager Namespace: Systems.Time.Timer Assembly: cs.temp.dll.dll Syntax public class TimeManager : MonoBehaviour Fields OnDawn Declaration public static Action OnDawn Field Value Type Description Action OnDawnAsync Declaration public static Func<UniTask> OnDawnAsync Field Value Type Description Func<><UniTask> OnDusk Declaration public static Action OnDusk Field Value Type Description Action OnGetCurrentTime Declaration public static Func<TimeData> OnGetCurrentTime Field Value Type Description Func<><TimeData> OnGiveAnimalItemsAsync Declaration public static Func<UniTask> OnGiveAnimalItemsAsync Field Value Type Description Func<><UniTask> OnHourBeforeDusk Declaration public static Action OnHourBeforeDusk Field Value Type Description Action OnNewDay Declaration public static Action OnNewDay Field Value Type Description Action OnNewDayAsync Declaration public static Func<UniTask> OnNewDayAsync Field Value Type Description Func<><UniTask> OnNewHour Declaration public static Action OnNewHour Field Value Type Description Action OnNewWeek Declaration public static Func<UniTask> OnNewWeek Field Value Type Description Func<><UniTask> OnSellerComing Declaration public static Action OnSellerComing Field Value Type Description Action OnSellerLeaving Declaration public static Action OnSellerLeaving Field Value Type Description Action OnTimeForFoodAsync Declaration public static Func<UniTask> OnTimeForFoodAsync Field Value Type Description Func<><UniTask> OnUpdateTimerText Declaration public static Action OnUpdateTimerText Field Value Type Description Action OnWokeUp Declaration public static Action OnWokeUp Field Value Type Description Action Properties CurrentTimeInMinutes Total time in minutes Declaration public int CurrentTimeInMinutes { get; } Property Value Type Description int GetTime Declaration public TimeData GetTime { get; } Property Value Type Description TimeData Methods AddAction(INewWeekAction) Declaration public void AddAction(INewWeekAction action) Parameters Type Name Description INewWeekAction action Construct(IManagerData) Declaration public void Construct(IManagerData managerData) Parameters Type Name Description IManagerData managerData SetNewDayAtDawn() Sets a new day, doesn't matter if the player went sleep before or after midnight However, player will wake up at dawn time Declaration public void SetNewDayAtDawn() SetTime(TimeData) This method sets the time Declaration public void SetTime(TimeData timeData) Parameters Type Name Description TimeData timeData time that should be setted SetTime(TimeSpan) Declaration public void SetTime(TimeSpan wakingTime) Parameters Type Name Description TimeSpan wakingTime SleepUntilDawn() This method sets the time to the next day in the morning Declaration public TimeData SleepUntilDawn() Returns Type Description TimeData How much player slept UpdateTime() This method updates the time It also checks what should happen at specific hour Declaration public void UpdateTime()"
  },
  "api/Systems.Time.Timer.Timer.html": {
    "href": "api/Systems.Time.Timer.Timer.html",
    "title": "Class Timer | Harvest Grove code documentation",
    "keywords": "Class Timer Inheritance object Timer Namespace: Systems.Time.Timer Assembly: cs.temp.dll.dll Syntax public class Timer : MonoBehaviour Fields OnNewMinute Minute passed Declaration public static Action OnNewMinute Field Value Type Description Action Properties GetTimeManager Declaration public TimeManager GetTimeManager { get; } Property Value Type Description TimeManager MinuteDuration Declaration public float MinuteDuration { get; } Property Value Type Description float"
  },
  "api/Systems.Time.Timer.WeekAction.html": {
    "href": "api/Systems.Time.Timer.WeekAction.html",
    "title": "Class WeekAction | Harvest Grove code documentation",
    "keywords": "Class WeekAction Inheritance object WeekAction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Systems.Time.Timer Assembly: cs.temp.dll.dll Syntax public class WeekAction Methods AddAction(INewWeekAction) Declaration public void AddAction(INewWeekAction action) Parameters Type Name Description INewWeekAction action TriggerActions() Declaration public UniTask TriggerActions() Returns Type Description UniTask"
  },
  "api/Tutorial.html": {
    "href": "api/Tutorial.html",
    "title": "Namespace Tutorial | Harvest Grove code documentation",
    "keywords": "Namespace Tutorial Classes TutorialManager TutorialSequenceSO TutorialTaskSO Enums TutorialTaskType"
  },
  "api/Tutorial.TutorialManager.html": {
    "href": "api/Tutorial.TutorialManager.html",
    "title": "Class TutorialManager | Harvest Grove code documentation",
    "keywords": "Class TutorialManager Inheritance object TutorialManager Namespace: Tutorial Assembly: cs.temp.dll.dll Syntax public class TutorialManager : MonoBehaviour Fields IsTutorialActive Declaration public static bool IsTutorialActive Field Value Type Description bool OnCompleteTask Declaration public static Action OnCompleteTask Field Value Type Description Action OnEatBerries Declaration public static Action OnEatBerries Field Value Type Description Action Properties CurrentTaskIndex Declaration public int CurrentTaskIndex { get; set; } Property Value Type Description int Methods IsCurrentTask(TutorialTaskType) Checks if the given task type is the current active tutorial task Declaration public bool IsCurrentTask(TutorialTaskType type) Parameters Type Name Description TutorialTaskType type Returns Type Description bool"
  },
  "api/Tutorial.TutorialSequenceSO.html": {
    "href": "api/Tutorial.TutorialSequenceSO.html",
    "title": "Class TutorialSequenceSO | Harvest Grove code documentation",
    "keywords": "Class TutorialSequenceSO Inheritance object TutorialSequenceSO Namespace: Tutorial Assembly: cs.temp.dll.dll Syntax public class TutorialSequenceSO : ScriptableObject Fields Tasks Declaration public List<TutorialTaskSO> Tasks Field Value Type Description List<><TutorialTaskSO>"
  },
  "api/Tutorial.TutorialTaskSO.html": {
    "href": "api/Tutorial.TutorialTaskSO.html",
    "title": "Class TutorialTaskSO | Harvest Grove code documentation",
    "keywords": "Class TutorialTaskSO Inheritance object TutorialTaskSO Namespace: Tutorial Assembly: cs.temp.dll.dll Syntax public class TutorialTaskSO : ScriptableObject Fields InputAction Declaration public InputActionReference InputAction Field Value Type Description InputActionReference IsUsingInput Declaration public bool IsUsingInput Field Value Type Description bool TaskDescription Declaration public LocalizedString TaskDescription Field Value Type Description LocalizedString TaskType Declaration public TutorialTaskType TaskType Field Value Type Description TutorialTaskType Methods GetTaskDescription() Declaration public string GetTaskDescription() Returns Type Description string"
  },
  "api/Tutorial.TutorialTaskType.html": {
    "href": "api/Tutorial.TutorialTaskType.html",
    "title": "Enum TutorialTaskType | Harvest Grove code documentation",
    "keywords": "Enum TutorialTaskType Namespace: Tutorial Assembly: cs.temp.dll.dll Syntax public enum TutorialTaskType Fields Name Description CraftAxe CutTree EatBerries FindBerries Move OpenInventory PickupStick PickupStone PlantWheat ReadManul Running"
  },
  "api/UI.Buttons.ButtonHover.html": {
    "href": "api/UI.Buttons.ButtonHover.html",
    "title": "Class ButtonHover | Harvest Grove code documentation",
    "keywords": "Class ButtonHover Inheritance object ButtonHover ButtonWithTooltip Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler Namespace: UI.Buttons Assembly: cs.temp.dll.dll Syntax public class ButtonHover : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler, IPointerClickHandler Fields IsCursorHovering Declaration protected bool IsCursorHovering Field Value Type Description bool Methods OnPointerClick(PointerEventData) Declaration public void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerEnter(PointerEventData) Declaration public virtual void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerExit(PointerEventData) Declaration public virtual void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler"
  },
  "api/UI.Buttons.ButtonWithTooltip.html": {
    "href": "api/UI.Buttons.ButtonWithTooltip.html",
    "title": "Class ButtonWithTooltip | Harvest Grove code documentation",
    "keywords": "Class ButtonWithTooltip Inheritance object ButtonHover ButtonWithTooltip Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler Inherited Members ButtonHover.IsCursorHovering ButtonHover.OnPointerClick(PointerEventData) Namespace: UI.Buttons Assembly: cs.temp.dll.dll Syntax public class ButtonWithTooltip : ButtonHover, IPointerEnterHandler, IPointerExitHandler, IPointerClickHandler Fields Offset The offset between the tooltip and the button Declaration public int Offset Field Value Type Description int ToolTipContainer A container which wraps ToolTipContent. Prefab can be found at Assets/Prefabs/UI/ToolTipPanel.prefab Declaration public GameObject? ToolTipContainer Field Value Type Description GameObject? ToolTipContent The object which should be displayed as a tooltip message. Declaration public GameObject? ToolTipContent Field Value Type Description GameObject? Methods OnPointerEnter(PointerEventData) Declaration public override void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Overrides ButtonHover.OnPointerEnter(PointerEventData) OnPointerExit(PointerEventData) Declaration public override void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Overrides ButtonHover.OnPointerExit(PointerEventData) Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler"
  },
  "api/UI.Buttons.CustomButton.html": {
    "href": "api/UI.Buttons.CustomButton.html",
    "title": "Class CustomButton | Harvest Grove code documentation",
    "keywords": "Class CustomButton Inheritance object CustomButton Namespace: UI.Buttons Assembly: cs.temp.dll.dll Syntax public class CustomButton : Button Methods SetInteractable(bool) Sets the interactability of the button Declaration public void SetInteractable(bool value) Parameters Type Name Description bool value The new interactability value"
  },
  "api/UI.Buttons.html": {
    "href": "api/UI.Buttons.html",
    "title": "Namespace UI.Buttons | Harvest Grove code documentation",
    "keywords": "Namespace UI.Buttons Classes ButtonHover ButtonWithTooltip CustomButton SortButton"
  },
  "api/UI.Buttons.SortButton.html": {
    "href": "api/UI.Buttons.SortButton.html",
    "title": "Class SortButton | Harvest Grove code documentation",
    "keywords": "Class SortButton Inheritance object SortButton Namespace: UI.Buttons Assembly: cs.temp.dll.dll Syntax public class SortButton : MonoBehaviour Fields OnHideInfo Declaration public static Action OnHideInfo Field Value Type Description Action"
  },
  "api/UI.DebugMode.DebugMode.html": {
    "href": "api/UI.DebugMode.DebugMode.html",
    "title": "Class DebugMode | Harvest Grove code documentation",
    "keywords": "Class DebugMode Inheritance object DebugMode Namespace: UI.DebugMode Assembly: cs.temp.dll.dll Syntax public class DebugMode : MonoBehaviour Methods Construct(ITileMapService, InputsMap, IPlayerTransfromService) Declaration public void Construct(ITileMapService tileMapService, InputsMap inputsMap, IPlayerTransfromService playerTransfromService) Parameters Type Name Description ITileMapService tileMapService InputsMap inputsMap IPlayerTransfromService playerTransfromService IsPointerOverUIElement(List<RaycastResult>) Declaration public static string IsPointerOverUIElement(List<RaycastResult> eventSystemRaysastResults) Parameters Type Name Description List<><RaycastResult> eventSystemRaysastResults Returns Type Description string"
  },
  "api/UI.DebugMode.html": {
    "href": "api/UI.DebugMode.html",
    "title": "Namespace UI.DebugMode | Harvest Grove code documentation",
    "keywords": "Namespace UI.DebugMode Classes DebugMode"
  },
  "api/UI.Guide.GuideSectionButton.html": {
    "href": "api/UI.Guide.GuideSectionButton.html",
    "title": "Class GuideSectionButton | Harvest Grove code documentation",
    "keywords": "Class GuideSectionButton Inheritance object GuideSectionButton Namespace: UI.Guide Assembly: cs.temp.dll.dll Syntax public class GuideSectionButton : MonoBehaviour Methods Click() Declaration public void Click() SetHoveredColor() Declaration public void SetHoveredColor() SetNormalColor() Declaration public void SetNormalColor()"
  },
  "api/UI.Guide.GuideUI.html": {
    "href": "api/UI.Guide.GuideUI.html",
    "title": "Class GuideUI | Harvest Grove code documentation",
    "keywords": "Class GuideUI Inheritance object GuideUI Namespace: UI.Guide Assembly: cs.temp.dll.dll Syntax public class GuideUI : MonoBehaviour Fields IsEnabled Declaration public static bool IsEnabled Field Value Type Description bool OnCloseMainPage Declaration public static Action OnCloseMainPage Field Value Type Description Action OnGuideUI Declaration public static Action OnGuideUI Field Value Type Description Action"
  },
  "api/UI.Guide.html": {
    "href": "api/UI.Guide.html",
    "title": "Namespace UI.Guide | Harvest Grove code documentation",
    "keywords": "Namespace UI.Guide Classes GuideSectionButton GuideUI"
  },
  "api/UI.Hovering.HoveringCanvas.html": {
    "href": "api/UI.Hovering.HoveringCanvas.html",
    "title": "Class HoveringCanvas | Harvest Grove code documentation",
    "keywords": "Class HoveringCanvas Inheritance object HoveringCanvas Namespace: UI.Hovering Assembly: cs.temp.dll.dll Syntax public class HoveringCanvas : MonoBehaviour Fields CanShowPickableHint Declaration public static bool CanShowPickableHint Field Value Type Description bool OnAddHoverable Declaration public static Action<IHoverable> OnAddHoverable Field Value Type Description Action<><IHoverable> Properties CropStructure Declaration public TilemapStructure CropStructure { get; } Property Value Type Description TilemapStructure CurrentIsland Declaration public IslandsDictionaryNames CurrentIsland { get; } Property Value Type Description IslandsDictionaryNames MouseVectorIntPos Declaration public Vector2Int MouseVectorIntPos { get; } Property Value Type Description Vector2Int ObjectStructure Declaration public TilemapStructure ObjectStructure { get; } Property Value Type Description TilemapStructure TimeManager Declaration public TimeManager TimeManager { get; } Property Value Type Description TimeManager Methods Construct(ITileMapService, IManagerData, IGameData, InputsMap, IPlayerTransfromService) Declaration public void Construct(ITileMapService tileMapService, IManagerData managerData, IGameData gameData, InputsMap inputsMap, IPlayerTransfromService playerTransfromService) Parameters Type Name Description ITileMapService tileMapService IManagerData managerData IGameData gameData InputsMap inputsMap IPlayerTransfromService playerTransfromService"
  },
  "api/UI.Hovering.html": {
    "href": "api/UI.Hovering.html",
    "title": "Namespace UI.Hovering | Harvest Grove code documentation",
    "keywords": "Namespace UI.Hovering Classes HoveringCanvas Interfaces IHoverable"
  },
  "api/UI.Hovering.IHoverable.html": {
    "href": "api/UI.Hovering.IHoverable.html",
    "title": "Interface IHoverable | Harvest Grove code documentation",
    "keywords": "Interface IHoverable Namespace: UI.Hovering Assembly: cs.temp.dll.dll Syntax public interface IHoverable Methods CanShowText(HoveringCanvas) Declaration bool CanShowText(HoveringCanvas hoveringCanvas) Parameters Type Name Description HoveringCanvas hoveringCanvas Returns Type Description bool GetHoverText(HoveringCanvas) Declaration string GetHoverText(HoveringCanvas hoveringCanvas) Parameters Type Name Description HoveringCanvas hoveringCanvas Returns Type Description string"
  },
  "api/UI.html": {
    "href": "api/UI.html",
    "title": "Namespace UI | Harvest Grove code documentation",
    "keywords": "Namespace UI Classes InputFieldHover MouseCursors SliderHover"
  },
  "api/UI.InputFieldHover.html": {
    "href": "api/UI.InputFieldHover.html",
    "title": "Class InputFieldHover | Harvest Grove code documentation",
    "keywords": "Class InputFieldHover Inheritance object InputFieldHover Implements IPointerEnterHandler IPointerExitHandler Namespace: UI Assembly: cs.temp.dll.dll Syntax public class InputFieldHover : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler Methods OnPointerEnter(PointerEventData) Declaration public void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerExit(PointerEventData) Declaration public void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Implements IPointerEnterHandler IPointerExitHandler"
  },
  "api/UI.Menus.DeathMenu.html": {
    "href": "api/UI.Menus.DeathMenu.html",
    "title": "Class DeathMenu | Harvest Grove code documentation",
    "keywords": "Class DeathMenu Inheritance object DeathMenu Namespace: UI.Menus Assembly: cs.temp.dll.dll Syntax public class DeathMenu : MonoBehaviour Fields OnHomeIslandRespawn Declaration public static Action OnHomeIslandRespawn Field Value Type Description Action Methods Construct(IPlayerTransfromService, ITileMapService, IPlayerData, IManagerData, IGameData, IInventoryService, IHealthService) Declaration public void Construct(IPlayerTransfromService playerTransfromService, ITileMapService tileMapService, IPlayerData playerData, IManagerData managerData, IGameData gameData, IInventoryService inventoryService, IHealthService healthService) Parameters Type Name Description IPlayerTransfromService playerTransfromService ITileMapService tileMapService IPlayerData playerData IManagerData managerData IGameData gameData IInventoryService inventoryService IHealthService healthService DeleteWorld() Deletes the world Declaration public void DeleteWorld() Respawn() Declaration public void Respawn()"
  },
  "api/UI.Menus.html": {
    "href": "api/UI.Menus.html",
    "title": "Namespace UI.Menus | Harvest Grove code documentation",
    "keywords": "Namespace UI.Menus Classes DeathMenu PauseMenu"
  },
  "api/UI.Menus.MainMenu.Bindings.html": {
    "href": "api/UI.Menus.MainMenu.Bindings.html",
    "title": "Namespace UI.Menus.MainMenu.Bindings | Harvest Grove code documentation",
    "keywords": "Namespace UI.Menus.MainMenu.Bindings Classes ResetBindings"
  },
  "api/UI.Menus.MainMenu.Bindings.ResetBindings.html": {
    "href": "api/UI.Menus.MainMenu.Bindings.ResetBindings.html",
    "title": "Class ResetBindings | Harvest Grove code documentation",
    "keywords": "Class ResetBindings Inheritance object ResetBindings Namespace: UI.Menus.MainMenu.Bindings Assembly: cs.temp.dll.dll Syntax public class ResetBindings : MonoBehaviour Methods ResetAllBindigs() Declaration public void ResetAllBindigs()"
  },
  "api/UI.Menus.MainMenu.BlacklistWords.html": {
    "href": "api/UI.Menus.MainMenu.BlacklistWords.html",
    "title": "Class BlacklistWords | Harvest Grove code documentation",
    "keywords": "Class BlacklistWords Inheritance object BlacklistWords Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UI.Menus.MainMenu Assembly: cs.temp.dll.dll Syntax public static class BlacklistWords Fields BlacklistedWords Declaration public static readonly List<string> BlacklistedWords Field Value Type Description List<><string>"
  },
  "api/UI.Menus.MainMenu.ClickableName.html": {
    "href": "api/UI.Menus.MainMenu.ClickableName.html",
    "title": "Class ClickableName | Harvest Grove code documentation",
    "keywords": "Class ClickableName Inheritance object ClickableName Namespace: UI.Menus.MainMenu Assembly: cs.temp.dll.dll Syntax public class ClickableName : MonoBehaviour Methods OpenUrl(string) Declaration public void OpenUrl(string url) Parameters Type Name Description string url SetClickableCursor() Declaration public void SetClickableCursor() SetNormalCurosor() Declaration public void SetNormalCurosor()"
  },
  "api/UI.Menus.MainMenu.Customization.CatCustomization.html": {
    "href": "api/UI.Menus.MainMenu.Customization.CatCustomization.html",
    "title": "Class CatCustomization | Harvest Grove code documentation",
    "keywords": "Class CatCustomization Inheritance object CatCustomization Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UI.Menus.MainMenu.Customization Assembly: cs.temp.dll.dll Syntax public class CatCustomization Methods GetColors() Declaration public List<ColorData> GetColors() Returns Type Description List<><ColorData> GetOriginalColors() Declaration public void GetOriginalColors() LoadColors(List<ColorData>) Declaration public void LoadColors(List<ColorData> colorDataList) Parameters Type Name Description List<><ColorData> colorDataList ResetColors() Declaration public void ResetColors() SetColorToPicker(ColorsReference) Declaration public void SetColorToPicker(ColorsReference bodyPart) Parameters Type Name Description ColorsReference bodyPart"
  },
  "api/UI.Menus.MainMenu.Customization.ColorsReference.html": {
    "href": "api/UI.Menus.MainMenu.Customization.ColorsReference.html",
    "title": "Enum ColorsReference | Harvest Grove code documentation",
    "keywords": "Enum ColorsReference Namespace: UI.Menus.MainMenu.Customization Assembly: cs.temp.dll.dll Syntax public enum ColorsReference Fields Name Description _CoatNew _CoatOriginal _EyesNew _EyesOriginal _StripesNew _StripesOriginal _TummyNew _TummyOriginal"
  },
  "api/UI.Menus.MainMenu.Customization.CustomizationButton.html": {
    "href": "api/UI.Menus.MainMenu.Customization.CustomizationButton.html",
    "title": "Class CustomizationButton | Harvest Grove code documentation",
    "keywords": "Class CustomizationButton Inheritance object CustomizationButton Namespace: UI.Menus.MainMenu.Customization Assembly: cs.temp.dll.dll Syntax public class CustomizationButton : MonoBehaviour Fields OnEnableButon Declaration public static Action<ColorsReference> OnEnableButon Field Value Type Description Action<><ColorsReference> Properties BodyPart Declaration public ColorsReference BodyPart { get; } Property Value Type Description ColorsReference"
  },
  "api/UI.Menus.MainMenu.Customization.html": {
    "href": "api/UI.Menus.MainMenu.Customization.html",
    "title": "Namespace UI.Menus.MainMenu.Customization | Harvest Grove code documentation",
    "keywords": "Namespace UI.Menus.MainMenu.Customization Classes CatCustomization CustomizationButton Enums ColorsReference"
  },
  "api/UI.Menus.MainMenu.html": {
    "href": "api/UI.Menus.MainMenu.html",
    "title": "Namespace UI.Menus.MainMenu | Harvest Grove code documentation",
    "keywords": "Namespace UI.Menus.MainMenu Classes BlacklistWords ClickableName MainMenu"
  },
  "api/UI.Menus.MainMenu.MainMenu.html": {
    "href": "api/UI.Menus.MainMenu.MainMenu.html",
    "title": "Class MainMenu | Harvest Grove code documentation",
    "keywords": "Class MainMenu Inheritance object MainMenu Namespace: UI.Menus.MainMenu Assembly: cs.temp.dll.dll Syntax public class MainMenu : MonoBehaviour Properties FCP Declaration public static FlexibleColorPicker FCP { get; } Property Value Type Description FlexibleColorPicker Methods BackBtn() Declaration public void BackBtn() Create() Declaration public void Create() CurrentField(int) Declaration public void CurrentField(int num) Parameters Type Name Description int num GetColors() Declaration public List<ColorData> GetColors() Returns Type Description List<><ColorData> OpenUrl(string) Declaration public void OpenUrl(string url) Parameters Type Name Description string url QuitGame() Declaration public void QuitGame() ResetCatCustomization() Declaration public void ResetCatCustomization() ResetCreateWorldMenu() Declaration public void ResetCreateWorldMenu() ResetLoadWorldsMenu() Declaration public void ResetLoadWorldsMenu() SaveFOV() Declaration public void SaveFOV() SaveFPS() Declaration public void SaveFPS() SaveVolume() Declaration public void SaveVolume() SetColorToPicker(CustomizationButton) Declaration public void SetColorToPicker(CustomizationButton customizationButton) Parameters Type Name Description CustomizationButton customizationButton SetFOVtext(float) Declaration public void SetFOVtext(float value) Parameters Type Name Description float value SetFPS(float) Declaration public void SetFPS(float value) Parameters Type Name Description float value SetMusicVolume(float) Declaration public void SetMusicVolume(float volume) Parameters Type Name Description float volume SetSFXVolume(float) Declaration public void SetSFXVolume(float volume) Parameters Type Name Description float volume SetTutorial(int) Declaration public void SetTutorial(int value) Parameters Type Name Description int value"
  },
  "api/UI.Menus.MainMenu.Settings.html": {
    "href": "api/UI.Menus.MainMenu.Settings.html",
    "title": "Namespace UI.Menus.MainMenu.Settings | Harvest Grove code documentation",
    "keywords": "Namespace UI.Menus.MainMenu.Settings Classes Settings"
  },
  "api/UI.Menus.MainMenu.Settings.Settings.html": {
    "href": "api/UI.Menus.MainMenu.Settings.Settings.html",
    "title": "Class Settings | Harvest Grove code documentation",
    "keywords": "Class Settings Inheritance object Settings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UI.Menus.MainMenu.Settings Assembly: cs.temp.dll.dll Syntax [Serializable] public class Settings Fields AutosaveInput Declaration public TMP_InputField AutosaveInput Field Value Type Description TMP_InputField AUTOSAVEPREFS Declaration public const string AUTOSAVEPREFS = \"values:autosave\" Field Value Type Description string FOVPREFS Declaration public const string FOVPREFS = \"values:fov\" Field Value Type Description string FOVSlider Declaration public Slider FOVSlider Field Value Type Description Slider FPSPREFS Declaration public const string FPSPREFS = \"values:fps\" Field Value Type Description string FPSSlider Declaration public Slider FPSSlider Field Value Type Description Slider HINTPREFS Declaration public const string HINTPREFS = \"values:hint\" Field Value Type Description string HintToggle Declaration public Toggle HintToggle Field Value Type Description Toggle MUSICPREFS Declaration public const string MUSICPREFS = \"volume:music\" Field Value Type Description string MusicSlider Declaration public Slider MusicSlider Field Value Type Description Slider SFXPREFS Declaration public const string SFXPREFS = \"volume:sfx\" Field Value Type Description string SFXslider Declaration public Slider SFXslider Field Value Type Description Slider Properties MusicBus Declaration public Bus MusicBus { get; set; } Property Value Type Description Bus SFXBus Declaration public Bus SFXBus { get; set; } Property Value Type Description Bus Methods CheckAutosaveValue(string) Declaration public void CheckAutosaveValue(string value) Parameters Type Name Description string value LoadAutosave() Declaration public int LoadAutosave() Returns Type Description int LoadFOV(LocalizeStringEvent) Declaration public float LoadFOV(LocalizeStringEvent fovLocalized) Parameters Type Name Description LocalizeStringEvent fovLocalized Returns Type Description float LoadFPS() Declaration public int LoadFPS() Returns Type Description int LoadHint() Declaration public bool LoadHint() Returns Type Description bool LoadVolume() Loads the volume from the playerprefs Declaration public void LoadVolume() SaveAutosave() Declaration public void SaveAutosave() SaveFOV() Declaration public void SaveFOV() SaveFPS() Declaration public void SaveFPS() SaveVolume() Saves the volume in the playerprefs Declaration public void SaveVolume() SetFPSValue(float) Declaration public void SetFPSValue(float value) Parameters Type Name Description float value SetHint(bool) Declaration public void SetHint(bool canShow) Parameters Type Name Description bool canShow SetMusicVolume(float) Declaration public void SetMusicVolume(float volume) Parameters Type Name Description float volume SetSFXVolume(float) Declaration public void SetSFXVolume(float volume) Parameters Type Name Description float volume SetValueFOV(float, LocalizeStringEvent) Declaration public void SetValueFOV(float value, LocalizeStringEvent fovLocalized) Parameters Type Name Description float value LocalizeStringEvent fovLocalized"
  },
  "api/UI.Menus.MainMenu.Worlds.CreateWorld.html": {
    "href": "api/UI.Menus.MainMenu.Worlds.CreateWorld.html",
    "title": "Class CreateWorld | Harvest Grove code documentation",
    "keywords": "Class CreateWorld Inheritance object CreateWorld Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UI.Menus.MainMenu.Worlds Assembly: cs.temp.dll.dll Syntax public class CreateWorld Fields CatsNameInput Declaration public TMP_InputField CatsNameInput Field Value Type Description TMP_InputField CreateButton Declaration public Button CreateButton Field Value Type Description Button HOMEISLAND Declaration public const string HOMEISLAND = \"Homeland\" Field Value Type Description string ResetSOHolder Declaration public ResetSOHolder ResetSOHolder Field Value Type Description ResetSOHolder SeedInput Declaration public TMP_InputField SeedInput Field Value Type Description TMP_InputField WorldData Declaration public WorldDataSO WorldData Field Value Type Description WorldDataSO WorldNameInput Declaration public TMP_InputField WorldNameInput Field Value Type Description TMP_InputField Methods Create(MainMenu) Creates a world dictionary and saves the basic info, such as world name and seed Declaration public void Create(MainMenu mainMenu) Parameters Type Name Description MainMenu mainMenu ResetMenu() When going back to \"Play\" menu, it clears the text from the inputs Declaration public void ResetMenu()"
  },
  "api/UI.Menus.MainMenu.Worlds.html": {
    "href": "api/UI.Menus.MainMenu.Worlds.html",
    "title": "Namespace UI.Menus.MainMenu.Worlds | Harvest Grove code documentation",
    "keywords": "Namespace UI.Menus.MainMenu.Worlds Classes CreateWorld LoadWorlds WorldButton Enums IslandsDictionaryNames"
  },
  "api/UI.Menus.MainMenu.Worlds.IslandsDictionaryNames.html": {
    "href": "api/UI.Menus.MainMenu.Worlds.IslandsDictionaryNames.html",
    "title": "Enum IslandsDictionaryNames | Harvest Grove code documentation",
    "keywords": "Enum IslandsDictionaryNames Namespace: UI.Menus.MainMenu.Worlds Assembly: cs.temp.dll.dll Syntax public enum IslandsDictionaryNames Fields Name Description CaveIsland ForestIsland HomeIsland HomeIslandOcean MainMenu"
  },
  "api/UI.Menus.MainMenu.Worlds.LoadWorlds.html": {
    "href": "api/UI.Menus.MainMenu.Worlds.LoadWorlds.html",
    "title": "Class LoadWorlds | Harvest Grove code documentation",
    "keywords": "Class LoadWorlds Inheritance object LoadWorlds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UI.Menus.MainMenu.Worlds Assembly: cs.temp.dll.dll Syntax [Serializable] public class LoadWorlds Fields DeleteBtn Declaration public CustomButton DeleteBtn Field Value Type Description CustomButton DeleteConfirmBtn Declaration public Button DeleteConfirmBtn Field Value Type Description Button PlayBtn Declaration public CustomButton PlayBtn Field Value Type Description CustomButton Popup Declaration public GameObject Popup Field Value Type Description GameObject WorldData Declaration public WorldDataSO WorldData Field Value Type Description WorldDataSO WorldPrefab Declaration public WorldButton WorldPrefab Field Value Type Description WorldButton WorldsContent Declaration public Transform WorldsContent Field Value Type Description Transform Methods LoadAllWorlds() Loads all the world's directories and creates a button for each of them Declaration public void LoadAllWorlds() ResetMenu() Resets the menu, i.e. going back to default Declaration public void ResetMenu() SelectedButton(int) A world was selected, do the corresponding actions Declaration public void SelectedButton(int id) Parameters Type Name Description int id ID of the selected world"
  },
  "api/UI.Menus.MainMenu.Worlds.WorldButton.html": {
    "href": "api/UI.Menus.MainMenu.Worlds.WorldButton.html",
    "title": "Class WorldButton | Harvest Grove code documentation",
    "keywords": "Class WorldButton Inheritance object WorldButton Namespace: UI.Menus.MainMenu.Worlds Assembly: cs.temp.dll.dll Syntax public class WorldButton : MonoBehaviour Methods Selected() Buttons is selected Declaration public void Selected() SetInfo(string, int, DateTime) Declaration public void SetInfo(string name, int worldID, DateTime creationTime) Parameters Type Name Description string name int worldID DateTime creationTime UnSelect() Buttons is unselected Declaration public void UnSelect() Events OnWorldSelected Declaration public static event Action<int> OnWorldSelected Event Type Type Description Action<><int>"
  },
  "api/UI.Menus.PauseMenu.html": {
    "href": "api/UI.Menus.PauseMenu.html",
    "title": "Class PauseMenu | Harvest Grove code documentation",
    "keywords": "Class PauseMenu Inheritance object PauseMenu Namespace: UI.Menus Assembly: cs.temp.dll.dll Syntax public class PauseMenu : MonoBehaviour Fields OnPauseMenuClosed Declaration public static Action OnPauseMenuClosed Field Value Type Description Action OnPauseMenuOpened Declaration public static Action OnPauseMenuOpened Field Value Type Description Action Methods CheckAutosaveValue(string) Declaration public void CheckAutosaveValue(string value) Parameters Type Name Description string value Construct(ITileMapService, IPlayerData, InputsMap) Declaration public void Construct(ITileMapService tilemapService, IPlayerData playerData, InputsMap inputsMap) Parameters Type Name Description ITileMapService tilemapService IPlayerData playerData InputsMap inputsMap MainMenu() Declaration public void MainMenu() Quit() Declaration public void Quit() SaveFOV() Declaration public void SaveFOV() SaveFPS() Declaration public void SaveFPS() SaveVolume() Declaration public void SaveVolume() SetAutosave() Declaration public void SetAutosave() SetFOV() Declaration public void SetFOV() SetFOVtext(float) Declaration public void SetFOVtext(float value) Parameters Type Name Description float value SetFPS(float) Declaration public void SetFPS(float value) Parameters Type Name Description float value SetHint(bool) Declaration public void SetHint(bool canShow) Parameters Type Name Description bool canShow SetMusicVolume(float) Declaration public void SetMusicVolume(float volume) Parameters Type Name Description float volume SetSFXVolume(float) Declaration public void SetSFXVolume(float volume) Parameters Type Name Description float volume"
  },
  "api/UI.MouseCursors.html": {
    "href": "api/UI.MouseCursors.html",
    "title": "Class MouseCursors | Harvest Grove code documentation",
    "keywords": "Class MouseCursors Inheritance object MouseCursors Namespace: UI Assembly: cs.temp.dll.dll Syntax public class MouseCursors : MonoBehaviour Fields BuildingTexture Declaration public static Texture2D BuildingTexture Field Value Type Description Texture2D ClickableTexture Declaration public static Texture2D ClickableTexture Field Value Type Description Texture2D DisabledTexture Declaration public static Texture2D DisabledTexture Field Value Type Description Texture2D InternetTexture Declaration public static Texture2D InternetTexture Field Value Type Description Texture2D NonInteractableTileTexture Declaration public static Texture2D NonInteractableTileTexture Field Value Type Description Texture2D WritingTexture Declaration public static Texture2D WritingTexture Field Value Type Description Texture2D"
  },
  "api/UI.PlayerBubble.BubbleTextType.html": {
    "href": "api/UI.PlayerBubble.BubbleTextType.html",
    "title": "Enum BubbleTextType | Harvest Grove code documentation",
    "keywords": "Enum BubbleTextType Namespace: UI.PlayerBubble Assembly: cs.temp.dll.dll Syntax public enum BubbleTextType Fields Name Description BuildingRotation Cauldron CaveEntrace CaveExit Chest CollectDrop HarborTravel Interact Merchant RetrieveItems Sleep"
  },
  "api/UI.PlayerBubble.html": {
    "href": "api/UI.PlayerBubble.html",
    "title": "Namespace UI.PlayerBubble | Harvest Grove code documentation",
    "keywords": "Namespace UI.PlayerBubble Classes PlayerSpeechBubble Enums BubbleTextType"
  },
  "api/UI.PlayerBubble.PlayerSpeechBubble.html": {
    "href": "api/UI.PlayerBubble.PlayerSpeechBubble.html",
    "title": "Class PlayerSpeechBubble | Harvest Grove code documentation",
    "keywords": "Class PlayerSpeechBubble Inheritance object PlayerSpeechBubble Namespace: UI.PlayerBubble Assembly: cs.temp.dll.dll Syntax public class PlayerSpeechBubble : MonoBehaviour Fields OnHideBubble Declaration public static Action OnHideBubble Field Value Type Description Action OnShowBubble Declaration public static Action<BubbleTextType> OnShowBubble Field Value Type Description Action<><BubbleTextType> OnShowTutorialText Declaration public static Action<string> OnShowTutorialText Field Value Type Description Action<><string> Methods Construct(InputsMap) Declaration public void Construct(InputsMap inputsMap) Parameters Type Name Description InputsMap inputsMap"
  },
  "api/UI.Popup.html": {
    "href": "api/UI.Popup.html",
    "title": "Namespace UI.Popup | Harvest Grove code documentation",
    "keywords": "Namespace UI.Popup Classes Popup PopupEvents"
  },
  "api/UI.Popup.Popup.html": {
    "href": "api/UI.Popup.Popup.html",
    "title": "Class Popup | Harvest Grove code documentation",
    "keywords": "Class Popup Inheritance object Popup Namespace: UI.Popup Assembly: cs.temp.dll.dll Syntax public class Popup : MonoBehaviour Fields OnAssignAnimalNames Declaration public static Action<List<string>> OnAssignAnimalNames Field Value Type Description Action<><List<><string>> OnShowPopup Shows the popup. String: Message to be shown Bool: If it should show the \"more\" section Declaration public static Action<string, bool> OnShowPopup Field Value Type Description Action<, ><string, bool> Methods CloseMoreSection() Declaration public void CloseMoreSection() ClosePopup() Closes the current popup Declaration public void ClosePopup() OpenMoreSection() Declaration public void OpenMoreSection()"
  },
  "api/UI.Popup.PopupEvents.html": {
    "href": "api/UI.Popup.PopupEvents.html",
    "title": "Class PopupEvents | Harvest Grove code documentation",
    "keywords": "Class PopupEvents Inheritance object PopupEvents Namespace: UI.Popup Assembly: cs.temp.dll.dll Syntax public class PopupEvents : MonoBehaviour Fields OnCheckNextText Declaration public static Action OnCheckNextText Field Value Type Description Action Methods CheckNextText() Declaration public void CheckNextText()"
  },
  "api/UI.SliderHover.html": {
    "href": "api/UI.SliderHover.html",
    "title": "Class SliderHover | Harvest Grove code documentation",
    "keywords": "Class SliderHover Inheritance object SliderHover Implements IPointerEnterHandler IPointerExitHandler Namespace: UI Assembly: cs.temp.dll.dll Syntax public class SliderHover : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler Methods OnPointerEnter(PointerEventData) Declaration public void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerExit(PointerEventData) Declaration public void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Implements IPointerEnterHandler IPointerExitHandler"
  },
  "api/UnityEngine.InputSystem.Samples.RebindUI.GamepadIconsExample.GamepadIcons.html": {
    "href": "api/UnityEngine.InputSystem.Samples.RebindUI.GamepadIconsExample.GamepadIcons.html",
    "title": "Struct GamepadIconsExample.GamepadIcons | Harvest Grove code documentation",
    "keywords": "Struct GamepadIconsExample.GamepadIcons Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: UnityEngine.InputSystem.Samples.RebindUI Assembly: cs.temp.dll.dll Syntax public struct GamepadIconsExample.GamepadIcons Fields buttonEast Declaration public Sprite buttonEast Field Value Type Description Sprite buttonNorth Declaration public Sprite buttonNorth Field Value Type Description Sprite buttonSouth Declaration public Sprite buttonSouth Field Value Type Description Sprite buttonWest Declaration public Sprite buttonWest Field Value Type Description Sprite dpad Declaration public Sprite dpad Field Value Type Description Sprite dpadDown Declaration public Sprite dpadDown Field Value Type Description Sprite dpadLeft Declaration public Sprite dpadLeft Field Value Type Description Sprite dpadRight Declaration public Sprite dpadRight Field Value Type Description Sprite dpadUp Declaration public Sprite dpadUp Field Value Type Description Sprite leftShoulder Declaration public Sprite leftShoulder Field Value Type Description Sprite leftStick Declaration public Sprite leftStick Field Value Type Description Sprite leftStickPress Declaration public Sprite leftStickPress Field Value Type Description Sprite leftTrigger Declaration public Sprite leftTrigger Field Value Type Description Sprite rightShoulder Declaration public Sprite rightShoulder Field Value Type Description Sprite rightStick Declaration public Sprite rightStick Field Value Type Description Sprite rightStickPress Declaration public Sprite rightStickPress Field Value Type Description Sprite rightTrigger Declaration public Sprite rightTrigger Field Value Type Description Sprite selectButton Declaration public Sprite selectButton Field Value Type Description Sprite startButton Declaration public Sprite startButton Field Value Type Description Sprite Methods GetSprite(string) Declaration public Sprite GetSprite(string controlPath) Parameters Type Name Description string controlPath Returns Type Description Sprite"
  },
  "api/UnityEngine.InputSystem.Samples.RebindUI.GamepadIconsExample.html": {
    "href": "api/UnityEngine.InputSystem.Samples.RebindUI.GamepadIconsExample.html",
    "title": "Class GamepadIconsExample | Harvest Grove code documentation",
    "keywords": "Class GamepadIconsExample This is an example for how to override the default display behavior of bindings. The component hooks into updateBindingUIEvent which is triggered when UI display of a binding should be refreshed. It then checks whether we have an icon for the current binding and if so, replaces the default text display with an icon. Inheritance object GamepadIconsExample Namespace: UnityEngine.InputSystem.Samples.RebindUI Assembly: cs.temp.dll.dll Syntax public class GamepadIconsExample : MonoBehaviour Fields ps4 Declaration public GamepadIconsExample.GamepadIcons ps4 Field Value Type Description GamepadIconsExample.GamepadIcons xbox Declaration public GamepadIconsExample.GamepadIcons xbox Field Value Type Description GamepadIconsExample.GamepadIcons Methods OnEnable() Declaration protected void OnEnable() OnUpdateBindingDisplay(RebindActionUI, string, string, string) Declaration protected void OnUpdateBindingDisplay(RebindActionUI component, string bindingDisplayString, string deviceLayoutName, string controlPath) Parameters Type Name Description RebindActionUI component string bindingDisplayString string deviceLayoutName string controlPath"
  },
  "api/UnityEngine.InputSystem.Samples.RebindUI.html": {
    "href": "api/UnityEngine.InputSystem.Samples.RebindUI.html",
    "title": "Namespace UnityEngine.InputSystem.Samples.RebindUI | Harvest Grove code documentation",
    "keywords": "Namespace UnityEngine.InputSystem.Samples.RebindUI Classes GamepadIconsExample This is an example for how to override the default display behavior of bindings. The component hooks into updateBindingUIEvent which is triggered when UI display of a binding should be refreshed. It then checks whether we have an icon for the current binding and if so, replaces the default text display with an icon. RebindActionUI A reusable component with a self-contained UI for rebinding a single action. RebindActionUI.InteractiveRebindEvent RebindActionUI.UpdateBindingUIEvent Structs GamepadIconsExample.GamepadIcons"
  },
  "api/UnityEngine.InputSystem.Samples.RebindUI.RebindActionUI.html": {
    "href": "api/UnityEngine.InputSystem.Samples.RebindUI.RebindActionUI.html",
    "title": "Class RebindActionUI | Harvest Grove code documentation",
    "keywords": "Class RebindActionUI A reusable component with a self-contained UI for rebinding a single action. Inheritance object RebindActionUI Namespace: UnityEngine.InputSystem.Samples.RebindUI Assembly: cs.temp.dll.dll Syntax public class RebindActionUI : MonoBehaviour Properties actionLabel Text component that receives the name of the action. Optional. Declaration public TextMeshProUGUI actionLabel { get; set; } Property Value Type Description TextMeshProUGUI actionReference Reference to the action that is to be rebound. Declaration public InputActionReference actionReference { get; set; } Property Value Type Description InputActionReference bindingId ID (in string form) of the binding that is to be rebound on the action. Declaration public string bindingId { get; set; } Property Value Type Description string bindingText Text component that receives the display string of the binding. Can be null in which case the component entirely relies on updateBindingUIEvent. Declaration public TextMeshProUGUI bindingText { get; set; } Property Value Type Description TextMeshProUGUI displayStringOptions Declaration public InputBinding.DisplayStringOptions displayStringOptions { get; set; } Property Value Type Description InputBinding.DisplayStringOptions ongoingRebind When an interactive rebind is in progress, this is the rebind operation controller. Otherwise, it is null. Declaration public InputActionRebindingExtensions.RebindingOperation ongoingRebind { get; } Property Value Type Description InputActionRebindingExtensions.RebindingOperation rebindOverlay Optional UI that is activated when an interactive rebind is started and deactivated when the rebind is finished. This is normally used to display an overlay over the current UI while the system is waiting for a control to be actuated. Declaration public GameObject rebindOverlay { get; set; } Property Value Type Description GameObject Remarks If neither rebindPrompt nor rebindOverlay is set, the component will temporarily replaced the bindingText (if not null) with \"Waiting...\". See Also startRebindEvent rebindPrompt rebindPrompt Optional text component that receives a text prompt when waiting for a control to be actuated. Declaration public TextMeshProUGUI rebindPrompt { get; set; } Property Value Type Description TextMeshProUGUI See Also startRebindEvent rebindOverlay startRebindEvent Event that is triggered when an interactive rebind is started on the action. Declaration public RebindActionUI.InteractiveRebindEvent startRebindEvent { get; } Property Value Type Description RebindActionUI.InteractiveRebindEvent stopRebindEvent Event that is triggered when an interactive rebind has been completed or canceled. Declaration public RebindActionUI.InteractiveRebindEvent stopRebindEvent { get; } Property Value Type Description RebindActionUI.InteractiveRebindEvent updateBindingUIEvent Event that is triggered every time the UI updates to reflect the current binding. This can be used to tie custom visualizations to bindings. Declaration public RebindActionUI.UpdateBindingUIEvent updateBindingUIEvent { get; } Property Value Type Description RebindActionUI.UpdateBindingUIEvent Methods OnDisable() Declaration protected void OnDisable() OnEnable() Declaration protected void OnEnable() ResetToDefault() Remove currently applied binding overrides. Declaration public void ResetToDefault() ResolveActionAndBinding(out InputAction, out int) Return the action and binding index for the binding that is targeted by the component according to Declaration public bool ResolveActionAndBinding(out InputAction action, out int bindingIndex) Parameters Type Name Description InputAction action int bindingIndex Returns Type Description bool ShowResetBtn() Declaration public void ShowResetBtn() StartInteractiveRebind() Initiate an interactive rebind that lets the player actuate a control to choose a new binding for the action. Declaration public void StartInteractiveRebind() UpdateBindingDisplay() Trigger a refresh of the currently displayed binding. Declaration public void UpdateBindingDisplay()"
  },
  "api/UnityEngine.InputSystem.Samples.RebindUI.RebindActionUI.InteractiveRebindEvent.html": {
    "href": "api/UnityEngine.InputSystem.Samples.RebindUI.RebindActionUI.InteractiveRebindEvent.html",
    "title": "Class RebindActionUI.InteractiveRebindEvent | Harvest Grove code documentation",
    "keywords": "Class RebindActionUI.InteractiveRebindEvent Inheritance object RebindActionUI.InteractiveRebindEvent Namespace: UnityEngine.InputSystem.Samples.RebindUI Assembly: cs.temp.dll.dll Syntax public class RebindActionUI.InteractiveRebindEvent : UnityEvent<RebindActionUI, InputActionRebindingExtensions.RebindingOperation>"
  },
  "api/UnityEngine.InputSystem.Samples.RebindUI.RebindActionUI.UpdateBindingUIEvent.html": {
    "href": "api/UnityEngine.InputSystem.Samples.RebindUI.RebindActionUI.UpdateBindingUIEvent.html",
    "title": "Class RebindActionUI.UpdateBindingUIEvent | Harvest Grove code documentation",
    "keywords": "Class RebindActionUI.UpdateBindingUIEvent Inheritance object RebindActionUI.UpdateBindingUIEvent Namespace: UnityEngine.InputSystem.Samples.RebindUI Assembly: cs.temp.dll.dll Syntax public class RebindActionUI.UpdateBindingUIEvent : UnityEvent<RebindActionUI, string, string, string>"
  },
  "api/World.DestroyableObjects.CustomDestroyableManager.html": {
    "href": "api/World.DestroyableObjects.CustomDestroyableManager.html",
    "title": "Class CustomDestroyableManager | Harvest Grove code documentation",
    "keywords": "Class CustomDestroyableManager Inheritance object CustomDestroyableManager Namespace: World.DestroyableObjects Assembly: cs.temp.dll.dll Syntax public class CustomDestroyableManager : MonoBehaviour Methods Construct(IManagerData, IGameData) Declaration public void Construct(IManagerData managerData, IGameData gameData) Parameters Type Name Description IManagerData managerData IGameData gameData CustomDestroy(ObjectTileTypeEnum, Vector2Int) Declaration public void CustomDestroy(ObjectTileTypeEnum tile, Vector2Int position) Parameters Type Name Description ObjectTileTypeEnum tile Vector2Int position"
  },
  "api/World.DestroyableObjects.DestroyableObjectsManager.html": {
    "href": "api/World.DestroyableObjects.DestroyableObjectsManager.html",
    "title": "Class DestroyableObjectsManager | Harvest Grove code documentation",
    "keywords": "Class DestroyableObjectsManager Manages destroyable objects in the world, handling damage, destruction, saving/loading state, and drops spawning. Supports multi-tile objects with shared health across all tiles. Inheritance object DestroyableObjectsManager Implements ITaskSavable Namespace: World.DestroyableObjects Assembly: cs.temp.dll.dll Syntax public class DestroyableObjectsManager : MonoBehaviour, ITaskSavable Fields OnDamanageObject Declaration public static Action<Vector2Int, ushort, float> OnDamanageObject Field Value Type Description Action<, , ><Vector2Int, ushort, float> SavingPath Declaration public string SavingPath Field Value Type Description string Properties Priority Declaration public int Priority { get; } Property Value Type Description int Methods Construct(ITileMapService, IGameData, IManagerData) Declaration public void Construct(ITileMapService tileMapService, IGameData gameData, IManagerData managerData) Parameters Type Name Description ITileMapService tileMapService IGameData gameData IManagerData managerData Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Implements ITaskSavable"
  },
  "api/World.DestroyableObjects.DestroyableObjectSO.html": {
    "href": "api/World.DestroyableObjects.DestroyableObjectSO.html",
    "title": "Class DestroyableObjectSO | Harvest Grove code documentation",
    "keywords": "Class DestroyableObjectSO Inheritance object DestroyableObjectSO TreeDestroyableSO Namespace: World.DestroyableObjects Assembly: cs.temp.dll.dll Syntax public class DestroyableObjectSO : ScriptableObject Fields DroppedItems Declaration public List<ItemAndAmount> DroppedItems Field Value Type Description List<><ItemAndAmount> ID Declaration public ushort ID Field Value Type Description ushort IsCustomDestroable Declaration public bool IsCustomDestroable Field Value Type Description bool IsGrowing Declaration public bool IsGrowing Field Value Type Description bool MaxHealth Declaration public short MaxHealth Field Value Type Description short ObjectSize Declaration public Vector2Int ObjectSize Field Value Type Description Vector2Int ObjectSprite Declaration public Sprite ObjectSprite Field Value Type Description Sprite ObjectType Declaration public ObjectTileTypeEnum ObjectType Field Value Type Description ObjectTileTypeEnum RandomDroppedItems Declaration public List<RandomizedDrop> RandomDroppedItems Field Value Type Description List<><RandomizedDrop>"
  },
  "api/World.DestroyableObjects.DestroyedOjectData.html": {
    "href": "api/World.DestroyableObjects.DestroyedOjectData.html",
    "title": "Class DestroyedOjectData | Harvest Grove code documentation",
    "keywords": "Class DestroyedOjectData Inheritance object DestroyedOjectData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: World.DestroyableObjects Assembly: cs.temp.dll.dll Syntax [Serializable] public class DestroyedOjectData Fields Health Declaration public short Health Field Value Type Description short ID Declaration public ushort ID Field Value Type Description ushort Position Declaration public Vector2 Position Field Value Type Description Vector2"
  },
  "api/World.DestroyableObjects.DropableListSO.html": {
    "href": "api/World.DestroyableObjects.DropableListSO.html",
    "title": "Class DropableListSO | Harvest Grove code documentation",
    "keywords": "Class DropableListSO Inheritance object DropableListSO Namespace: World.DestroyableObjects Assembly: cs.temp.dll.dll Syntax public class DropableListSO : ScriptableObject Fields DroppsList Declaration public List<DestroyableObjectSO> DroppsList Field Value Type Description List<><DestroyableObjectSO>"
  },
  "api/World.DestroyableObjects.FakeDestroyableObject.FakeDestroyableObject.html": {
    "href": "api/World.DestroyableObjects.FakeDestroyableObject.FakeDestroyableObject.html",
    "title": "Class FakeDestroyableObject | Harvest Grove code documentation",
    "keywords": "Class FakeDestroyableObject Inheritance object FakeDestroyableObject Namespace: World.DestroyableObjects.FakeDestroyableObject Assembly: cs.temp.dll.dll Syntax public class FakeDestroyableObject : MonoBehaviour Fields OnEnableText Declaration public static Action<bool> OnEnableText Field Value Type Description Action<><bool> OnUpdateFakeObjectHealth Updates the fake destroyable's health First int - current health; second int - max health Declaration public static Action<int, int> OnUpdateFakeObjectHealth Field Value Type Description Action<, ><int, int>"
  },
  "api/World.DestroyableObjects.FakeDestroyableObject.html": {
    "href": "api/World.DestroyableObjects.FakeDestroyableObject.html",
    "title": "Namespace World.DestroyableObjects.FakeDestroyableObject | Harvest Grove code documentation",
    "keywords": "Namespace World.DestroyableObjects.FakeDestroyableObject Classes FakeDestroyableObject"
  },
  "api/World.DestroyableObjects.HitObjects.html": {
    "href": "api/World.DestroyableObjects.HitObjects.html",
    "title": "Class HitObjects | Harvest Grove code documentation",
    "keywords": "Class HitObjects Inheritance object HitObjects Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: World.DestroyableObjects Assembly: cs.temp.dll.dll Syntax public class HitObjects Constructors HitObjects(DropableListSO) Declaration public HitObjects(DropableListSO dropableList) Parameters Type Name Description DropableListSO dropableList Fields HitObjectsDictionary Every single object which was hit Declaration public Dictionary<Vector2, DestroyedOjectData> HitObjectsDictionary Field Value Type Description Dictionary<, ><Vector2, DestroyedOjectData> Methods FilePath(IslandsDictionaryNames) Declaration public string FilePath(IslandsDictionaryNames island) Parameters Type Name Description IslandsDictionaryNames island Returns Type Description string GetHealth(Vector2) Declaration public (short currentHealth, short maxHealth) GetHealth(Vector2 position) Parameters Type Name Description Vector2 position Returns Type Description (short currentHealth, short maxHealth) LoadData(IslandsDictionaryNames) Declaration public void LoadData(IslandsDictionaryNames island) Parameters Type Name Description IslandsDictionaryNames island RemoveObject(Vector2) Removes an item from the list based on the given position. Declaration public void RemoveObject(Vector2 position) Parameters Type Name Description Vector2 position ResetSO() Declaration public void ResetSO() SaveData(IslandsDictionaryNames) Declaration public void SaveData(IslandsDictionaryNames island) Parameters Type Name Description IslandsDictionaryNames island UpdateHealth(Vector2, ushort, ushort) Updates the health of an item based on the given position and damage done to it. Adds the item to the list if it doesn't already exist. Declaration public void UpdateHealth(Vector2 position, ushort damage, ushort ID) Parameters Type Name Description Vector2 position ushort damage ushort ID"
  },
  "api/World.DestroyableObjects.html": {
    "href": "api/World.DestroyableObjects.html",
    "title": "Namespace World.DestroyableObjects | Harvest Grove code documentation",
    "keywords": "Namespace World.DestroyableObjects Classes CustomDestroyableManager DestroyableObjectsManager Manages destroyable objects in the world, handling damage, destruction, saving/loading state, and drops spawning. Supports multi-tile objects with shared health across all tiles. DestroyableObjectSO DestroyedOjectData DropableListSO HitObjects ItemAndAmount RandomizedDrop TreeDestroyableSO Interfaces ICustomDestroyable"
  },
  "api/World.DestroyableObjects.ICustomDestroyable.html": {
    "href": "api/World.DestroyableObjects.ICustomDestroyable.html",
    "title": "Interface ICustomDestroyable | Harvest Grove code documentation",
    "keywords": "Interface ICustomDestroyable Namespace: World.DestroyableObjects Assembly: cs.temp.dll.dll Syntax public interface ICustomDestroyable Methods CustromDestroy() Declaration void CustromDestroy()"
  },
  "api/World.DestroyableObjects.ItemAndAmount.html": {
    "href": "api/World.DestroyableObjects.ItemAndAmount.html",
    "title": "Class ItemAndAmount | Harvest Grove code documentation",
    "keywords": "Class ItemAndAmount Inheritance object ItemAndAmount RandomizedDrop Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: World.DestroyableObjects Assembly: cs.temp.dll.dll Syntax [Serializable] public class ItemAndAmount Fields Amount Declaration public ushort Amount Field Value Type Description ushort GivenItem Declaration public InventoryItemData GivenItem Field Value Type Description InventoryItemData"
  },
  "api/World.DestroyableObjects.RandomizedDrop.html": {
    "href": "api/World.DestroyableObjects.RandomizedDrop.html",
    "title": "Class RandomizedDrop | Harvest Grove code documentation",
    "keywords": "Class RandomizedDrop Inheritance object ItemAndAmount RandomizedDrop Inherited Members ItemAndAmount.GivenItem ItemAndAmount.Amount object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: World.DestroyableObjects Assembly: cs.temp.dll.dll Syntax [Serializable] public class RandomizedDrop : ItemAndAmount Fields SpawnChance Declaration public float SpawnChance Field Value Type Description float"
  },
  "api/World.DestroyableObjects.TreeDestroyableSO.html": {
    "href": "api/World.DestroyableObjects.TreeDestroyableSO.html",
    "title": "Class TreeDestroyableSO | Harvest Grove code documentation",
    "keywords": "Class TreeDestroyableSO Inheritance object DestroyableObjectSO TreeDestroyableSO Inherited Members DestroyableObjectSO.ID DestroyableObjectSO.MaxHealth DestroyableObjectSO.ObjectSprite DestroyableObjectSO.ObjectType DestroyableObjectSO.IsGrowing DestroyableObjectSO.ObjectSize DestroyableObjectSO.IsCustomDestroable DestroyableObjectSO.DroppedItems DestroyableObjectSO.RandomDroppedItems Namespace: World.DestroyableObjects Assembly: cs.temp.dll.dll Syntax public class TreeDestroyableSO : DestroyableObjectSO Fields Stump Declaration public ObjectTileTypeEnum Stump Field Value Type Description ObjectTileTypeEnum"
  },
  "api/World.Generation.Algorithms.AlgorithmBase.html": {
    "href": "api/World.Generation.Algorithms.AlgorithmBase.html",
    "title": "Class AlgorithmBase | Harvest Grove code documentation",
    "keywords": "Class AlgorithmBase Inheritance object AlgorithmBase BuildingAlgorithm CaveGeneration CellularAutomata ObjectGeneration PerlinNoiseGeneration DownstreamRiverGeneration DrunkenRiverGeneration Namespace: World.Generation.Algorithms Assembly: cs.temp.dll.dll Syntax public abstract class AlgorithmBase : ScriptableObject Methods Apply(TilemapStructure, IslandsDictionaryNames) Declaration public abstract void Apply(TilemapStructure tilemap, IslandsDictionaryNames currentIsland) Parameters Type Name Description TilemapStructure tilemap IslandsDictionaryNames currentIsland"
  },
  "api/World.Generation.Algorithms.BuildingAlgorithm.html": {
    "href": "api/World.Generation.Algorithms.BuildingAlgorithm.html",
    "title": "Class BuildingAlgorithm | Harvest Grove code documentation",
    "keywords": "Class BuildingAlgorithm Inheritance object AlgorithmBase BuildingAlgorithm Namespace: World.Generation.Algorithms Assembly: cs.temp.dll.dll Syntax public class BuildingAlgorithm : AlgorithmBase Methods Apply(TilemapStructure, IslandsDictionaryNames) Declaration public override void Apply(TilemapStructure tilemap, IslandsDictionaryNames currentIsland) Parameters Type Name Description TilemapStructure tilemap IslandsDictionaryNames currentIsland Overrides AlgorithmBase.Apply(TilemapStructure, IslandsDictionaryNames)"
  },
  "api/World.Generation.Algorithms.CaveGeneration.html": {
    "href": "api/World.Generation.Algorithms.CaveGeneration.html",
    "title": "Class CaveGeneration | Harvest Grove code documentation",
    "keywords": "Class CaveGeneration Generates cave-like structures using cellular automata and chunk stamping. Handles region connection, wall placement, chunk blending, and cave exits. Inheritance object AlgorithmBase CaveGeneration Namespace: World.Generation.Algorithms Assembly: cs.temp.dll.dll Syntax public class CaveGeneration : AlgorithmBase Fields FloorPercent Declaration public int FloorPercent Field Value Type Description int SmoothIterations Declaration public int SmoothIterations Field Value Type Description int Methods Apply(TilemapStructure, IslandsDictionaryNames) Main entry point: Applies cave generation algorithm to the given tilemap. Declaration public override void Apply(TilemapStructure tilemap, IslandsDictionaryNames currentIsland) Parameters Type Name Description TilemapStructure tilemap IslandsDictionaryNames currentIsland Overrides AlgorithmBase.Apply(TilemapStructure, IslandsDictionaryNames)"
  },
  "api/World.Generation.Algorithms.CellularAutomata.html": {
    "href": "api/World.Generation.Algorithms.CellularAutomata.html",
    "title": "Class CellularAutomata | Harvest Grove code documentation",
    "keywords": "Class CellularAutomata Inheritance object AlgorithmBase CellularAutomata Namespace: World.Generation.Algorithms Assembly: cs.temp.dll.dll Syntax public class CellularAutomata : AlgorithmBase Fields MinAlive Declaration public int MinAlive Field Value Type Description int Repetitions Declaration public int Repetitions Field Value Type Description int ReplaceByDominantTile Declaration public bool ReplaceByDominantTile Field Value Type Description bool ReplacedBy Declaration public ObjectTileTypeEnum ReplacedBy Field Value Type Description ObjectTileTypeEnum TargetTile Declaration public ObjectTileTypeEnum TargetTile Field Value Type Description ObjectTileTypeEnum Methods Apply(TilemapStructure, IslandsDictionaryNames) Declaration public override void Apply(TilemapStructure tilemap, IslandsDictionaryNames currentIsland) Parameters Type Name Description TilemapStructure tilemap IslandsDictionaryNames currentIsland Overrides AlgorithmBase.Apply(TilemapStructure, IslandsDictionaryNames)"
  },
  "api/World.Generation.Algorithms.html": {
    "href": "api/World.Generation.Algorithms.html",
    "title": "Namespace World.Generation.Algorithms | Harvest Grove code documentation",
    "keywords": "Namespace World.Generation.Algorithms Classes AlgorithmBase BuildingAlgorithm CaveGeneration Generates cave-like structures using cellular automata and chunk stamping. Handles region connection, wall placement, chunk blending, and cave exits. CellularAutomata Noise NoiseValues ObjectGeneration PerlinNoiseGeneration"
  },
  "api/World.Generation.Algorithms.Noise.html": {
    "href": "api/World.Generation.Algorithms.Noise.html",
    "title": "Class Noise | Harvest Grove code documentation",
    "keywords": "Class Noise Inheritance object Noise Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: World.Generation.Algorithms Assembly: cs.temp.dll.dll Syntax public class Noise Methods GenerateIslandGradientMap(int, int) Declaration public static float[] GenerateIslandGradientMap(int mapWidth, int mapHeight) Parameters Type Name Description int mapWidth int mapHeight Returns Type Description float[] GenerateNoiseMap(int, int, int, float, int, float, float, Vector2) Declaration public static float[] GenerateNoiseMap(int mapWidth, int mapHeight, int seed, float scale, int octaves, float persistance, float lacunarity, Vector2 offset) Parameters Type Name Description int mapWidth int mapHeight int seed float scale int octaves float persistance float lacunarity Vector2 offset Returns Type Description float[]"
  },
  "api/World.Generation.Algorithms.NoiseValues.html": {
    "href": "api/World.Generation.Algorithms.NoiseValues.html",
    "title": "Class NoiseValues | Harvest Grove code documentation",
    "keywords": "Class NoiseValues Inheritance object NoiseValues Namespace: World.Generation.Algorithms Assembly: cs.temp.dll.dll Syntax public class NoiseValues : ScriptableObject Fields GroundTile Declaration public GroundTileTypeEnum GroundTile Field Value Type Description GroundTileTypeEnum Height Declaration public float Height Field Value Type Description float"
  },
  "api/World.Generation.Algorithms.ObjectGeneration.html": {
    "href": "api/World.Generation.Algorithms.ObjectGeneration.html",
    "title": "Class ObjectGeneration | Harvest Grove code documentation",
    "keywords": "Class ObjectGeneration Inheritance object AlgorithmBase ObjectGeneration Namespace: World.Generation.Algorithms Assembly: cs.temp.dll.dll Syntax public class ObjectGeneration : AlgorithmBase Methods Apply(TilemapStructure, IslandsDictionaryNames) Declaration public override void Apply(TilemapStructure tilemap, IslandsDictionaryNames currentIsland) Parameters Type Name Description TilemapStructure tilemap IslandsDictionaryNames currentIsland Overrides AlgorithmBase.Apply(TilemapStructure, IslandsDictionaryNames)"
  },
  "api/World.Generation.Algorithms.PerlinNoiseGeneration.html": {
    "href": "api/World.Generation.Algorithms.PerlinNoiseGeneration.html",
    "title": "Class PerlinNoiseGeneration | Harvest Grove code documentation",
    "keywords": "Class PerlinNoiseGeneration Inheritance object AlgorithmBase PerlinNoiseGeneration Namespace: World.Generation.Algorithms Assembly: cs.temp.dll.dll Syntax public class PerlinNoiseGeneration : AlgorithmBase Fields ApplyIslandGradient Declaration public bool ApplyIslandGradient Field Value Type Description bool Lacunarity Declaration public float Lacunarity Field Value Type Description float NoiseScale Declaration public float NoiseScale Field Value Type Description float Octaves Declaration public int Octaves Field Value Type Description int Persistance Declaration public float Persistance Field Value Type Description float Properties Offset Declaration public Vector2 Offset { get; } Property Value Type Description Vector2 Methods Apply(TilemapStructure, IslandsDictionaryNames) Declaration public override void Apply(TilemapStructure tilemap, IslandsDictionaryNames currentIsland) Parameters Type Name Description TilemapStructure tilemap IslandsDictionaryNames currentIsland Overrides AlgorithmBase.Apply(TilemapStructure, IslandsDictionaryNames)"
  },
  "api/World.Generation.Algorithms.River.DownstreamRiverGeneration.html": {
    "href": "api/World.Generation.Algorithms.River.DownstreamRiverGeneration.html",
    "title": "Class DownstreamRiverGeneration | Harvest Grove code documentation",
    "keywords": "Class DownstreamRiverGeneration Inheritance object AlgorithmBase DownstreamRiverGeneration Namespace: World.Generation.Algorithms.River Assembly: cs.temp.dll.dll Syntax public class DownstreamRiverGeneration : AlgorithmBase Fields GroundHeightmap Declaration public PerlinNoiseGeneration GroundHeightmap Field Value Type Description PerlinNoiseGeneration MaxRiverQuota Declaration public int MaxRiverQuota Field Value Type Description int MinDistanceBetweenRiverStartPoints Declaration public int MinDistanceBetweenRiverStartPoints Field Value Type Description int MinRiverQuota Declaration public int MinRiverQuota Field Value Type Description int StartingTileTypes Declaration public GroundTileTypeEnum[] StartingTileTypes Field Value Type Description GroundTileTypeEnum[] Methods Apply(TilemapStructure, IslandsDictionaryNames) Declaration public override void Apply(TilemapStructure tilemap, IslandsDictionaryNames currentIsland) Parameters Type Name Description TilemapStructure tilemap IslandsDictionaryNames currentIsland Overrides AlgorithmBase.Apply(TilemapStructure, IslandsDictionaryNames)"
  },
  "api/World.Generation.Algorithms.River.DrunkenRiverGeneration.html": {
    "href": "api/World.Generation.Algorithms.River.DrunkenRiverGeneration.html",
    "title": "Class DrunkenRiverGeneration | Harvest Grove code documentation",
    "keywords": "Class DrunkenRiverGeneration Inheritance object AlgorithmBase DrunkenRiverGeneration Namespace: World.Generation.Algorithms.River Assembly: cs.temp.dll.dll Syntax public class DrunkenRiverGeneration : AlgorithmBase Fields MaxRiverQuota Declaration public int MaxRiverQuota Field Value Type Description int MinDistanceBetweenRiverStartPoints Declaration public int MinDistanceBetweenRiverStartPoints Field Value Type Description int MinRiverQuota Declaration public int MinRiverQuota Field Value Type Description int RiverDriftChance Declaration public int RiverDriftChance Field Value Type Description int RiverWidth Declaration public int RiverWidth Field Value Type Description int StartingTileTypes Declaration public GroundTileTypeEnum[] StartingTileTypes Field Value Type Description GroundTileTypeEnum[] Methods Apply(TilemapStructure, IslandsDictionaryNames) Declaration public override void Apply(TilemapStructure tilemap, IslandsDictionaryNames currentIsland) Parameters Type Name Description TilemapStructure tilemap IslandsDictionaryNames currentIsland Overrides AlgorithmBase.Apply(TilemapStructure, IslandsDictionaryNames)"
  },
  "api/World.Generation.Algorithms.River.html": {
    "href": "api/World.Generation.Algorithms.River.html",
    "title": "Namespace World.Generation.Algorithms.River | Harvest Grove code documentation",
    "keywords": "Namespace World.Generation.Algorithms.River Classes DownstreamRiverGeneration DrunkenRiverGeneration TileTypeMappings Structs TileTypeConfig"
  },
  "api/World.Generation.Algorithms.River.TileTypeConfig.html": {
    "href": "api/World.Generation.Algorithms.River.TileTypeConfig.html",
    "title": "Struct TileTypeConfig | Harvest Grove code documentation",
    "keywords": "Struct TileTypeConfig Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: World.Generation.Algorithms.River Assembly: cs.temp.dll.dll Syntax public struct TileTypeConfig Constructors TileTypeConfig(int, int) Declaration public TileTypeConfig(int shallowWaterTileId, int oceanTileId) Parameters Type Name Description int shallowWaterTileId int oceanTileId Properties OceanTileId Declaration public readonly int OceanTileId { get; } Property Value Type Description int ShallowWaterTileId Declaration public readonly int ShallowWaterTileId { get; } Property Value Type Description int"
  },
  "api/World.Generation.Algorithms.River.TileTypeMappings.html": {
    "href": "api/World.Generation.Algorithms.River.TileTypeMappings.html",
    "title": "Class TileTypeMappings | Harvest Grove code documentation",
    "keywords": "Class TileTypeMappings Inheritance object TileTypeMappings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: World.Generation.Algorithms.River Assembly: cs.temp.dll.dll Syntax public static class TileTypeMappings Fields IslandTileTypeConfig Declaration public static readonly Dictionary<IslandsDictionaryNames, TileTypeConfig> IslandTileTypeConfig Field Value Type Description Dictionary<, ><IslandsDictionaryNames, TileTypeConfig>"
  },
  "api/World.Generation.html": {
    "href": "api/World.Generation.html",
    "title": "Namespace World.Generation | Harvest Grove code documentation",
    "keywords": "Namespace World.Generation Classes TileGrid TilemapStructure Enums TilemapType Represents the different types of tilemaps."
  },
  "api/World.Generation.SOs.ColorData.html": {
    "href": "api/World.Generation.SOs.ColorData.html",
    "title": "Class ColorData | Harvest Grove code documentation",
    "keywords": "Class ColorData Inheritance object ColorData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: World.Generation.SOs Assembly: cs.temp.dll.dll Syntax public class ColorData Constructors ColorData() Declaration public ColorData() ColorData(ColorsReference, Color) Declaration public ColorData(ColorsReference colorType, Color color) Parameters Type Name Description ColorsReference colorType Color color Fields Color Declaration public Color Color Field Value Type Description Color ColorType Declaration public ColorsReference ColorType Field Value Type Description ColorsReference"
  },
  "api/World.Generation.SOs.GroundTilesSO.html": {
    "href": "api/World.Generation.SOs.GroundTilesSO.html",
    "title": "Class GroundTilesSO | Harvest Grove code documentation",
    "keywords": "Class GroundTilesSO Inheritance object GroundTilesSO Namespace: World.Generation.SOs Assembly: cs.temp.dll.dll Syntax public class GroundTilesSO : ScriptableObject Fields GetGroundTiles Declaration public TileTypeSO[] GetGroundTiles Field Value Type Description TileTypeSO[]"
  },
  "api/World.Generation.SOs.html": {
    "href": "api/World.Generation.SOs.html",
    "title": "Namespace World.Generation.SOs | Harvest Grove code documentation",
    "keywords": "Namespace World.Generation.SOs Classes ColorData GroundTilesSO ObjectTilesSO WorldDataSO"
  },
  "api/World.Generation.SOs.ObjectTilesSO.html": {
    "href": "api/World.Generation.SOs.ObjectTilesSO.html",
    "title": "Class ObjectTilesSO | Harvest Grove code documentation",
    "keywords": "Class ObjectTilesSO Inheritance object ObjectTilesSO Namespace: World.Generation.SOs Assembly: cs.temp.dll.dll Syntax public class ObjectTilesSO : ScriptableObject Fields GetObjectTiles Declaration public ObjectTileSO[] GetObjectTiles Field Value Type Description ObjectTileSO[]"
  },
  "api/World.Generation.SOs.WorldDataSO.html": {
    "href": "api/World.Generation.SOs.WorldDataSO.html",
    "title": "Class WorldDataSO | Harvest Grove code documentation",
    "keywords": "Class WorldDataSO Inheritance object WorldDataSO Namespace: World.Generation.SOs Assembly: cs.temp.dll.dll Syntax public class WorldDataSO : ScriptableObject Fields CatColors Declaration public List<ColorData> CatColors Field Value Type Description List<><ColorData> IsFarmHouseBuilt Declaration public bool IsFarmHouseBuilt Field Value Type Description bool IsHomeHarborBuilt Declaration public bool IsHomeHarborBuilt Field Value Type Description bool OffsetX Declaration public int OffsetX Field Value Type Description int OffsetY Declaration public int OffsetY Field Value Type Description int PetsName Declaration public string PetsName Field Value Type Description string PlayerStatistics Declaration public List<Statistic> PlayerStatistics Field Value Type Description List<><Statistic> SceneName Declaration public SceneEnum SceneName Field Value Type Description SceneEnum Seed Declaration public int Seed Field Value Type Description int WorldCreatedAt Declaration public DateTime WorldCreatedAt Field Value Type Description DateTime WorldName Declaration public string WorldName Field Value Type Description string Properties GetFileName Declaration public string GetFileName { get; } Property Value Type Description string GetOffset Declaration public Vector2 GetOffset { get; } Property Value Type Description Vector2 IsFirstInitialization Declaration public bool IsFirstInitialization { get; set; } Property Value Type Description bool IsTravelling Declaration public bool IsTravelling { get; set; } Property Value Type Description bool TravelingTimeInMinutes Declaration public int TravelingTimeInMinutes { get; set; } Property Value Type Description int Methods AssignInfo(int, string, string, List<ColorData>) Saves the seed and world name to SO Declaration public void AssignInfo(int seed, string worldName, string catsName, List<ColorData> catColors) Parameters Type Name Description int seed string worldName string catsName List<><ColorData> catColors LoadWorldData() Declaration public UniTask LoadWorldData() Returns Type Description UniTask SaveWorldData() Declaration public UniTask SaveWorldData() Returns Type Description UniTask"
  },
  "api/World.Generation.TileGrid.html": {
    "href": "api/World.Generation.TileGrid.html",
    "title": "Class TileGrid | Harvest Grove code documentation",
    "keywords": "Class TileGrid Inheritance object TileGrid Implements ITaskSavable Namespace: World.Generation Assembly: cs.temp.dll.dll Syntax public class TileGrid : MonoBehaviour, ITaskSavable Fields IsTestingMap Declaration public static bool IsTestingMap Field Value Type Description bool OnHarborSpawned Declaration public static Action OnHarborSpawned Field Value Type Description Action Properties CollidableTilemapLayers Declaration public TilemapType[] CollidableTilemapLayers { get; } Property Value Type Description TilemapType[] Height Declaration public int Height { get; } Property Value Type Description int ObjectTileSo Declaration public ObjectTilesSO ObjectTileSo { get; } Property Value Type Description ObjectTilesSO Priority Declaration public int Priority { get; } Property Value Type Description int Seed Declaration public int Seed { get; } Property Value Type Description int TileSize Declaration public int TileSize { get; } Property Value Type Description int Width Declaration public int Width { get; } Property Value Type Description int Methods Construct(IGameData, IPlayerData, IIslandReloadService) Declaration public void Construct(IGameData gameData, IPlayerData playerData, IIslandReloadService islandReloadService) Parameters Type Name Description IGameData gameData IPlayerData playerData IIslandReloadService islandReloadService GetBuildingMap() Declaration public TilemapStructure GetBuildingMap() Returns Type Description TilemapStructure GetColliderType(int) Declaration public Tile.ColliderType GetColliderType(int tileId) Parameters Type Name Description int tileId Returns Type Description Tile.ColliderType GetCollisionMap() Returns an instance to the shared collision map. Declaration public TilemapStructure GetCollisionMap() Returns Type Description TilemapStructure GetTileCache() Returns all the cached shared tiles available to be placed on the tilemap Declaration public Dictionary<int, TileBase> GetTileCache() Returns Type Description Dictionary<, ><int, TileBase> GetTilemap(TilemapType) Returns the tilemap of the given type Declaration public TilemapStructure GetTilemap(TilemapType type) Parameters Type Name Description TilemapType type Returns Type Description TilemapStructure Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Implements ITaskSavable"
  },
  "api/World.Generation.TilemapStructure.html": {
    "href": "api/World.Generation.TilemapStructure.html",
    "title": "Class TilemapStructure | Harvest Grove code documentation",
    "keywords": "Class TilemapStructure Inheritance object TilemapStructure Namespace: World.Generation Assembly: cs.temp.dll.dll Syntax public class TilemapStructure : MonoBehaviour Fields TileGrid Declaration public TileGrid TileGrid Field Value Type Description TileGrid Properties GetCurrentTilemap Declaration public Tilemap GetCurrentTilemap { get; } Property Value Type Description Tilemap GetTilemapType Declaration public TilemapType GetTilemapType { get; } Property Value Type Description TilemapType GetTilesValues Declaration public int[] GetTilesValues { get; } Property Value Type Description int[] Height Declaration public int Height { get; } Property Value Type Description int Width Declaration public int Width { get; } Property Value Type Description int Methods Construct(IGameData) Declaration public void Construct(IGameData gameData) Parameters Type Name Description IGameData gameData Get4Neighbors(int, int) Returns only the direct 4 neighbors (horizontal and vertical) - ignores the tile player is standing on Declaration public List<KeyValuePair<Vector2Int, int>> Get4Neighbors(int tileX, int tileY) Parameters Type Name Description int tileX int tileY Returns Type Description List<><KeyValuePair<, ><Vector2Int, int>> Get4NeighborsForPlayer(int, int) Declaration public List<KeyValuePair<Vector2Int, int>> Get4NeighborsForPlayer(int tileX, int tileY) Parameters Type Name Description int tileX int tileY Returns Type Description List<><KeyValuePair<, ><Vector2Int, int>> Get8Neighbors(int, int, List<Vector2Int>) Declaration public List<KeyValuePair<Vector2Int, int>> Get8Neighbors(int tileX, int tileY, List<Vector2Int> playerPositions) Parameters Type Name Description int tileX int tileY List<><Vector2Int> playerPositions Returns Type Description List<><KeyValuePair<, ><Vector2Int, int>> Get8Neighbors(int, int) Returns all 8 neighbors (vertical, horizontal, diagonal) - ignores middle tile Declaration public List<KeyValuePair<Vector2Int, int>> Get8Neighbors(int tileX, int tileY) Parameters Type Name Description int tileX int tileY Returns Type Description List<><KeyValuePair<, ><Vector2Int, int>> Get8NeighborsForPlayer(int, int) This method is used for getting 8 tiles for player {it's not ignoring the tile below the player} Declaration public List<KeyValuePair<Vector2Int, int>> Get8NeighborsForPlayer(int tileX, int tileY) Parameters Type Name Description int tileX int tileY Returns Type Description List<><KeyValuePair<, ><Vector2Int, int>> GetTile(int, int) Return type of tile, otherwise 0 if invalid position. Declaration public int GetTile(int x, int y) Parameters Type Name Description int x int y Returns Type Description int GetTile(Vector2) Declaration public int GetTile(Vector2 vector) Parameters Type Name Description Vector2 vector Returns Type Description int GetTile(Vector3Int) Declaration public int GetTile(Vector3Int vector) Parameters Type Name Description Vector3Int vector Returns Type Description int HasTile(int, int) Declaration public bool HasTile(int x, int y) Parameters Type Name Description int x int y Returns Type Description bool Initialize() Used when the map is spawning (when a new world is created) Declaration public void Initialize() IsAreaFree(int, int, int, int) Declaration public bool IsAreaFree(int startX, int startY, int width, int height) Parameters Type Name Description int startX int startY int width int height Returns Type Description bool LoadTilemap(int[]) Used for loading (when player continues in their world) Declaration public void LoadTilemap(int[] loadedTiles) Parameters Type Name Description int[] loadedTiles SetTile(int, int, int?, bool, bool, bool, bool) Sets the tile at the specified coordinates with the given value. Optionally updates the tilemap, marks the tile as plowed, adds a collider, or removes it from a building Declaration public void SetTile(int x, int y, int? value, bool updateTilemap = false, bool isPlowded = true, bool addCollider = false, bool removeFromBuilding = false) Parameters Type Name Description int x The x-coordinate where to put tile int y The y-coordinate owhere to put tile int? value The value to set the tile to {Tile's id}. If null, the tile is set to 0 {= empty tile} bool updateTilemap Whether to update the tilemap after setting the tile bool isPlowded Whether the tile is plowed bool addCollider Whether to add a collider to the tile bool removeFromBuilding Whether to remove the tile from a building tilemap SetTile(Vector2, int?, bool, bool, bool, bool) Declaration public void SetTile(Vector2 pos, int? value, bool updateTilemap = false, bool isPlowded = true, bool addCollider = false, bool removeFromBuilding = false) Parameters Type Name Description Vector2 pos int? value bool updateTilemap bool isPlowded bool addCollider bool removeFromBuilding UpdateNavMesh() Declaration public static void UpdateNavMesh() UpdateTiles(Vector2Int[]) Updates only a select few positions of the structure. Use this if you only need to update a few tiles, it is more efficient Declaration public void UpdateTiles(Vector2Int[] positions) Parameters Type Name Description Vector2Int[] positions"
  },
  "api/World.Generation.TilemapType.html": {
    "href": "api/World.Generation.TilemapType.html",
    "title": "Enum TilemapType | Harvest Grove code documentation",
    "keywords": "Enum TilemapType Represents the different types of tilemaps. Namespace: World.Generation Assembly: cs.temp.dll.dll Syntax public enum TilemapType Fields Name Description Building Collision Crop Harbor Hovering Object ObjectBelowPlayer World"
  },
  "api/World.Generation.Tiles.GroundTIle.GroundTileTypeEnum.html": {
    "href": "api/World.Generation.Tiles.GroundTIle.GroundTileTypeEnum.html",
    "title": "Enum GroundTileTypeEnum | Harvest Grove code documentation",
    "keywords": "Enum GroundTileTypeEnum Represents the different types of ground tiles used in world generation. Namespace: World.Generation.Tiles.GroundTIle Assembly: cs.temp.dll.dll Syntax public enum GroundTileTypeEnum Fields Name Description CaveEntrance CaveFloor CaveFloorChunkConnection CaveWall ColumnField ConnectingTile Dirt Empty EmptyTile FlowerGrass ForestBeach ForestGrass ForestOceanWater ForestShallowWater HarborBroken HarborFixed HarborPlank HomeBeach NormalGrass OceanWater River RowField ShallowWaterHome StairsDown StairsLeft StairsRight StairsTop TakenBuilding Watered_ColumnField Watered_RowField"
  },
  "api/World.Generation.Tiles.GroundTIle.html": {
    "href": "api/World.Generation.Tiles.GroundTIle.html",
    "title": "Namespace World.Generation.Tiles.GroundTIle | Harvest Grove code documentation",
    "keywords": "Namespace World.Generation.Tiles.GroundTIle Classes TileTypeSO Enums GroundTileTypeEnum Represents the different types of ground tiles used in world generation."
  },
  "api/World.Generation.Tiles.GroundTIle.TileTypeSO.html": {
    "href": "api/World.Generation.Tiles.GroundTIle.TileTypeSO.html",
    "title": "Class TileTypeSO | Harvest Grove code documentation",
    "keywords": "Class TileTypeSO Inheritance object TileTypeSO Namespace: World.Generation.Tiles.GroundTIle Assembly: cs.temp.dll.dll Syntax public class TileTypeSO : TileData Fields TileType Declaration public GroundTileTypeEnum TileType Field Value Type Description GroundTileTypeEnum Properties TileTypeId Declaration public override int TileTypeId { get; } Property Value Type Description int"
  },
  "api/World.Generation.Tiles.ObjectTiles.GateTileSO.html": {
    "href": "api/World.Generation.Tiles.ObjectTiles.GateTileSO.html",
    "title": "Class GateTileSO | Harvest Grove code documentation",
    "keywords": "Class GateTileSO Inheritance object GateTileSO Namespace: World.Generation.Tiles.ObjectTiles Assembly: cs.temp.dll.dll Syntax public class GateTileSO : ScriptableObject Fields OpenLowerPartOne Declaration public ObjectTileSO OpenLowerPartOne Field Value Type Description ObjectTileSO OpenLowerPartTwo Declaration public ObjectTileSO OpenLowerPartTwo Field Value Type Description ObjectTileSO OpenUpperPartOne Declaration public ObjectTileSO OpenUpperPartOne Field Value Type Description ObjectTileSO OpenUpperPartTwo Declaration public ObjectTileSO OpenUpperPartTwo Field Value Type Description ObjectTileSO"
  },
  "api/World.Generation.Tiles.ObjectTiles.html": {
    "href": "api/World.Generation.Tiles.ObjectTiles.html",
    "title": "Namespace World.Generation.Tiles.ObjectTiles | Harvest Grove code documentation",
    "keywords": "Namespace World.Generation.Tiles.ObjectTiles Classes GateTileSO ObjectTileSO TileData Enums ObjectTileTypeEnum Enum representing different types of object tiles used in world generation. Each value corresponds to a specific object type, such as trees, crops, fences, animal troughs, stones, bushes, buildings, and miscellaneous items. Value ranges are reserved for specific categories."
  },
  "api/World.Generation.Tiles.ObjectTiles.ObjectTileSO.html": {
    "href": "api/World.Generation.Tiles.ObjectTiles.ObjectTileSO.html",
    "title": "Class ObjectTileSO | Harvest Grove code documentation",
    "keywords": "Class ObjectTileSO Inheritance object TileData ObjectTileSO Inherited Members TileData.Tile TileData.ColliderType Namespace: World.Generation.Tiles.ObjectTiles Assembly: cs.temp.dll.dll Syntax public class ObjectTileSO : TileData Fields Height Declaration public ushort Height Field Value Type Description ushort TileType Declaration public ObjectTileTypeEnum TileType Field Value Type Description ObjectTileTypeEnum Width Declaration public ushort Width Field Value Type Description ushort Properties TileTypeId Declaration public override int TileTypeId { get; } Property Value Type Description int Overrides TileData.TileTypeId"
  },
  "api/World.Generation.Tiles.ObjectTiles.ObjectTileTypeEnum.html": {
    "href": "api/World.Generation.Tiles.ObjectTiles.ObjectTileTypeEnum.html",
    "title": "Enum ObjectTileTypeEnum | Harvest Grove code documentation",
    "keywords": "Enum ObjectTileTypeEnum Enum representing different types of object tiles used in world generation. Each value corresponds to a specific object type, such as trees, crops, fences, animal troughs, stones, bushes, buildings, and miscellaneous items. Value ranges are reserved for specific categories. Namespace: World.Generation.Tiles.ObjectTiles Assembly: cs.temp.dll.dll Syntax public enum ObjectTileTypeEnum Fields Name Description AppleStump AppleTreeGreenSapling AppleTreeGreenWithoutApples AppleTreeGrownGreenApples AppleTreeGrownRedApples AppleTreeGrownWithoutApples AppleTreeSapling BeachStoneV1 BeachStoneV2 BeachStoneV3 Beetroot Beetroot2 Beetroot3 BeetrootGrown BellPepper BellPepper2 BellPepper3 BellPepper4 BellPepperGrown BigRockV1 BigRockV2 BirchDirtStick BirchForestGrassStick BirchGrassStick BirchSandStick BirchStump BirchTree BirchTreeSapling BlackberryBush BlackberryBushGrown BlackberryBushSapling BlueberryBush BlueberryBushGrown BlueberryBushSapling BlueGrapes BlueGrapes2 BlueGrapes3 BlueGrapes4 BlueGrapes5 BlueMushroom BrownMushroom Cabbage Cabbage2 Cabbage3 Cabbage4 CabbageGrown Campfire Carrot Carrot2 Carrot3 CarrotGrown CaveRockV1 CaveRockV2 CaveRockV3 CaveRockV4 CherryStump CherryTreeGrownWithCherries CherryTreeGrownWithoutCherries CherryTreeSapling Chest ChiliPepper ChiliPepper2 ChiliPepper3 ChiliPepper4 ChiliPepperGrown CoalOre ConiferousTree Corn Corn2 Corn3 Corn4 CornGrown Cucumber Cucumber2 Cucumber3 CucumberGrown DeciduosTree Empty EmptyFoodTroughLeft EmptyFoodTroughTop EmptyWaterTroughLeft EmptyWaterTroughTop Fence Filled0PercentChickenFoodTroughLeft Filled0PercentChickenFoodTroughTop Filled0PercentHerbivorFoodTroughLeft Filled0PercentHerbivorFoodTroughTop Filled100PercentChickenFoodTroughLeft Filled100PercentChickenFoodTroughTop Filled100PercentHerbivorFoodTroughLeft Filled100PercentHerbivorFoodTroughTop Filled100PercentWaterTroughLeft Filled100PercentWaterTroughTop Filled25PercentChickenFoodTroughLeft Filled25PercentChickenFoodTroughTop Filled25PercentHerbivorFoodTroughLeft Filled25PercentHerbivorFoodTroughTop Filled25PercentWaterTroughLeft Filled25PercentWaterTroughTop Filled50PercentChickenFoodTroughLeft Filled50PercentChickenFoodTroughTop Filled50PercentHerbivorFoodTroughLeft Filled50PercentHerbivorFoodTroughTop Filled50PercentWaterTroughLeft Filled50PercentWaterTroughTop Filled75PercentChickenFoodTroughLeft Filled75PercentChickenFoodTroughTop Filled75PercentHerbivorFoodTroughLeft Filled75PercentHerbivorFoodTroughTop Filled75PercentWaterTroughLeft Filled75PercentWaterTroughTop ForestGrassStick ForestStoneV1 ForestStoneV2 ForestStoneV3 ForestStoneV4 ForestStoneV5 Garlic Garlic2 Garlic3 Garlic4 GateDown GateOpenDownFour GateOpenDownInteractableThree GateOpenDownInteractableTwo GateOpenDownOne GateOpenSideFour GateOpenSideInteractableThree GateOpenSideInteractableTwo GateOpenSideOne GateSide GoldOre GreenMushroom IronOre OakDirtStick OakForestGrassStick OakGrassStick OakSandStick OakStump OakTree OakTreeSapling Onion Onion2 Onion3 Onion4 OnionGrown PearStump PearTreeGrownWithoutPears PearTreeGrownWithPear PearTreeSapling PineStump PineTree PineTreeSapling PineTreeWithCones PinkberryBush PinkberryBushGrown PinkberryBushSapling PlumStump PlumTreeGrownWithout PlumTreeGrownWithPlums PlumTreeSapling Potato Potato2 Potato3 Potato4 PotatoGrown Pumpkin Pumpkin2 Pumpkin3 PumpkinGrown RedGrapes RedGrapes2 RedGrapes3 RedGrapes4 RedGrapes5 RedMushroom RockV1 RockV2 RockV3 Scattered0PercentHerbivorFood Scattered100PercentHerbivorFood Scattered25PercentHerbivorFood Scattered50PercentHerbivorFood Scattered75PercentHerbivorFood ScatteredDownChickenFood ScatteredLeftChickenFood ScatteredRightChickenFood ScatteredTopChickenFood SilverOre SomethingPlantedCrop SomethingPlantedSapling StoneV1 StoneV2 StoneV3 StoneV4 StoneV5 StrawberryBush StrawberryBushGrown StrawberryBushSapling Tomato Tomato2 Tomato3 Tomato4 TomatoGrown Wheat Wheat2 Wheat3 Wheat4 WheatGrown WhiteGrapes WhiteGrapes2 WhiteGrapes3 WhiteGrapes4 WhiteGrapes5 WillowDirtStick WillowForestGrassStick WillowGrassStick WillowSandStick WillowStump WillowTree WillowTreeSapling WoodenBridge WoodenBridgeEdge YellowBellPepper YellowBellPepper2 YellowBellPepper3 YellowBellPepper4 YellowBellPepperGrown"
  },
  "api/World.Generation.Tiles.ObjectTiles.TileData.html": {
    "href": "api/World.Generation.Tiles.ObjectTiles.TileData.html",
    "title": "Class TileData | Harvest Grove code documentation",
    "keywords": "Class TileData Inheritance object TileData ObjectTileSO Namespace: World.Generation.Tiles.ObjectTiles Assembly: cs.temp.dll.dll Syntax public abstract class TileData : ScriptableObject Fields ColliderType Declaration public Tile.ColliderType ColliderType Field Value Type Description Tile.ColliderType Tile Declaration public TileBase Tile Field Value Type Description TileBase Properties TileTypeId Declaration public virtual int TileTypeId { get; } Property Value Type Description int"
  },
  "api/World.Generation.Tiles.RuledTiles.AdvancedRuleTile.html": {
    "href": "api/World.Generation.Tiles.RuledTiles.AdvancedRuleTile.html",
    "title": "Class AdvancedRuleTile | Harvest Grove code documentation",
    "keywords": "Class AdvancedRuleTile Inheritance object AdvancedRuleTile Namespace: World.Generation.Tiles.RuledTiles Assembly: cs.temp.dll.dll Syntax public class AdvancedRuleTile : RuleTile<AdvancedRuleTile.Neighbor> Fields alwaysConnect Declaration public bool alwaysConnect Field Value Type Description bool checkSelf Declaration public bool checkSelf Field Value Type Description bool MatchCode Declaration public string MatchCode Field Value Type Description string MatchTypeAndCode Declaration public bool MatchTypeAndCode Field Value Type Description bool TilesetAConnections Declaration public List<TileBase> TilesetAConnections Field Value Type Description List<><TileBase> TilesetBConnections Declaration public List<TileBase> TilesetBConnections Field Value Type Description List<><TileBase> TilesetCConnections Declaration public List<TileBase> TilesetCConnections Field Value Type Description List<><TileBase> Methods RuleMatch(int, TileBase) Declaration public override bool RuleMatch(int neighbor, TileBase tile) Parameters Type Name Description int neighbor TileBase tile Returns Type Description bool"
  },
  "api/World.Generation.Tiles.RuledTiles.AdvancedRuleTile.Neighbor.html": {
    "href": "api/World.Generation.Tiles.RuledTiles.AdvancedRuleTile.Neighbor.html",
    "title": "Class AdvancedRuleTile.Neighbor | Harvest Grove code documentation",
    "keywords": "Class AdvancedRuleTile.Neighbor Inheritance object AdvancedRuleTile.Neighbor Namespace: World.Generation.Tiles.RuledTiles Assembly: cs.temp.dll.dll Syntax public class AdvancedRuleTile.Neighbor : RuleTile.TilingRule.Neighbor Fields Any Declaration public const int Any = 3 Field Value Type Description int Nothing Declaration public const int Nothing = 5 Field Value Type Description int TilesetSpecificA Declaration public const int TilesetSpecificA = 4 Field Value Type Description int TilesetSpecificB Declaration public const int TilesetSpecificB = 7 Field Value Type Description int TilesetSpecificC Declaration public const int TilesetSpecificC = 8 Field Value Type Description int"
  },
  "api/World.Generation.Tiles.RuledTiles.AdvancedRuleTile.Tileset.html": {
    "href": "api/World.Generation.Tiles.RuledTiles.AdvancedRuleTile.Tileset.html",
    "title": "Enum AdvancedRuleTile.Tileset | Harvest Grove code documentation",
    "keywords": "Enum AdvancedRuleTile.Tileset Namespace: World.Generation.Tiles.RuledTiles Assembly: cs.temp.dll.dll Syntax public enum AdvancedRuleTile.Tileset Fields Name Description TilesetA TilesetB"
  },
  "api/World.Generation.Tiles.RuledTiles.AlternatingTile.html": {
    "href": "api/World.Generation.Tiles.RuledTiles.AlternatingTile.html",
    "title": "Class AlternatingTile | Harvest Grove code documentation",
    "keywords": "Class AlternatingTile Inheritance object AlternatingTile Namespace: World.Generation.Tiles.RuledTiles Assembly: cs.temp.dll.dll Syntax public class AlternatingTile : TileBase Fields leftTile Declaration public Tile leftTile Field Value Type Description Tile rightTile Declaration public Tile rightTile Field Value Type Description Tile Methods GetTileData(Vector3Int, ITilemap, ref TileData) Declaration public override void GetTileData(Vector3Int position, ITilemap tilemap, ref Tilemaps.TileData tileData) Parameters Type Name Description Vector3Int position ITilemap tilemap UnityEngine.Tilemaps.TileData tileData"
  },
  "api/World.Generation.Tiles.RuledTiles.html": {
    "href": "api/World.Generation.Tiles.RuledTiles.html",
    "title": "Namespace World.Generation.Tiles.RuledTiles | Harvest Grove code documentation",
    "keywords": "Namespace World.Generation.Tiles.RuledTiles Classes AdvancedRuleTile AdvancedRuleTile.Neighbor AlternatingTile Enums AdvancedRuleTile.Tileset"
  },
  "api/World.Harbor.HarborBuilding.html": {
    "href": "api/World.Harbor.HarborBuilding.html",
    "title": "Class HarborBuilding | Harvest Grove code documentation",
    "keywords": "Class HarborBuilding Inheritance object HarborBuilding Namespace: World.Harbor Assembly: cs.temp.dll.dll Syntax public class HarborBuilding : InteractionСontroller Methods Interact(CallbackContext) Declaration protected override void Interact(InputAction.CallbackContext _) Parameters Type Name Description InputAction.CallbackContext _ SetSprite(SideEnum) Declaration public void SetSprite(SideEnum side) Parameters Type Name Description SideEnum side"
  },
  "api/World.Harbor.HarborConstructionGameObject.html": {
    "href": "api/World.Harbor.HarborConstructionGameObject.html",
    "title": "Class HarborConstructionGameObject | Harvest Grove code documentation",
    "keywords": "Class HarborConstructionGameObject Inheritance object HarborConstructionGameObject Namespace: World.Harbor Assembly: cs.temp.dll.dll Syntax public class HarborConstructionGameObject : MonoBehaviour Methods AssignStuff(List<Vector3Int>, Vector3, Vector3) Assign the needed things - IT'S CALLED IN THE VERY BEGINNING!!! Declaration public void AssignStuff(List<Vector3Int> harborPositions, Vector3 position, Vector3 size) Parameters Type Name Description List<><Vector3Int> harborPositions Vector3 position Vector3 size Construct(ITileMapService, IPlayerData, IGameData) Declaration public void Construct(ITileMapService tileMapService, IPlayerData playerDataPassed, IGameData gameData) Parameters Type Name Description ITileMapService tileMapService IPlayerData playerDataPassed IGameData gameData"
  },
  "api/World.Harbor.HarborData.html": {
    "href": "api/World.Harbor.HarborData.html",
    "title": "Class HarborData | Harvest Grove code documentation",
    "keywords": "Class HarborData Inheritance object HarborData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: World.Harbor Assembly: cs.temp.dll.dll Syntax [Serializable] public class HarborData Constructors HarborData() Declaration public HarborData() HarborData(List<Vector3Int>, int) Declaration public HarborData(List<Vector3Int> harborPositions, int edgeIndex) Parameters Type Name Description List<><Vector3Int> harborPositions int edgeIndex Fields EdgeIndex Declaration public int EdgeIndex Field Value Type Description int HarborPositions Declaration public List<Vector3Int> HarborPositions Field Value Type Description List<><Vector3Int>"
  },
  "api/World.Harbor.HarborSpawn.html": {
    "href": "api/World.Harbor.HarborSpawn.html",
    "title": "Class HarborSpawn | Harvest Grove code documentation",
    "keywords": "Class HarborSpawn Inheritance object HarborSpawn Implements ISavableWithPath Namespace: World.Harbor Assembly: cs.temp.dll.dll Syntax public class HarborSpawn : MonoBehaviour, ISavableWithPath Fields EdgeIndex Declaration public static byte EdgeIndex Field Value Type Description byte OnHarborConstructionSpawned Declaration public static Action<ConstructionSO> OnHarborConstructionSpawned Field Value Type Description Action<><ConstructionSO> OnPlaceHarborStairs Declaration public static Action<Vector3Int[]> OnPlaceHarborStairs Field Value Type Description Action<><Vector3Int[]> Properties Priority Declaration public int Priority { get; } Property Value Type Description int Methods Construct(IGameData, ITileMapService) Declaration public void Construct(IGameData gameData, ITileMapService tileMapService) Parameters Type Name Description IGameData gameData ITileMapService tileMapService Initialize(IslandsDictionaryNames) Declaration public UniTask Initialize(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Load(IslandsDictionaryNames) Declaration public UniTask Load(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask Save(IslandsDictionaryNames) Declaration public UniTask Save(IslandsDictionaryNames curIsland) Parameters Type Name Description IslandsDictionaryNames curIsland Returns Type Description UniTask SavingPath(IslandsDictionaryNames) Declaration public string SavingPath(IslandsDictionaryNames island) Parameters Type Name Description IslandsDictionaryNames island Returns Type Description string SpawnHarbor() Declaration public void SpawnHarbor() Implements ISavableWithPath"
  },
  "api/World.Harbor.html": {
    "href": "api/World.Harbor.html",
    "title": "Namespace World.Harbor | Harvest Grove code documentation",
    "keywords": "Namespace World.Harbor Classes HarborBuilding HarborConstructionGameObject HarborData HarborSpawn"
  },
  "api/World.TileChunk.ChunkEditorWindow.html": {
    "href": "api/World.TileChunk.ChunkEditorWindow.html",
    "title": "Class ChunkEditorWindow | Harvest Grove code documentation",
    "keywords": "Class ChunkEditorWindow Inheritance object ChunkEditorWindow Namespace: World.TileChunk Assembly: cs.temp.dll.dll Syntax public class ChunkEditorWindow : EditorWindow Methods ShowWindow() Declaration public static void ShowWindow()"
  },
  "api/World.TileChunk.html": {
    "href": "api/World.TileChunk.html",
    "title": "Namespace World.TileChunk | Harvest Grove code documentation",
    "keywords": "Namespace World.TileChunk Classes ChunkEditorWindow"
  },
  "manual/basicinfo.html": {
    "href": "manual/basicinfo.html",
    "title": "Programmer guidelines | Harvest Grove code documentation",
    "keywords": "Programmer guidelines Work only on your own branch. No one should commit directly to the Development branch. Merging into Development: If you want to merge your WIP branch into Development, create a pull request and ping Alex on Discord. Do not merge without a review!"
  }
}