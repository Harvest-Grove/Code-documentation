### YamlMime:ManagedReference
items:
- uid: Managers._GameManager.Injections.GameServiceInjector
  commentId: T:Managers._GameManager.Injections.GameServiceInjector
  id: GameServiceInjector
  parent: Managers._GameManager.Injections
  children:
  - Managers._GameManager.Injections.GameServiceInjector.InjectInto(GameObject)
  - Managers._GameManager.Injections.GameServiceInjector.InjectInto(System.Object)
  langs:
  - csharp
  - vb
  name: GameServiceInjector
  nameWithType: GameServiceInjector
  fullName: Managers._GameManager.Injections.GameServiceInjector
  type: Class
  source:
    id: GameServiceInjector
    path: ''
    startLine: 41980
  assemblies:
  - cs.temp.dll
  namespace: Managers._GameManager.Injections
  syntax:
    content: public static class GameServiceInjector
    content.vb: Public Module GameServiceInjector
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Managers._GameManager.Injections.GameServiceInjector.InjectInto(GameObject)
  commentId: M:Managers._GameManager.Injections.GameServiceInjector.InjectInto(GameObject)
  id: InjectInto(GameObject)
  parent: Managers._GameManager.Injections.GameServiceInjector
  langs:
  - csharp
  - vb
  name: InjectInto(GameObject)
  nameWithType: GameServiceInjector.InjectInto(GameObject)
  fullName: Managers._GameManager.Injections.GameServiceInjector.InjectInto(GameObject)
  type: Method
  source:
    id: InjectInto
    path: ''
    startLine: 41982
  assemblies:
  - cs.temp.dll
  namespace: Managers._GameManager.Injections
  syntax:
    content: public static void InjectInto(GameObject gameObject)
    parameters:
    - id: gameObject
      type: Global.GameObject
    content.vb: Public Shared Sub InjectInto(gameObject As GameObject)
  overload: Managers._GameManager.Injections.GameServiceInjector.InjectInto*
- uid: Managers._GameManager.Injections.GameServiceInjector.InjectInto(System.Object)
  commentId: M:Managers._GameManager.Injections.GameServiceInjector.InjectInto(System.Object)
  id: InjectInto(System.Object)
  parent: Managers._GameManager.Injections.GameServiceInjector
  langs:
  - csharp
  - vb
  name: InjectInto(object)
  nameWithType: GameServiceInjector.InjectInto(object)
  fullName: Managers._GameManager.Injections.GameServiceInjector.InjectInto(object)
  type: Method
  source:
    id: InjectInto
    path: ''
    startLine: 41998
  assemblies:
  - cs.temp.dll
  namespace: Managers._GameManager.Injections
  syntax:
    content: public static void InjectInto(object instance)
    parameters:
    - id: instance
      type: System.Object
    content.vb: Public Shared Sub InjectInto(instance As Object)
  overload: Managers._GameManager.Injections.GameServiceInjector.InjectInto*
  nameWithType.vb: GameServiceInjector.InjectInto(Object)
  fullName.vb: Managers._GameManager.Injections.GameServiceInjector.InjectInto(Object)
  name.vb: InjectInto(Object)
references:
- uid: Managers._GameManager.Injections
  commentId: N:Managers._GameManager.Injections
  name: Managers._GameManager.Injections
  nameWithType: Managers._GameManager.Injections
  fullName: Managers._GameManager.Injections
  spec.csharp:
  - uid: Managers
    name: Managers
  - name: .
  - uid: Managers._GameManager
    name: _GameManager
  - name: .
  - uid: Managers._GameManager.Injections
    name: Injections
  spec.vb:
  - uid: Managers
    name: Managers
  - name: .
  - uid: Managers._GameManager
    name: _GameManager
  - name: .
  - uid: Managers._GameManager.Injections
    name: Injections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Managers._GameManager.Injections.GameServiceInjector.InjectInto*
  commentId: Overload:Managers._GameManager.Injections.GameServiceInjector.InjectInto
  name: InjectInto
  nameWithType: GameServiceInjector.InjectInto
  fullName: Managers._GameManager.Injections.GameServiceInjector.InjectInto
- uid: Global.GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
