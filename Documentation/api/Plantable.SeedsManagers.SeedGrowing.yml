### YamlMime:ManagedReference
items:
- uid: Plantable.SeedsManagers.SeedGrowing
  commentId: T:Plantable.SeedsManagers.SeedGrowing
  id: SeedGrowing
  parent: Plantable.SeedsManagers
  children:
  - Plantable.SeedsManagers.SeedGrowing.Construct(IManagerData,ITileMapService,IPlayerData)
  - Plantable.SeedsManagers.SeedGrowing.Initialize(IslandsDictionaryNames)
  - Plantable.SeedsManagers.SeedGrowing.Load(IslandsDictionaryNames)
  - Plantable.SeedsManagers.SeedGrowing.OnIsPlantWatered
  - Plantable.SeedsManagers.SeedGrowing.Priority
  - Plantable.SeedsManagers.SeedGrowing.Save(IslandsDictionaryNames)
  - Plantable.SeedsManagers.SeedGrowing.SavingPath(IslandsDictionaryNames)
  langs:
  - csharp
  - vb
  name: SeedGrowing
  nameWithType: SeedGrowing
  fullName: Plantable.SeedsManagers.SeedGrowing
  type: Class
  source:
    id: SeedGrowing
    path: ''
    startLine: 33934
  assemblies:
  - cs.temp.dll
  namespace: Plantable.SeedsManagers
  syntax:
    content: 'public class SeedGrowing : MonoBehaviour, ITaskSavable'
    content.vb: Public Class SeedGrowing Inherits MonoBehaviour Implements ITaskSavable
  inheritance:
  - System.Object
  implements:
  - Global.ITaskSavable
- uid: Plantable.SeedsManagers.SeedGrowing.Priority
  commentId: P:Plantable.SeedsManagers.SeedGrowing.Priority
  id: Priority
  parent: Plantable.SeedsManagers.SeedGrowing
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: SeedGrowing.Priority
  fullName: Plantable.SeedsManagers.SeedGrowing.Priority
  type: Property
  source:
    id: Priority
    path: ''
    startLine: 33936
  assemblies:
  - cs.temp.dll
  namespace: Plantable.SeedsManagers
  syntax:
    content: public int Priority { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Priority As Integer
  overload: Plantable.SeedsManagers.SeedGrowing.Priority*
- uid: Plantable.SeedsManagers.SeedGrowing.SavingPath(IslandsDictionaryNames)
  commentId: M:Plantable.SeedsManagers.SeedGrowing.SavingPath(IslandsDictionaryNames)
  id: SavingPath(IslandsDictionaryNames)
  parent: Plantable.SeedsManagers.SeedGrowing
  langs:
  - csharp
  - vb
  name: SavingPath(IslandsDictionaryNames)
  nameWithType: SeedGrowing.SavingPath(IslandsDictionaryNames)
  fullName: Plantable.SeedsManagers.SeedGrowing.SavingPath(IslandsDictionaryNames)
  type: Method
  source:
    id: SavingPath
    path: ''
    startLine: 33938
  assemblies:
  - cs.temp.dll
  namespace: Plantable.SeedsManagers
  syntax:
    content: public string SavingPath(IslandsDictionaryNames currentIsland)
    parameters:
    - id: currentIsland
      type: Global.IslandsDictionaryNames
    return:
      type: System.String
    content.vb: Public Function SavingPath(currentIsland As IslandsDictionaryNames) As String
  overload: Plantable.SeedsManagers.SeedGrowing.SavingPath*
- uid: Plantable.SeedsManagers.SeedGrowing.OnIsPlantWatered
  commentId: F:Plantable.SeedsManagers.SeedGrowing.OnIsPlantWatered
  id: OnIsPlantWatered
  parent: Plantable.SeedsManagers.SeedGrowing
  langs:
  - csharp
  - vb
  name: OnIsPlantWatered
  nameWithType: SeedGrowing.OnIsPlantWatered
  fullName: Plantable.SeedsManagers.SeedGrowing.OnIsPlantWatered
  type: Field
  source:
    id: OnIsPlantWatered
    path: ''
    startLine: 33943
  assemblies:
  - cs.temp.dll
  namespace: Plantable.SeedsManagers
  summary: "\nCheck if the plant is watered, constructionSO you don&apos;t water plant twice :]\n"
  example: []
  syntax:
    content: public static Func<Vector2Int, bool> OnIsPlantWatered
    return:
      type: Global.Func{Vector2Int,System.Boolean}
    content.vb: Public Shared OnIsPlantWatered As Func(Of Vector2Int, Boolean)
- uid: Plantable.SeedsManagers.SeedGrowing.Construct(IManagerData,ITileMapService,IPlayerData)
  commentId: M:Plantable.SeedsManagers.SeedGrowing.Construct(IManagerData,ITileMapService,IPlayerData)
  id: Construct(IManagerData,ITileMapService,IPlayerData)
  parent: Plantable.SeedsManagers.SeedGrowing
  langs:
  - csharp
  - vb
  name: Construct(IManagerData, ITileMapService, IPlayerData)
  nameWithType: SeedGrowing.Construct(IManagerData, ITileMapService, IPlayerData)
  fullName: Plantable.SeedsManagers.SeedGrowing.Construct(IManagerData, ITileMapService, IPlayerData)
  type: Method
  source:
    id: Construct
    path: ''
    startLine: 33965
  assemblies:
  - cs.temp.dll
  namespace: Plantable.SeedsManagers
  syntax:
    content: public void Construct(IManagerData managerData, ITileMapService tileMapService, IPlayerData playerData)
    parameters:
    - id: managerData
      type: Global.IManagerData
    - id: tileMapService
      type: Global.ITileMapService
    - id: playerData
      type: Global.IPlayerData
    content.vb: Public Sub Construct(managerData As IManagerData, tileMapService As ITileMapService, playerData As IPlayerData)
  overload: Plantable.SeedsManagers.SeedGrowing.Construct*
- uid: Plantable.SeedsManagers.SeedGrowing.Save(IslandsDictionaryNames)
  commentId: M:Plantable.SeedsManagers.SeedGrowing.Save(IslandsDictionaryNames)
  id: Save(IslandsDictionaryNames)
  parent: Plantable.SeedsManagers.SeedGrowing
  langs:
  - csharp
  - vb
  name: Save(IslandsDictionaryNames)
  nameWithType: SeedGrowing.Save(IslandsDictionaryNames)
  fullName: Plantable.SeedsManagers.SeedGrowing.Save(IslandsDictionaryNames)
  type: Method
  source:
    id: Save
    path: ''
    startLine: 34248
  assemblies:
  - cs.temp.dll
  namespace: Plantable.SeedsManagers
  syntax:
    content: public UniTask Save(IslandsDictionaryNames curIsland)
    parameters:
    - id: curIsland
      type: Global.IslandsDictionaryNames
    return:
      type: Global.UniTask
    content.vb: Public Function Save(curIsland As IslandsDictionaryNames) As UniTask
  overload: Plantable.SeedsManagers.SeedGrowing.Save*
- uid: Plantable.SeedsManagers.SeedGrowing.Load(IslandsDictionaryNames)
  commentId: M:Plantable.SeedsManagers.SeedGrowing.Load(IslandsDictionaryNames)
  id: Load(IslandsDictionaryNames)
  parent: Plantable.SeedsManagers.SeedGrowing
  langs:
  - csharp
  - vb
  name: Load(IslandsDictionaryNames)
  nameWithType: SeedGrowing.Load(IslandsDictionaryNames)
  fullName: Plantable.SeedsManagers.SeedGrowing.Load(IslandsDictionaryNames)
  type: Method
  source:
    id: Load
    path: ''
    startLine: 34257
  assemblies:
  - cs.temp.dll
  namespace: Plantable.SeedsManagers
  summary: "\nIt&apos;s called only when the world is being loaded, not when the player is travelling\n"
  example: []
  syntax:
    content: public UniTask Load(IslandsDictionaryNames curIsland)
    parameters:
    - id: curIsland
      type: Global.IslandsDictionaryNames
    return:
      type: Global.UniTask
    content.vb: Public Function Load(curIsland As IslandsDictionaryNames) As UniTask
  overload: Plantable.SeedsManagers.SeedGrowing.Load*
- uid: Plantable.SeedsManagers.SeedGrowing.Initialize(IslandsDictionaryNames)
  commentId: M:Plantable.SeedsManagers.SeedGrowing.Initialize(IslandsDictionaryNames)
  id: Initialize(IslandsDictionaryNames)
  parent: Plantable.SeedsManagers.SeedGrowing
  langs:
  - csharp
  - vb
  name: Initialize(IslandsDictionaryNames)
  nameWithType: SeedGrowing.Initialize(IslandsDictionaryNames)
  fullName: Plantable.SeedsManagers.SeedGrowing.Initialize(IslandsDictionaryNames)
  type: Method
  source:
    id: Initialize
    path: ''
    startLine: 34275
  assemblies:
  - cs.temp.dll
  namespace: Plantable.SeedsManagers
  syntax:
    content: public UniTask Initialize(IslandsDictionaryNames curIsland)
    parameters:
    - id: curIsland
      type: Global.IslandsDictionaryNames
    return:
      type: Global.UniTask
    content.vb: Public Function Initialize(curIsland As IslandsDictionaryNames) As UniTask
  overload: Plantable.SeedsManagers.SeedGrowing.Initialize*
references:
- uid: Plantable.SeedsManagers
  commentId: N:Plantable.SeedsManagers
  name: Plantable.SeedsManagers
  nameWithType: Plantable.SeedsManagers
  fullName: Plantable.SeedsManagers
  spec.csharp:
  - uid: Plantable
    name: Plantable
  - name: .
  - uid: Plantable.SeedsManagers
    name: SeedsManagers
  spec.vb:
  - uid: Plantable
    name: Plantable
  - name: .
  - uid: Plantable.SeedsManagers
    name: SeedsManagers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ITaskSavable
  isExternal: true
  name: ITaskSavable
  nameWithType: ITaskSavable
  fullName: ITaskSavable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Plantable.SeedsManagers.SeedGrowing.Priority*
  commentId: Overload:Plantable.SeedsManagers.SeedGrowing.Priority
  name: Priority
  nameWithType: SeedGrowing.Priority
  fullName: Plantable.SeedsManagers.SeedGrowing.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Plantable.SeedsManagers.SeedGrowing.SavingPath*
  commentId: Overload:Plantable.SeedsManagers.SeedGrowing.SavingPath
  name: SavingPath
  nameWithType: SeedGrowing.SavingPath
  fullName: Plantable.SeedsManagers.SeedGrowing.SavingPath
- uid: Global.IslandsDictionaryNames
  isExternal: true
  name: IslandsDictionaryNames
  nameWithType: IslandsDictionaryNames
  fullName: IslandsDictionaryNames
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.Func{Vector2Int,System.Boolean}
  commentId: '!:Global.Func{Vector2Int,System.Boolean}'
  definition: Global.Func`2
  name: Func<Vector2Int, bool>
  nameWithType: Func<Vector2Int, bool>
  fullName: Func<Vector2Int, bool>
  nameWithType.vb: Func(Of Vector2Int, Boolean)
  fullName.vb: Func(Of Vector2Int, Boolean)
  name.vb: Func(Of Vector2Int, Boolean)
  spec.csharp:
  - uid: Global.Func`2
    name: Func
    isExternal: true
  - name: <
  - uid: Global.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Global.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: )
- uid: Plantable.SeedsManagers.SeedGrowing.Construct*
  commentId: Overload:Plantable.SeedsManagers.SeedGrowing.Construct
  name: Construct
  nameWithType: SeedGrowing.Construct
  fullName: Plantable.SeedsManagers.SeedGrowing.Construct
- uid: Global.IManagerData
  isExternal: true
  name: IManagerData
  nameWithType: IManagerData
  fullName: IManagerData
- uid: Global.ITileMapService
  isExternal: true
  name: ITileMapService
  nameWithType: ITileMapService
  fullName: ITileMapService
- uid: Global.IPlayerData
  isExternal: true
  name: IPlayerData
  nameWithType: IPlayerData
  fullName: IPlayerData
- uid: Plantable.SeedsManagers.SeedGrowing.Save*
  commentId: Overload:Plantable.SeedsManagers.SeedGrowing.Save
  name: Save
  nameWithType: SeedGrowing.Save
  fullName: Plantable.SeedsManagers.SeedGrowing.Save
- uid: Global.UniTask
  isExternal: true
  name: UniTask
  nameWithType: UniTask
  fullName: UniTask
- uid: Plantable.SeedsManagers.SeedGrowing.Load*
  commentId: Overload:Plantable.SeedsManagers.SeedGrowing.Load
  name: Load
  nameWithType: SeedGrowing.Load
  fullName: Plantable.SeedsManagers.SeedGrowing.Load
- uid: Plantable.SeedsManagers.SeedGrowing.Initialize*
  commentId: Overload:Plantable.SeedsManagers.SeedGrowing.Initialize
  name: Initialize
  nameWithType: SeedGrowing.Initialize
  fullName: Plantable.SeedsManagers.SeedGrowing.Initialize
