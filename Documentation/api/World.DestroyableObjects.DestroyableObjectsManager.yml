### YamlMime:ManagedReference
items:
- uid: World.DestroyableObjects.DestroyableObjectsManager
  commentId: T:World.DestroyableObjects.DestroyableObjectsManager
  id: DestroyableObjectsManager
  parent: World.DestroyableObjects
  children:
  - World.DestroyableObjects.DestroyableObjectsManager.Construct(ITileMapService,IGameData,IManagerData)
  - World.DestroyableObjects.DestroyableObjectsManager.DamageObject(Vector2Int,System.UInt16,System.Single)
  - World.DestroyableObjects.DestroyableObjectsManager.Initialize(IslandsDictionaryNames)
  - World.DestroyableObjects.DestroyableObjectsManager.Instance
  - World.DestroyableObjects.DestroyableObjectsManager.Load(IslandsDictionaryNames)
  - World.DestroyableObjects.DestroyableObjectsManager.Priority
  - World.DestroyableObjects.DestroyableObjectsManager.Save(IslandsDictionaryNames)
  - World.DestroyableObjects.DestroyableObjectsManager.SavingPath
  langs:
  - csharp
  - vb
  name: DestroyableObjectsManager
  nameWithType: DestroyableObjectsManager
  fullName: World.DestroyableObjects.DestroyableObjectsManager
  type: Class
  source:
    id: DestroyableObjectsManager
    path: ''
    startLine: 7556
  assemblies:
  - cs.temp.dll
  namespace: World.DestroyableObjects
  syntax:
    content: 'public class DestroyableObjectsManager : MonoBehaviour, ITaskSavable'
    content.vb: Public Class DestroyableObjectsManager Inherits MonoBehaviour Implements ITaskSavable
  inheritance:
  - System.Object
  implements:
  - Global.ITaskSavable
- uid: World.DestroyableObjects.DestroyableObjectsManager.Instance
  commentId: F:World.DestroyableObjects.DestroyableObjectsManager.Instance
  id: Instance
  parent: World.DestroyableObjects.DestroyableObjectsManager
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: DestroyableObjectsManager.Instance
  fullName: World.DestroyableObjects.DestroyableObjectsManager.Instance
  type: Field
  source:
    id: Instance
    path: ''
    startLine: 7559
  assemblies:
  - cs.temp.dll
  namespace: World.DestroyableObjects
  syntax:
    content: public static DestroyableObjectsManager Instance
    return:
      type: World.DestroyableObjects.DestroyableObjectsManager
    content.vb: Public Shared Instance As DestroyableObjectsManager
- uid: World.DestroyableObjects.DestroyableObjectsManager.Priority
  commentId: P:World.DestroyableObjects.DestroyableObjectsManager.Priority
  id: Priority
  parent: World.DestroyableObjects.DestroyableObjectsManager
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: DestroyableObjectsManager.Priority
  fullName: World.DestroyableObjects.DestroyableObjectsManager.Priority
  type: Property
  source:
    id: Priority
    path: ''
    startLine: 7578
  assemblies:
  - cs.temp.dll
  namespace: World.DestroyableObjects
  syntax:
    content: public int Priority { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Priority As Integer
  overload: World.DestroyableObjects.DestroyableObjectsManager.Priority*
- uid: World.DestroyableObjects.DestroyableObjectsManager.SavingPath
  commentId: F:World.DestroyableObjects.DestroyableObjectsManager.SavingPath
  id: SavingPath
  parent: World.DestroyableObjects.DestroyableObjectsManager
  langs:
  - csharp
  - vb
  name: SavingPath
  nameWithType: DestroyableObjectsManager.SavingPath
  fullName: World.DestroyableObjects.DestroyableObjectsManager.SavingPath
  type: Field
  source:
    id: SavingPath
    path: ''
    startLine: 7581
  assemblies:
  - cs.temp.dll
  namespace: World.DestroyableObjects
  syntax:
    content: public string SavingPath
    return:
      type: System.String
    content.vb: Public SavingPath As String
- uid: World.DestroyableObjects.DestroyableObjectsManager.Construct(ITileMapService,IGameData,IManagerData)
  commentId: M:World.DestroyableObjects.DestroyableObjectsManager.Construct(ITileMapService,IGameData,IManagerData)
  id: Construct(ITileMapService,IGameData,IManagerData)
  parent: World.DestroyableObjects.DestroyableObjectsManager
  langs:
  - csharp
  - vb
  name: Construct(ITileMapService, IGameData, IManagerData)
  nameWithType: DestroyableObjectsManager.Construct(ITileMapService, IGameData, IManagerData)
  fullName: World.DestroyableObjects.DestroyableObjectsManager.Construct(ITileMapService, IGameData, IManagerData)
  type: Method
  source:
    id: Construct
    path: ''
    startLine: 7591
  assemblies:
  - cs.temp.dll
  namespace: World.DestroyableObjects
  syntax:
    content: public void Construct(ITileMapService tileMapService, IGameData gameData, IManagerData managerData)
    parameters:
    - id: tileMapService
      type: Global.ITileMapService
    - id: gameData
      type: Global.IGameData
    - id: managerData
      type: Global.IManagerData
    content.vb: Public Sub Construct(tileMapService As ITileMapService, gameData As IGameData, managerData As IManagerData)
  overload: World.DestroyableObjects.DestroyableObjectsManager.Construct*
- uid: World.DestroyableObjects.DestroyableObjectsManager.DamageObject(Vector2Int,System.UInt16,System.Single)
  commentId: M:World.DestroyableObjects.DestroyableObjectsManager.DamageObject(Vector2Int,System.UInt16,System.Single)
  id: DamageObject(Vector2Int,System.UInt16,System.Single)
  parent: World.DestroyableObjects.DestroyableObjectsManager
  langs:
  - csharp
  - vb
  name: DamageObject(Vector2Int, ushort, float)
  nameWithType: DestroyableObjectsManager.DamageObject(Vector2Int, ushort, float)
  fullName: World.DestroyableObjects.DestroyableObjectsManager.DamageObject(Vector2Int, ushort, float)
  type: Method
  source:
    id: DamageObject
    path: ''
    startLine: 7634
  assemblies:
  - cs.temp.dll
  namespace: World.DestroyableObjects
  summary: "\nDamage the object - then either destroy the object or update the stage \n"
  example: []
  syntax:
    content: public void DamageObject(Vector2Int position, ushort damage, float lockedTime)
    parameters:
    - id: position
      type: Global.Vector2Int
    - id: damage
      type: System.UInt16
    - id: lockedTime
      type: System.Single
    content.vb: Public Sub DamageObject(position As Vector2Int, damage As UShort, lockedTime As Single)
  overload: World.DestroyableObjects.DestroyableObjectsManager.DamageObject*
  nameWithType.vb: DestroyableObjectsManager.DamageObject(Vector2Int, UShort, Single)
  fullName.vb: World.DestroyableObjects.DestroyableObjectsManager.DamageObject(Vector2Int, UShort, Single)
  name.vb: DamageObject(Vector2Int, UShort, Single)
- uid: World.DestroyableObjects.DestroyableObjectsManager.Save(IslandsDictionaryNames)
  commentId: M:World.DestroyableObjects.DestroyableObjectsManager.Save(IslandsDictionaryNames)
  id: Save(IslandsDictionaryNames)
  parent: World.DestroyableObjects.DestroyableObjectsManager
  langs:
  - csharp
  - vb
  name: Save(IslandsDictionaryNames)
  nameWithType: DestroyableObjectsManager.Save(IslandsDictionaryNames)
  fullName: World.DestroyableObjects.DestroyableObjectsManager.Save(IslandsDictionaryNames)
  type: Method
  source:
    id: Save
    path: ''
    startLine: 7734
  assemblies:
  - cs.temp.dll
  namespace: World.DestroyableObjects
  syntax:
    content: public UniTask Save(IslandsDictionaryNames curIsland)
    parameters:
    - id: curIsland
      type: Global.IslandsDictionaryNames
    return:
      type: Global.UniTask
    content.vb: Public Function Save(curIsland As IslandsDictionaryNames) As UniTask
  overload: World.DestroyableObjects.DestroyableObjectsManager.Save*
- uid: World.DestroyableObjects.DestroyableObjectsManager.Load(IslandsDictionaryNames)
  commentId: M:World.DestroyableObjects.DestroyableObjectsManager.Load(IslandsDictionaryNames)
  id: Load(IslandsDictionaryNames)
  parent: World.DestroyableObjects.DestroyableObjectsManager
  langs:
  - csharp
  - vb
  name: Load(IslandsDictionaryNames)
  nameWithType: DestroyableObjectsManager.Load(IslandsDictionaryNames)
  fullName: World.DestroyableObjects.DestroyableObjectsManager.Load(IslandsDictionaryNames)
  type: Method
  source:
    id: Load
    path: ''
    startLine: 7741
  assemblies:
  - cs.temp.dll
  namespace: World.DestroyableObjects
  syntax:
    content: public UniTask Load(IslandsDictionaryNames curIsland)
    parameters:
    - id: curIsland
      type: Global.IslandsDictionaryNames
    return:
      type: Global.UniTask
    content.vb: Public Function Load(curIsland As IslandsDictionaryNames) As UniTask
  overload: World.DestroyableObjects.DestroyableObjectsManager.Load*
- uid: World.DestroyableObjects.DestroyableObjectsManager.Initialize(IslandsDictionaryNames)
  commentId: M:World.DestroyableObjects.DestroyableObjectsManager.Initialize(IslandsDictionaryNames)
  id: Initialize(IslandsDictionaryNames)
  parent: World.DestroyableObjects.DestroyableObjectsManager
  langs:
  - csharp
  - vb
  name: Initialize(IslandsDictionaryNames)
  nameWithType: DestroyableObjectsManager.Initialize(IslandsDictionaryNames)
  fullName: World.DestroyableObjects.DestroyableObjectsManager.Initialize(IslandsDictionaryNames)
  type: Method
  source:
    id: Initialize
    path: ''
    startLine: 7747
  assemblies:
  - cs.temp.dll
  namespace: World.DestroyableObjects
  syntax:
    content: public UniTask Initialize(IslandsDictionaryNames curIsland)
    parameters:
    - id: curIsland
      type: Global.IslandsDictionaryNames
    return:
      type: Global.UniTask
    content.vb: Public Function Initialize(curIsland As IslandsDictionaryNames) As UniTask
  overload: World.DestroyableObjects.DestroyableObjectsManager.Initialize*
references:
- uid: World.DestroyableObjects
  commentId: N:World.DestroyableObjects
  name: World.DestroyableObjects
  nameWithType: World.DestroyableObjects
  fullName: World.DestroyableObjects
  spec.csharp:
  - uid: World
    name: World
  - name: .
  - uid: World.DestroyableObjects
    name: DestroyableObjects
  spec.vb:
  - uid: World
    name: World
  - name: .
  - uid: World.DestroyableObjects
    name: DestroyableObjects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ITaskSavable
  isExternal: true
  name: ITaskSavable
  nameWithType: ITaskSavable
  fullName: ITaskSavable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: World.DestroyableObjects.DestroyableObjectsManager
  commentId: T:World.DestroyableObjects.DestroyableObjectsManager
  parent: World.DestroyableObjects
  name: DestroyableObjectsManager
  nameWithType: DestroyableObjectsManager
  fullName: World.DestroyableObjects.DestroyableObjectsManager
- uid: World.DestroyableObjects.DestroyableObjectsManager.Priority*
  commentId: Overload:World.DestroyableObjects.DestroyableObjectsManager.Priority
  name: Priority
  nameWithType: DestroyableObjectsManager.Priority
  fullName: World.DestroyableObjects.DestroyableObjectsManager.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: World.DestroyableObjects.DestroyableObjectsManager.Construct*
  commentId: Overload:World.DestroyableObjects.DestroyableObjectsManager.Construct
  name: Construct
  nameWithType: DestroyableObjectsManager.Construct
  fullName: World.DestroyableObjects.DestroyableObjectsManager.Construct
- uid: Global.ITileMapService
  isExternal: true
  name: ITileMapService
  nameWithType: ITileMapService
  fullName: ITileMapService
- uid: Global.IGameData
  isExternal: true
  name: IGameData
  nameWithType: IGameData
  fullName: IGameData
- uid: Global.IManagerData
  isExternal: true
  name: IManagerData
  nameWithType: IManagerData
  fullName: IManagerData
- uid: World.DestroyableObjects.DestroyableObjectsManager.DamageObject*
  commentId: Overload:World.DestroyableObjects.DestroyableObjectsManager.DamageObject
  name: DamageObject
  nameWithType: DestroyableObjectsManager.DamageObject
  fullName: World.DestroyableObjects.DestroyableObjectsManager.DamageObject
- uid: Global.Vector2Int
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: Vector2Int
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: World.DestroyableObjects.DestroyableObjectsManager.Save*
  commentId: Overload:World.DestroyableObjects.DestroyableObjectsManager.Save
  name: Save
  nameWithType: DestroyableObjectsManager.Save
  fullName: World.DestroyableObjects.DestroyableObjectsManager.Save
- uid: Global.IslandsDictionaryNames
  isExternal: true
  name: IslandsDictionaryNames
  nameWithType: IslandsDictionaryNames
  fullName: IslandsDictionaryNames
- uid: Global.UniTask
  isExternal: true
  name: UniTask
  nameWithType: UniTask
  fullName: UniTask
- uid: World.DestroyableObjects.DestroyableObjectsManager.Load*
  commentId: Overload:World.DestroyableObjects.DestroyableObjectsManager.Load
  name: Load
  nameWithType: DestroyableObjectsManager.Load
  fullName: World.DestroyableObjects.DestroyableObjectsManager.Load
- uid: World.DestroyableObjects.DestroyableObjectsManager.Initialize*
  commentId: Overload:World.DestroyableObjects.DestroyableObjectsManager.Initialize
  name: Initialize
  nameWithType: DestroyableObjectsManager.Initialize
  fullName: World.DestroyableObjects.DestroyableObjectsManager.Initialize
