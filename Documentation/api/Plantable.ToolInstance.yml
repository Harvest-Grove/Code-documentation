### YamlMime:ManagedReference
items:
- uid: Plantable.ToolInstance
  commentId: T:Plantable.ToolInstance
  id: ToolInstance
  parent: Plantable
  children:
  - Plantable.ToolInstance.#ctor(InventoryItemData,Plantable.ToolInstance)
  - Plantable.ToolInstance.#ctor(InventoryItemData,System.UInt16)
  - Plantable.ToolInstance.#ctor(InventoryItemData)
  - Plantable.ToolInstance.CustomName
  - Plantable.ToolInstance.CustomTextColor
  - Plantable.ToolInstance.Durability
  - Plantable.ToolInstance.WaterCapacity
  langs:
  - csharp
  - vb
  name: ToolInstance
  nameWithType: ToolInstance
  fullName: Plantable.ToolInstance
  type: Class
  source:
    id: ToolInstance
    path: ''
    startLine: 33215
  assemblies:
  - cs.temp.dll
  namespace: Plantable
  syntax:
    content: 'public class ToolInstance : ItemInstance'
    content.vb: Public Class ToolInstance Inherits ItemInstance
  inheritance:
  - System.Object
  - Plantable.ItemInstance
  inheritedMembers:
  - Plantable.ItemInstance.Data
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Plantable.ToolInstance.CustomName
  commentId: P:Plantable.ToolInstance.CustomName
  id: CustomName
  parent: Plantable.ToolInstance
  langs:
  - csharp
  - vb
  name: CustomName
  nameWithType: ToolInstance.CustomName
  fullName: Plantable.ToolInstance.CustomName
  type: Property
  source:
    id: CustomName
    path: ''
    startLine: 33223
  assemblies:
  - cs.temp.dll
  namespace: Plantable
  summary: "\nThe custom name of the tool set by the player.\n"
  example: []
  syntax:
    content: public string CustomName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CustomName As String
  overload: Plantable.ToolInstance.CustomName*
- uid: Plantable.ToolInstance.CustomTextColor
  commentId: P:Plantable.ToolInstance.CustomTextColor
  id: CustomTextColor
  parent: Plantable.ToolInstance
  langs:
  - csharp
  - vb
  name: CustomTextColor
  nameWithType: ToolInstance.CustomTextColor
  fullName: Plantable.ToolInstance.CustomTextColor
  type: Property
  source:
    id: CustomTextColor
    path: ''
    startLine: 33228
  assemblies:
  - cs.temp.dll
  namespace: Plantable
  summary: "\nThe custom text color of the tool set by the player.\n"
  example: []
  syntax:
    content: public Color CustomTextColor { get; set; }
    parameters: []
    return:
      type: Global.Color
    content.vb: Public Property CustomTextColor As Color
  overload: Plantable.ToolInstance.CustomTextColor*
- uid: Plantable.ToolInstance.WaterCapacity
  commentId: P:Plantable.ToolInstance.WaterCapacity
  id: WaterCapacity
  parent: Plantable.ToolInstance
  langs:
  - csharp
  - vb
  name: WaterCapacity
  nameWithType: ToolInstance.WaterCapacity
  fullName: Plantable.ToolInstance.WaterCapacity
  type: Property
  source:
    id: WaterCapacity
    path: ''
    startLine: 33231
  assemblies:
  - cs.temp.dll
  namespace: Plantable
  syntax:
    content: public float WaterCapacity { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property WaterCapacity As Single
  overload: Plantable.ToolInstance.WaterCapacity*
- uid: Plantable.ToolInstance.Durability
  commentId: P:Plantable.ToolInstance.Durability
  id: Durability
  parent: Plantable.ToolInstance
  langs:
  - csharp
  - vb
  name: Durability
  nameWithType: ToolInstance.Durability
  fullName: Plantable.ToolInstance.Durability
  type: Property
  source:
    id: Durability
    path: ''
    startLine: 33233
  assemblies:
  - cs.temp.dll
  namespace: Plantable
  syntax:
    content: public ushort Durability { get; set; }
    parameters: []
    return:
      type: System.UInt16
    content.vb: Public Property Durability As UShort
  overload: Plantable.ToolInstance.Durability*
- uid: Plantable.ToolInstance.#ctor(InventoryItemData)
  commentId: M:Plantable.ToolInstance.#ctor(InventoryItemData)
  id: '#ctor(InventoryItemData)'
  parent: Plantable.ToolInstance
  langs:
  - csharp
  - vb
  name: ToolInstance(InventoryItemData)
  nameWithType: ToolInstance.ToolInstance(InventoryItemData)
  fullName: Plantable.ToolInstance.ToolInstance(InventoryItemData)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 33259
  assemblies:
  - cs.temp.dll
  namespace: Plantable
  syntax:
    content: public ToolInstance(InventoryItemData data)
    parameters:
    - id: data
      type: Global.InventoryItemData
    content.vb: Public Sub New(data As InventoryItemData)
  overload: Plantable.ToolInstance.#ctor*
  nameWithType.vb: ToolInstance.New(InventoryItemData)
  fullName.vb: Plantable.ToolInstance.New(InventoryItemData)
  name.vb: New(InventoryItemData)
- uid: Plantable.ToolInstance.#ctor(InventoryItemData,System.UInt16)
  commentId: M:Plantable.ToolInstance.#ctor(InventoryItemData,System.UInt16)
  id: '#ctor(InventoryItemData,System.UInt16)'
  parent: Plantable.ToolInstance
  langs:
  - csharp
  - vb
  name: ToolInstance(InventoryItemData, ushort)
  nameWithType: ToolInstance.ToolInstance(InventoryItemData, ushort)
  fullName: Plantable.ToolInstance.ToolInstance(InventoryItemData, ushort)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 33261
  assemblies:
  - cs.temp.dll
  namespace: Plantable
  syntax:
    content: public ToolInstance(InventoryItemData data, ushort maxDurability)
    parameters:
    - id: data
      type: Global.InventoryItemData
    - id: maxDurability
      type: System.UInt16
    content.vb: Public Sub New(data As InventoryItemData, maxDurability As UShort)
  overload: Plantable.ToolInstance.#ctor*
  nameWithType.vb: ToolInstance.New(InventoryItemData, UShort)
  fullName.vb: Plantable.ToolInstance.New(InventoryItemData, UShort)
  name.vb: New(InventoryItemData, UShort)
- uid: Plantable.ToolInstance.#ctor(InventoryItemData,Plantable.ToolInstance)
  commentId: M:Plantable.ToolInstance.#ctor(InventoryItemData,Plantable.ToolInstance)
  id: '#ctor(InventoryItemData,Plantable.ToolInstance)'
  parent: Plantable.ToolInstance
  langs:
  - csharp
  - vb
  name: ToolInstance(InventoryItemData, ToolInstance)
  nameWithType: ToolInstance.ToolInstance(InventoryItemData, ToolInstance)
  fullName: Plantable.ToolInstance.ToolInstance(InventoryItemData, Plantable.ToolInstance)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 33262
  assemblies:
  - cs.temp.dll
  namespace: Plantable
  syntax:
    content: public ToolInstance(InventoryItemData data, ToolInstance oldInstance)
    parameters:
    - id: data
      type: Global.InventoryItemData
    - id: oldInstance
      type: Plantable.ToolInstance
    content.vb: Public Sub New(data As InventoryItemData, oldInstance As ToolInstance)
  overload: Plantable.ToolInstance.#ctor*
  nameWithType.vb: ToolInstance.New(InventoryItemData, ToolInstance)
  fullName.vb: Plantable.ToolInstance.New(InventoryItemData, Plantable.ToolInstance)
  name.vb: New(InventoryItemData, ToolInstance)
references:
- uid: Plantable
  commentId: N:Plantable
  name: Plantable
  nameWithType: Plantable
  fullName: Plantable
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Plantable.ItemInstance
  commentId: T:Plantable.ItemInstance
  parent: Plantable
  name: ItemInstance
  nameWithType: ItemInstance
  fullName: Plantable.ItemInstance
- uid: Plantable.ItemInstance.Data
  commentId: P:Plantable.ItemInstance.Data
  parent: Plantable.ItemInstance
  name: Data
  nameWithType: ItemInstance.Data
  fullName: Plantable.ItemInstance.Data
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Plantable.ToolInstance.CustomName*
  commentId: Overload:Plantable.ToolInstance.CustomName
  name: CustomName
  nameWithType: ToolInstance.CustomName
  fullName: Plantable.ToolInstance.CustomName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Plantable.ToolInstance.CustomTextColor*
  commentId: Overload:Plantable.ToolInstance.CustomTextColor
  name: CustomTextColor
  nameWithType: ToolInstance.CustomTextColor
  fullName: Plantable.ToolInstance.CustomTextColor
- uid: Global.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Color
- uid: Plantable.ToolInstance.WaterCapacity*
  commentId: Overload:Plantable.ToolInstance.WaterCapacity
  name: WaterCapacity
  nameWithType: ToolInstance.WaterCapacity
  fullName: Plantable.ToolInstance.WaterCapacity
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Plantable.ToolInstance.Durability*
  commentId: Overload:Plantable.ToolInstance.Durability
  name: Durability
  nameWithType: ToolInstance.Durability
  fullName: Plantable.ToolInstance.Durability
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: Plantable.ToolInstance.#ctor*
  commentId: Overload:Plantable.ToolInstance.#ctor
  name: ToolInstance
  nameWithType: ToolInstance.ToolInstance
  fullName: Plantable.ToolInstance.ToolInstance
  nameWithType.vb: ToolInstance.New
  fullName.vb: Plantable.ToolInstance.New
  name.vb: New
- uid: Global.InventoryItemData
  isExternal: true
  name: InventoryItemData
  nameWithType: InventoryItemData
  fullName: InventoryItemData
- uid: Plantable.ToolInstance
  commentId: T:Plantable.ToolInstance
  parent: Plantable
  name: ToolInstance
  nameWithType: ToolInstance
  fullName: Plantable.ToolInstance
