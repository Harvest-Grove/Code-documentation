### YamlMime:ManagedReference
items:
- uid: World.Harbor.HarborSpawn
  commentId: T:World.Harbor.HarborSpawn
  id: HarborSpawn
  parent: World.Harbor
  children:
  - World.Harbor.HarborSpawn.Construct(IGameData,ITileMapService)
  - World.Harbor.HarborSpawn.EdgeIndex
  - World.Harbor.HarborSpawn.Initialize(IslandsDictionaryNames)
  - World.Harbor.HarborSpawn.Load(IslandsDictionaryNames)
  - World.Harbor.HarborSpawn.OnHarborConstructionSpawned
  - World.Harbor.HarborSpawn.OnPlaceHarborStairs
  - World.Harbor.HarborSpawn.Priority
  - World.Harbor.HarborSpawn.Save(IslandsDictionaryNames)
  - World.Harbor.HarborSpawn.SavingPath(IslandsDictionaryNames)
  - World.Harbor.HarborSpawn.SpawnHarbor
  langs:
  - csharp
  - vb
  name: HarborSpawn
  nameWithType: HarborSpawn
  fullName: World.Harbor.HarborSpawn
  type: Class
  source:
    id: HarborSpawn
    path: ''
    startLine: 8204
  assemblies:
  - cs.temp.dll
  namespace: World.Harbor
  syntax:
    content: 'public class HarborSpawn : MonoBehaviour, ISavableWithPath'
    content.vb: Public Class HarborSpawn Inherits MonoBehaviour Implements ISavableWithPath
  inheritance:
  - System.Object
  implements:
  - Global.ISavableWithPath
- uid: World.Harbor.HarborSpawn.OnHarborConstructionSpawned
  commentId: F:World.Harbor.HarborSpawn.OnHarborConstructionSpawned
  id: OnHarborConstructionSpawned
  parent: World.Harbor.HarborSpawn
  langs:
  - csharp
  - vb
  name: OnHarborConstructionSpawned
  nameWithType: HarborSpawn.OnHarborConstructionSpawned
  fullName: World.Harbor.HarborSpawn.OnHarborConstructionSpawned
  type: Field
  source:
    id: OnHarborConstructionSpawned
    path: ''
    startLine: 8206
  assemblies:
  - cs.temp.dll
  namespace: World.Harbor
  syntax:
    content: public static Action<ConstructionSO> OnHarborConstructionSpawned
    return:
      type: Global.Action{ConstructionSO}
    content.vb: Public Shared OnHarborConstructionSpawned As Action(Of ConstructionSO)
- uid: World.Harbor.HarborSpawn.OnPlaceHarborStairs
  commentId: F:World.Harbor.HarborSpawn.OnPlaceHarborStairs
  id: OnPlaceHarborStairs
  parent: World.Harbor.HarborSpawn
  langs:
  - csharp
  - vb
  name: OnPlaceHarborStairs
  nameWithType: HarborSpawn.OnPlaceHarborStairs
  fullName: World.Harbor.HarborSpawn.OnPlaceHarborStairs
  type: Field
  source:
    id: OnPlaceHarborStairs
    path: ''
    startLine: 8207
  assemblies:
  - cs.temp.dll
  namespace: World.Harbor
  syntax:
    content: public static Action<Vector3Int[]> OnPlaceHarborStairs
    return:
      type: Global.Action{Vector3Int[]}
    content.vb: Public Shared OnPlaceHarborStairs As Action(Of Vector3Int())
- uid: World.Harbor.HarborSpawn.EdgeIndex
  commentId: F:World.Harbor.HarborSpawn.EdgeIndex
  id: EdgeIndex
  parent: World.Harbor.HarborSpawn
  langs:
  - csharp
  - vb
  name: EdgeIndex
  nameWithType: HarborSpawn.EdgeIndex
  fullName: World.Harbor.HarborSpawn.EdgeIndex
  type: Field
  source:
    id: EdgeIndex
    path: ''
    startLine: 8209
  assemblies:
  - cs.temp.dll
  namespace: World.Harbor
  syntax:
    content: public static byte EdgeIndex
    return:
      type: System.Byte
    content.vb: Public Shared EdgeIndex As Byte
- uid: World.Harbor.HarborSpawn.Priority
  commentId: P:World.Harbor.HarborSpawn.Priority
  id: Priority
  parent: World.Harbor.HarborSpawn
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: HarborSpawn.Priority
  fullName: World.Harbor.HarborSpawn.Priority
  type: Property
  source:
    id: Priority
    path: ''
    startLine: 8210
  assemblies:
  - cs.temp.dll
  namespace: World.Harbor
  syntax:
    content: public int Priority { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Priority As Integer
  overload: World.Harbor.HarborSpawn.Priority*
- uid: World.Harbor.HarborSpawn.SavingPath(IslandsDictionaryNames)
  commentId: M:World.Harbor.HarborSpawn.SavingPath(IslandsDictionaryNames)
  id: SavingPath(IslandsDictionaryNames)
  parent: World.Harbor.HarborSpawn
  langs:
  - csharp
  - vb
  name: SavingPath(IslandsDictionaryNames)
  nameWithType: HarborSpawn.SavingPath(IslandsDictionaryNames)
  fullName: World.Harbor.HarborSpawn.SavingPath(IslandsDictionaryNames)
  type: Method
  source:
    id: SavingPath
    path: ''
    startLine: 8212
  assemblies:
  - cs.temp.dll
  namespace: World.Harbor
  syntax:
    content: public string SavingPath(IslandsDictionaryNames island)
    parameters:
    - id: island
      type: Global.IslandsDictionaryNames
    return:
      type: System.String
    content.vb: Public Function SavingPath(island As IslandsDictionaryNames) As String
  overload: World.Harbor.HarborSpawn.SavingPath*
- uid: World.Harbor.HarborSpawn.Construct(IGameData,ITileMapService)
  commentId: M:World.Harbor.HarborSpawn.Construct(IGameData,ITileMapService)
  id: Construct(IGameData,ITileMapService)
  parent: World.Harbor.HarborSpawn
  langs:
  - csharp
  - vb
  name: Construct(IGameData, ITileMapService)
  nameWithType: HarborSpawn.Construct(IGameData, ITileMapService)
  fullName: World.Harbor.HarborSpawn.Construct(IGameData, ITileMapService)
  type: Method
  source:
    id: Construct
    path: ''
    startLine: 8238
  assemblies:
  - cs.temp.dll
  namespace: World.Harbor
  syntax:
    content: public void Construct(IGameData gameData, ITileMapService tileMapService)
    parameters:
    - id: gameData
      type: Global.IGameData
    - id: tileMapService
      type: Global.ITileMapService
    content.vb: Public Sub Construct(gameData As IGameData, tileMapService As ITileMapService)
  overload: World.Harbor.HarborSpawn.Construct*
- uid: World.Harbor.HarborSpawn.SpawnHarbor
  commentId: M:World.Harbor.HarborSpawn.SpawnHarbor
  id: SpawnHarbor
  parent: World.Harbor.HarborSpawn
  langs:
  - csharp
  - vb
  name: SpawnHarbor()
  nameWithType: HarborSpawn.SpawnHarbor()
  fullName: World.Harbor.HarborSpawn.SpawnHarbor()
  type: Method
  source:
    id: SpawnHarbor
    path: ''
    startLine: 8261
  assemblies:
  - cs.temp.dll
  namespace: World.Harbor
  syntax:
    content: public void SpawnHarbor()
    content.vb: Public Sub SpawnHarbor()
  overload: World.Harbor.HarborSpawn.SpawnHarbor*
- uid: World.Harbor.HarborSpawn.Save(IslandsDictionaryNames)
  commentId: M:World.Harbor.HarborSpawn.Save(IslandsDictionaryNames)
  id: Save(IslandsDictionaryNames)
  parent: World.Harbor.HarborSpawn
  langs:
  - csharp
  - vb
  name: Save(IslandsDictionaryNames)
  nameWithType: HarborSpawn.Save(IslandsDictionaryNames)
  fullName: World.Harbor.HarborSpawn.Save(IslandsDictionaryNames)
  type: Method
  source:
    id: Save
    path: ''
    startLine: 8504
  assemblies:
  - cs.temp.dll
  namespace: World.Harbor
  syntax:
    content: public UniTask Save(IslandsDictionaryNames curIsland)
    parameters:
    - id: curIsland
      type: Global.IslandsDictionaryNames
    return:
      type: Global.UniTask
    content.vb: Public Function Save(curIsland As IslandsDictionaryNames) As UniTask
  overload: World.Harbor.HarborSpawn.Save*
- uid: World.Harbor.HarborSpawn.Load(IslandsDictionaryNames)
  commentId: M:World.Harbor.HarborSpawn.Load(IslandsDictionaryNames)
  id: Load(IslandsDictionaryNames)
  parent: World.Harbor.HarborSpawn
  langs:
  - csharp
  - vb
  name: Load(IslandsDictionaryNames)
  nameWithType: HarborSpawn.Load(IslandsDictionaryNames)
  fullName: World.Harbor.HarborSpawn.Load(IslandsDictionaryNames)
  type: Method
  source:
    id: Load
    path: ''
    startLine: 8509
  assemblies:
  - cs.temp.dll
  namespace: World.Harbor
  syntax:
    content: public UniTask Load(IslandsDictionaryNames curIsland)
    parameters:
    - id: curIsland
      type: Global.IslandsDictionaryNames
    return:
      type: Global.UniTask
    content.vb: Public Function Load(curIsland As IslandsDictionaryNames) As UniTask
  overload: World.Harbor.HarborSpawn.Load*
- uid: World.Harbor.HarborSpawn.Initialize(IslandsDictionaryNames)
  commentId: M:World.Harbor.HarborSpawn.Initialize(IslandsDictionaryNames)
  id: Initialize(IslandsDictionaryNames)
  parent: World.Harbor.HarborSpawn
  langs:
  - csharp
  - vb
  name: Initialize(IslandsDictionaryNames)
  nameWithType: HarborSpawn.Initialize(IslandsDictionaryNames)
  fullName: World.Harbor.HarborSpawn.Initialize(IslandsDictionaryNames)
  type: Method
  source:
    id: Initialize
    path: ''
    startLine: 8516
  assemblies:
  - cs.temp.dll
  namespace: World.Harbor
  syntax:
    content: public UniTask Initialize(IslandsDictionaryNames curIsland)
    parameters:
    - id: curIsland
      type: Global.IslandsDictionaryNames
    return:
      type: Global.UniTask
    content.vb: Public Function Initialize(curIsland As IslandsDictionaryNames) As UniTask
  overload: World.Harbor.HarborSpawn.Initialize*
references:
- uid: World.Harbor
  commentId: N:World.Harbor
  name: World.Harbor
  nameWithType: World.Harbor
  fullName: World.Harbor
  spec.csharp:
  - uid: World
    name: World
  - name: .
  - uid: World.Harbor
    name: Harbor
  spec.vb:
  - uid: World
    name: World
  - name: .
  - uid: World.Harbor
    name: Harbor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ISavableWithPath
  isExternal: true
  name: ISavableWithPath
  nameWithType: ISavableWithPath
  fullName: ISavableWithPath
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Action{ConstructionSO}
  commentId: '!:Global.Action{ConstructionSO}'
  definition: Global.Action`1
  name: Action<ConstructionSO>
  nameWithType: Action<ConstructionSO>
  fullName: Action<ConstructionSO>
  nameWithType.vb: Action(Of ConstructionSO)
  fullName.vb: Action(Of ConstructionSO)
  name.vb: Action(Of ConstructionSO)
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: Global.ConstructionSO
    name: ConstructionSO
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.ConstructionSO
    name: ConstructionSO
    isExternal: true
  - name: )
- uid: Global.Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Global.Action{Vector3Int[]}
  commentId: '!:Global.Action{Vector3Int[]}'
  definition: Global.Action`1
  name: Action<Vector3Int[]>
  nameWithType: Action<Vector3Int[]>
  fullName: Action<Vector3Int[]>
  nameWithType.vb: Action(Of Vector3Int())
  fullName.vb: Action(Of Vector3Int())
  name.vb: Action(Of Vector3Int())
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: Global.Vector3Int
    name: Vector3Int
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Vector3Int
    name: Vector3Int
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: World.Harbor.HarborSpawn.Priority*
  commentId: Overload:World.Harbor.HarborSpawn.Priority
  name: Priority
  nameWithType: HarborSpawn.Priority
  fullName: World.Harbor.HarborSpawn.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: World.Harbor.HarborSpawn.SavingPath*
  commentId: Overload:World.Harbor.HarborSpawn.SavingPath
  name: SavingPath
  nameWithType: HarborSpawn.SavingPath
  fullName: World.Harbor.HarborSpawn.SavingPath
- uid: Global.IslandsDictionaryNames
  isExternal: true
  name: IslandsDictionaryNames
  nameWithType: IslandsDictionaryNames
  fullName: IslandsDictionaryNames
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: World.Harbor.HarborSpawn.Construct*
  commentId: Overload:World.Harbor.HarborSpawn.Construct
  name: Construct
  nameWithType: HarborSpawn.Construct
  fullName: World.Harbor.HarborSpawn.Construct
- uid: Global.IGameData
  isExternal: true
  name: IGameData
  nameWithType: IGameData
  fullName: IGameData
- uid: Global.ITileMapService
  isExternal: true
  name: ITileMapService
  nameWithType: ITileMapService
  fullName: ITileMapService
- uid: World.Harbor.HarborSpawn.SpawnHarbor*
  commentId: Overload:World.Harbor.HarborSpawn.SpawnHarbor
  name: SpawnHarbor
  nameWithType: HarborSpawn.SpawnHarbor
  fullName: World.Harbor.HarborSpawn.SpawnHarbor
- uid: World.Harbor.HarborSpawn.Save*
  commentId: Overload:World.Harbor.HarborSpawn.Save
  name: Save
  nameWithType: HarborSpawn.Save
  fullName: World.Harbor.HarborSpawn.Save
- uid: Global.UniTask
  isExternal: true
  name: UniTask
  nameWithType: UniTask
  fullName: UniTask
- uid: World.Harbor.HarborSpawn.Load*
  commentId: Overload:World.Harbor.HarborSpawn.Load
  name: Load
  nameWithType: HarborSpawn.Load
  fullName: World.Harbor.HarborSpawn.Load
- uid: World.Harbor.HarborSpawn.Initialize*
  commentId: Overload:World.Harbor.HarborSpawn.Initialize
  name: Initialize
  nameWithType: HarborSpawn.Initialize
  fullName: World.Harbor.HarborSpawn.Initialize
