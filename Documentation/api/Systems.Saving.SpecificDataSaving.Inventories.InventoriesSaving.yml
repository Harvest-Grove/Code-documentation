### YamlMime:ManagedReference
items:
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving
  commentId: T:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving
  id: InventoriesSaving
  parent: Systems.Saving.SpecificDataSaving.Inventories
  children:
  - Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertSlotsToStruct(List{InventorySlot})
  - Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertStructToSlots(List{Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct},ItemDatabaseSO)
  - Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathBackpackFile
  - Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathHotbarFile
  - Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadInventories(ItemDatabaseSO,IInventoryService)
  - Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadSlots(ItemDatabaseSO,System.String)
  - Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveDeathInventories(System.Boolean,HotBarInventory,BackpackInventory)
  - Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveInventories(IInventoryService)
  langs:
  - csharp
  - vb
  name: InventoriesSaving
  nameWithType: InventoriesSaving
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving
  type: Class
  source:
    id: InventoriesSaving
    path: ''
    startLine: 25046
  assemblies:
  - cs.temp.dll
  namespace: Systems.Saving.SpecificDataSaving.Inventories
  syntax:
    content: public static class InventoriesSaving
    content.vb: Public Module InventoriesSaving
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathHotbarFile
  commentId: P:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathHotbarFile
  id: DeathHotbarFile
  parent: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving
  langs:
  - csharp
  - vb
  name: DeathHotbarFile
  nameWithType: InventoriesSaving.DeathHotbarFile
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathHotbarFile
  type: Property
  source:
    id: DeathHotbarFile
    path: ''
    startLine: 25051
  assemblies:
  - cs.temp.dll
  namespace: Systems.Saving.SpecificDataSaving.Inventories
  syntax:
    content: public static string DeathHotbarFile { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property DeathHotbarFile As String
  overload: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathHotbarFile*
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathBackpackFile
  commentId: P:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathBackpackFile
  id: DeathBackpackFile
  parent: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving
  langs:
  - csharp
  - vb
  name: DeathBackpackFile
  nameWithType: InventoriesSaving.DeathBackpackFile
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathBackpackFile
  type: Property
  source:
    id: DeathBackpackFile
    path: ''
    startLine: 25052
  assemblies:
  - cs.temp.dll
  namespace: Systems.Saving.SpecificDataSaving.Inventories
  syntax:
    content: public static string DeathBackpackFile { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property DeathBackpackFile As String
  overload: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathBackpackFile*
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveInventories(IInventoryService)
  commentId: M:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveInventories(IInventoryService)
  id: SaveInventories(IInventoryService)
  parent: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving
  langs:
  - csharp
  - vb
  name: SaveInventories(IInventoryService)
  nameWithType: InventoriesSaving.SaveInventories(IInventoryService)
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveInventories(IInventoryService)
  type: Method
  source:
    id: SaveInventories
    path: ''
    startLine: 25055
  assemblies:
  - cs.temp.dll
  namespace: Systems.Saving.SpecificDataSaving.Inventories
  syntax:
    content: public static UniTask SaveInventories(IInventoryService inventoryService)
    parameters:
    - id: inventoryService
      type: Global.IInventoryService
    return:
      type: Global.UniTask
    content.vb: Public Shared Function SaveInventories(inventoryService As IInventoryService) As UniTask
  overload: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveInventories*
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveDeathInventories(System.Boolean,HotBarInventory,BackpackInventory)
  commentId: M:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveDeathInventories(System.Boolean,HotBarInventory,BackpackInventory)
  id: SaveDeathInventories(System.Boolean,HotBarInventory,BackpackInventory)
  parent: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving
  langs:
  - csharp
  - vb
  name: SaveDeathInventories(bool, HotBarInventory, BackpackInventory)
  nameWithType: InventoriesSaving.SaveDeathInventories(bool, HotBarInventory, BackpackInventory)
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveDeathInventories(bool, HotBarInventory, BackpackInventory)
  type: Method
  source:
    id: SaveDeathInventories
    path: ''
    startLine: 25065
  assemblies:
  - cs.temp.dll
  namespace: Systems.Saving.SpecificDataSaving.Inventories
  summary: "\nSaves both inventories when the player dies. If the player died again and he didn&apos;t retrieve the inventories, the will be deleted\n"
  example: []
  syntax:
    content: public static UniTask SaveDeathInventories(bool isTreeSpawned, HotBarInventory hotBarInventory, BackpackInventory backpackInventory)
    parameters:
    - id: isTreeSpawned
      type: System.Boolean
    - id: hotBarInventory
      type: Global.HotBarInventory
    - id: backpackInventory
      type: Global.BackpackInventory
    return:
      type: Global.UniTask
    content.vb: Public Shared Function SaveDeathInventories(isTreeSpawned As Boolean, hotBarInventory As HotBarInventory, backpackInventory As BackpackInventory) As UniTask
  overload: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveDeathInventories*
  nameWithType.vb: InventoriesSaving.SaveDeathInventories(Boolean, HotBarInventory, BackpackInventory)
  fullName.vb: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveDeathInventories(Boolean, HotBarInventory, BackpackInventory)
  name.vb: SaveDeathInventories(Boolean, HotBarInventory, BackpackInventory)
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadInventories(ItemDatabaseSO,IInventoryService)
  commentId: M:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadInventories(ItemDatabaseSO,IInventoryService)
  id: LoadInventories(ItemDatabaseSO,IInventoryService)
  parent: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving
  langs:
  - csharp
  - vb
  name: LoadInventories(ItemDatabaseSO, IInventoryService)
  nameWithType: InventoriesSaving.LoadInventories(ItemDatabaseSO, IInventoryService)
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadInventories(ItemDatabaseSO, IInventoryService)
  type: Method
  source:
    id: LoadInventories
    path: ''
    startLine: 25078
  assemblies:
  - cs.temp.dll
  namespace: Systems.Saving.SpecificDataSaving.Inventories
  syntax:
    content: public static UniTask LoadInventories(ItemDatabaseSO itemDatabase, IInventoryService inventoryService)
    parameters:
    - id: itemDatabase
      type: Global.ItemDatabaseSO
    - id: inventoryService
      type: Global.IInventoryService
    return:
      type: Global.UniTask
    content.vb: Public Shared Function LoadInventories(itemDatabase As ItemDatabaseSO, inventoryService As IInventoryService) As UniTask
  overload: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadInventories*
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadSlots(ItemDatabaseSO,System.String)
  commentId: M:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadSlots(ItemDatabaseSO,System.String)
  id: LoadSlots(ItemDatabaseSO,System.String)
  parent: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving
  langs:
  - csharp
  - vb
  name: LoadSlots(ItemDatabaseSO, string)
  nameWithType: InventoriesSaving.LoadSlots(ItemDatabaseSO, string)
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadSlots(ItemDatabaseSO, string)
  type: Method
  source:
    id: LoadSlots
    path: ''
    startLine: 25095
  assemblies:
  - cs.temp.dll
  namespace: Systems.Saving.SpecificDataSaving.Inventories
  syntax:
    content: public static UniTask<List<InventorySlot>> LoadSlots(ItemDatabaseSO itemDatabase, string filePath)
    parameters:
    - id: itemDatabase
      type: Global.ItemDatabaseSO
    - id: filePath
      type: System.String
    return:
      type: Global.UniTask{List{InventorySlot}}
    content.vb: Public Shared Function LoadSlots(itemDatabase As ItemDatabaseSO, filePath As String) As UniTask(Of List(Of InventorySlot))
  overload: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadSlots*
  nameWithType.vb: InventoriesSaving.LoadSlots(ItemDatabaseSO, String)
  fullName.vb: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadSlots(ItemDatabaseSO, String)
  name.vb: LoadSlots(ItemDatabaseSO, String)
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertStructToSlots(List{Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct},ItemDatabaseSO)
  commentId: M:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertStructToSlots(List{Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct},ItemDatabaseSO)
  id: ConvertStructToSlots(List{Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct},ItemDatabaseSO)
  parent: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving
  langs:
  - csharp
  - vb
  name: ConvertStructToSlots(List<InventorySavingStruct>, ItemDatabaseSO)
  nameWithType: InventoriesSaving.ConvertStructToSlots(List<InventorySavingStruct>, ItemDatabaseSO)
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertStructToSlots(List<Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct>, ItemDatabaseSO)
  type: Method
  source:
    id: ConvertStructToSlots
    path: ''
    startLine: 25103
  assemblies:
  - cs.temp.dll
  namespace: Systems.Saving.SpecificDataSaving.Inventories
  syntax:
    content: public static List<InventorySlot> ConvertStructToSlots(List<InventorySavingStruct> loadedData, ItemDatabaseSO itemDatabase)
    parameters:
    - id: loadedData
      type: Global.List{Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct}
    - id: itemDatabase
      type: Global.ItemDatabaseSO
    return:
      type: Global.List{InventorySlot}
    content.vb: Public Shared Function ConvertStructToSlots(loadedData As List(Of InventorySavingStruct), itemDatabase As ItemDatabaseSO) As List(Of InventorySlot)
  overload: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertStructToSlots*
  nameWithType.vb: InventoriesSaving.ConvertStructToSlots(List(Of InventorySavingStruct), ItemDatabaseSO)
  fullName.vb: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertStructToSlots(List(Of Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct), ItemDatabaseSO)
  name.vb: ConvertStructToSlots(List(Of InventorySavingStruct), ItemDatabaseSO)
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertSlotsToStruct(List{InventorySlot})
  commentId: M:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertSlotsToStruct(List{InventorySlot})
  id: ConvertSlotsToStruct(List{InventorySlot})
  parent: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving
  langs:
  - csharp
  - vb
  name: ConvertSlotsToStruct(List<InventorySlot>)
  nameWithType: InventoriesSaving.ConvertSlotsToStruct(List<InventorySlot>)
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertSlotsToStruct(List<InventorySlot>)
  type: Method
  source:
    id: ConvertSlotsToStruct
    path: ''
    startLine: 25139
  assemblies:
  - cs.temp.dll
  namespace: Systems.Saving.SpecificDataSaving.Inventories
  syntax:
    content: public static List<InventorySavingStruct> ConvertSlotsToStruct(List<InventorySlot> slots)
    parameters:
    - id: slots
      type: Global.List{InventorySlot}
    return:
      type: Global.List{Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct}
    content.vb: Public Shared Function ConvertSlotsToStruct(slots As List(Of InventorySlot)) As List(Of InventorySavingStruct)
  overload: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertSlotsToStruct*
  nameWithType.vb: InventoriesSaving.ConvertSlotsToStruct(List(Of InventorySlot))
  fullName.vb: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertSlotsToStruct(List(Of InventorySlot))
  name.vb: ConvertSlotsToStruct(List(Of InventorySlot))
references:
- uid: Systems.Saving.SpecificDataSaving.Inventories
  commentId: N:Systems.Saving.SpecificDataSaving.Inventories
  name: Systems.Saving.SpecificDataSaving.Inventories
  nameWithType: Systems.Saving.SpecificDataSaving.Inventories
  fullName: Systems.Saving.SpecificDataSaving.Inventories
  spec.csharp:
  - uid: Systems
    name: Systems
  - name: .
  - uid: Systems.Saving
    name: Saving
  - name: .
  - uid: Systems.Saving.SpecificDataSaving
    name: SpecificDataSaving
  - name: .
  - uid: Systems.Saving.SpecificDataSaving.Inventories
    name: Inventories
  spec.vb:
  - uid: Systems
    name: Systems
  - name: .
  - uid: Systems.Saving
    name: Saving
  - name: .
  - uid: Systems.Saving.SpecificDataSaving
    name: SpecificDataSaving
  - name: .
  - uid: Systems.Saving.SpecificDataSaving.Inventories
    name: Inventories
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathHotbarFile*
  commentId: Overload:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathHotbarFile
  name: DeathHotbarFile
  nameWithType: InventoriesSaving.DeathHotbarFile
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathHotbarFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathBackpackFile*
  commentId: Overload:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathBackpackFile
  name: DeathBackpackFile
  nameWithType: InventoriesSaving.DeathBackpackFile
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.DeathBackpackFile
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveInventories*
  commentId: Overload:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveInventories
  name: SaveInventories
  nameWithType: InventoriesSaving.SaveInventories
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveInventories
- uid: Global.IInventoryService
  isExternal: true
  name: IInventoryService
  nameWithType: IInventoryService
  fullName: IInventoryService
- uid: Global.UniTask
  isExternal: true
  name: UniTask
  nameWithType: UniTask
  fullName: UniTask
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveDeathInventories*
  commentId: Overload:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveDeathInventories
  name: SaveDeathInventories
  nameWithType: InventoriesSaving.SaveDeathInventories
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.SaveDeathInventories
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.HotBarInventory
  isExternal: true
  name: HotBarInventory
  nameWithType: HotBarInventory
  fullName: HotBarInventory
- uid: Global.BackpackInventory
  isExternal: true
  name: BackpackInventory
  nameWithType: BackpackInventory
  fullName: BackpackInventory
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadInventories*
  commentId: Overload:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadInventories
  name: LoadInventories
  nameWithType: InventoriesSaving.LoadInventories
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadInventories
- uid: Global.ItemDatabaseSO
  isExternal: true
  name: ItemDatabaseSO
  nameWithType: ItemDatabaseSO
  fullName: ItemDatabaseSO
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadSlots*
  commentId: Overload:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadSlots
  name: LoadSlots
  nameWithType: InventoriesSaving.LoadSlots
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.LoadSlots
- uid: Global.UniTask{List{InventorySlot}}
  commentId: '!:Global.UniTask{List{InventorySlot}}'
  definition: Global.UniTask`1
  name: UniTask<List<InventorySlot>>
  nameWithType: UniTask<List<InventorySlot>>
  fullName: UniTask<List<InventorySlot>>
  nameWithType.vb: UniTask(Of List(Of InventorySlot))
  fullName.vb: UniTask(Of List(Of InventorySlot))
  name.vb: UniTask(Of List(Of InventorySlot))
  spec.csharp:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.InventorySlot
    name: InventorySlot
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.InventorySlot
    name: InventorySlot
    isExternal: true
  - name: )
  - name: )
- uid: Global.UniTask`1
  isExternal: true
  name: UniTask<>
  nameWithType: UniTask<>
  fullName: UniTask<>
  nameWithType.vb: UniTask(Of )
  fullName.vb: UniTask(Of )
  name.vb: UniTask(Of )
  spec.csharp:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertStructToSlots*
  commentId: Overload:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertStructToSlots
  name: ConvertStructToSlots
  nameWithType: InventoriesSaving.ConvertStructToSlots
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertStructToSlots
- uid: Global.List{Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct}
  commentId: '!:Global.List{Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct}'
  definition: Global.List`1
  name: List<InventorySavingStruct>
  nameWithType: List<InventorySavingStruct>
  fullName: List<Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct>
  nameWithType.vb: List(Of InventorySavingStruct)
  fullName.vb: List(Of Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct)
  name.vb: List(Of InventorySavingStruct)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct
    name: InventorySavingStruct
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Systems.Saving.SpecificDataSaving.Inventories.InventorySavingStruct
    name: InventorySavingStruct
  - name: )
- uid: Global.List{InventorySlot}
  commentId: '!:Global.List{InventorySlot}'
  definition: Global.List`1
  name: List<InventorySlot>
  nameWithType: List<InventorySlot>
  fullName: List<InventorySlot>
  nameWithType.vb: List(Of InventorySlot)
  fullName.vb: List(Of InventorySlot)
  name.vb: List(Of InventorySlot)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.InventorySlot
    name: InventorySlot
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.InventorySlot
    name: InventorySlot
    isExternal: true
  - name: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertSlotsToStruct*
  commentId: Overload:Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertSlotsToStruct
  name: ConvertSlotsToStruct
  nameWithType: InventoriesSaving.ConvertSlotsToStruct
  fullName: Systems.Saving.SpecificDataSaving.Inventories.InventoriesSaving.ConvertSlotsToStruct
