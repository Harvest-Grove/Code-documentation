### YamlMime:ManagedReference
items:
- uid: Animals.UI.GiveItemsUI
  commentId: T:Animals.UI.GiveItemsUI
  id: GiveItemsUI
  parent: Animals.UI
  children:
  - Animals.UI.GiveItemsUI.CollectAllBtn
  - Animals.UI.GiveItemsUI.CollectEverything(Vector2,AnimalHousingManager,Animals.UI.AnimalHousingUI)
  - Animals.UI.GiveItemsUI.ItemsBtns
  - Animals.UI.GiveItemsUI.ItemsImages
  - Animals.UI.GiveItemsUI.ItemsTexts
  - Animals.UI.GiveItemsUI.OnBeeItemDecreased
  - Animals.UI.GiveItemsUI.ResetGameobjects
  - Animals.UI.GiveItemsUI.ShowItems(Vector2,Animals.UI.AnimalHousingUI,AnimalHousingManager)
  langs:
  - csharp
  - vb
  name: GiveItemsUI
  nameWithType: GiveItemsUI
  fullName: Animals.UI.GiveItemsUI
  type: Class
  source:
    id: GiveItemsUI
    path: ''
    startLine: 28639
  assemblies:
  - cs.temp.dll
  namespace: Animals.UI
  syntax:
    content: public class GiveItemsUI
    content.vb: Public Class GiveItemsUI
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Animals.UI.GiveItemsUI.OnBeeItemDecreased
  commentId: F:Animals.UI.GiveItemsUI.OnBeeItemDecreased
  id: OnBeeItemDecreased
  parent: Animals.UI.GiveItemsUI
  langs:
  - csharp
  - vb
  name: OnBeeItemDecreased
  nameWithType: GiveItemsUI.OnBeeItemDecreased
  fullName: Animals.UI.GiveItemsUI.OnBeeItemDecreased
  type: Field
  source:
    id: OnBeeItemDecreased
    path: ''
    startLine: 28646
  assemblies:
  - cs.temp.dll
  namespace: Animals.UI
  summary: >
    The item - which is collected - is bee related 

    Vector2 => beehive position

    bool => collected everything
  example: []
  syntax:
    content: public static Action<Vector2, bool> OnBeeItemDecreased
    return:
      type: Global.Action{Vector2,System.Boolean}
    content.vb: Public Shared OnBeeItemDecreased As Action(Of Vector2, Boolean)
- uid: Animals.UI.GiveItemsUI.CollectAllBtn
  commentId: F:Animals.UI.GiveItemsUI.CollectAllBtn
  id: CollectAllBtn
  parent: Animals.UI.GiveItemsUI
  langs:
  - csharp
  - vb
  name: CollectAllBtn
  nameWithType: GiveItemsUI.CollectAllBtn
  fullName: Animals.UI.GiveItemsUI.CollectAllBtn
  type: Field
  source:
    id: CollectAllBtn
    path: ''
    startLine: 28648
  assemblies:
  - cs.temp.dll
  namespace: Animals.UI
  syntax:
    content: public Button CollectAllBtn
    return:
      type: Global.Button
    content.vb: Public CollectAllBtn As Button
- uid: Animals.UI.GiveItemsUI.ItemsImages
  commentId: F:Animals.UI.GiveItemsUI.ItemsImages
  id: ItemsImages
  parent: Animals.UI.GiveItemsUI
  langs:
  - csharp
  - vb
  name: ItemsImages
  nameWithType: GiveItemsUI.ItemsImages
  fullName: Animals.UI.GiveItemsUI.ItemsImages
  type: Field
  source:
    id: ItemsImages
    path: ''
    startLine: 28649
  assemblies:
  - cs.temp.dll
  namespace: Animals.UI
  syntax:
    content: public Image[] ItemsImages
    return:
      type: Global.Image[]
    content.vb: Public ItemsImages As Image()
- uid: Animals.UI.GiveItemsUI.ItemsTexts
  commentId: F:Animals.UI.GiveItemsUI.ItemsTexts
  id: ItemsTexts
  parent: Animals.UI.GiveItemsUI
  langs:
  - csharp
  - vb
  name: ItemsTexts
  nameWithType: GiveItemsUI.ItemsTexts
  fullName: Animals.UI.GiveItemsUI.ItemsTexts
  type: Field
  source:
    id: ItemsTexts
    path: ''
    startLine: 28650
  assemblies:
  - cs.temp.dll
  namespace: Animals.UI
  syntax:
    content: public TextMeshProUGUI[] ItemsTexts
    return:
      type: Global.TextMeshProUGUI[]
    content.vb: Public ItemsTexts As TextMeshProUGUI()
- uid: Animals.UI.GiveItemsUI.ItemsBtns
  commentId: F:Animals.UI.GiveItemsUI.ItemsBtns
  id: ItemsBtns
  parent: Animals.UI.GiveItemsUI
  langs:
  - csharp
  - vb
  name: ItemsBtns
  nameWithType: GiveItemsUI.ItemsBtns
  fullName: Animals.UI.GiveItemsUI.ItemsBtns
  type: Field
  source:
    id: ItemsBtns
    path: ''
    startLine: 28651
  assemblies:
  - cs.temp.dll
  namespace: Animals.UI
  syntax:
    content: public Button[] ItemsBtns
    return:
      type: Global.Button[]
    content.vb: Public ItemsBtns As Button()
- uid: Animals.UI.GiveItemsUI.CollectEverything(Vector2,AnimalHousingManager,Animals.UI.AnimalHousingUI)
  commentId: M:Animals.UI.GiveItemsUI.CollectEverything(Vector2,AnimalHousingManager,Animals.UI.AnimalHousingUI)
  id: CollectEverything(Vector2,AnimalHousingManager,Animals.UI.AnimalHousingUI)
  parent: Animals.UI.GiveItemsUI
  langs:
  - csharp
  - vb
  name: CollectEverything(Vector2, AnimalHousingManager, AnimalHousingUI)
  nameWithType: GiveItemsUI.CollectEverything(Vector2, AnimalHousingManager, AnimalHousingUI)
  fullName: Animals.UI.GiveItemsUI.CollectEverything(Vector2, AnimalHousingManager, Animals.UI.AnimalHousingUI)
  type: Method
  source:
    id: CollectEverything
    path: ''
    startLine: 28662
  assemblies:
  - cs.temp.dll
  namespace: Animals.UI
  summary: "\nCollect every item available in this housing\nIf there&apos;s not enough space in the inventory, add as many items as possible and the rest\nleave untouched\n"
  example: []
  syntax:
    content: public void CollectEverything(Vector2 housingPosition, AnimalHousingManager animalHousingManager, AnimalHousingUI animalHousingUI)
    parameters:
    - id: housingPosition
      type: Global.Vector2
      description: Position of the animal housing
    - id: animalHousingManager
      type: Global.AnimalHousingManager
    - id: animalHousingUI
      type: Animals.UI.AnimalHousingUI
    content.vb: Public Sub CollectEverything(housingPosition As Vector2, animalHousingManager As AnimalHousingManager, animalHousingUI As AnimalHousingUI)
  overload: Animals.UI.GiveItemsUI.CollectEverything*
- uid: Animals.UI.GiveItemsUI.ShowItems(Vector2,Animals.UI.AnimalHousingUI,AnimalHousingManager)
  commentId: M:Animals.UI.GiveItemsUI.ShowItems(Vector2,Animals.UI.AnimalHousingUI,AnimalHousingManager)
  id: ShowItems(Vector2,Animals.UI.AnimalHousingUI,AnimalHousingManager)
  parent: Animals.UI.GiveItemsUI
  langs:
  - csharp
  - vb
  name: ShowItems(Vector2, AnimalHousingUI, AnimalHousingManager)
  nameWithType: GiveItemsUI.ShowItems(Vector2, AnimalHousingUI, AnimalHousingManager)
  fullName: Animals.UI.GiveItemsUI.ShowItems(Vector2, Animals.UI.AnimalHousingUI, AnimalHousingManager)
  type: Method
  source:
    id: ShowItems
    path: ''
    startLine: 28707
  assemblies:
  - cs.temp.dll
  namespace: Animals.UI
  summary: "\nShow the given items with sprite and amount\n"
  example: []
  syntax:
    content: public void ShowItems(Vector2 housingPosition, AnimalHousingUI animalHousingUI, AnimalHousingManager animalHousingManager)
    parameters:
    - id: housingPosition
      type: Global.Vector2
      description: Animal house position
    - id: animalHousingUI
      type: Animals.UI.AnimalHousingUI
    - id: animalHousingManager
      type: Global.AnimalHousingManager
    content.vb: Public Sub ShowItems(housingPosition As Vector2, animalHousingUI As AnimalHousingUI, animalHousingManager As AnimalHousingManager)
  overload: Animals.UI.GiveItemsUI.ShowItems*
- uid: Animals.UI.GiveItemsUI.ResetGameobjects
  commentId: M:Animals.UI.GiveItemsUI.ResetGameobjects
  id: ResetGameobjects
  parent: Animals.UI.GiveItemsUI
  langs:
  - csharp
  - vb
  name: ResetGameobjects()
  nameWithType: GiveItemsUI.ResetGameobjects()
  fullName: Animals.UI.GiveItemsUI.ResetGameobjects()
  type: Method
  source:
    id: ResetGameobjects
    path: ''
    startLine: 28744
  assemblies:
  - cs.temp.dll
  namespace: Animals.UI
  summary: Reset the items, so the correct items would be shown when the menu is opened
  example: []
  syntax:
    content: public void ResetGameobjects()
    content.vb: Public Sub ResetGameobjects()
  overload: Animals.UI.GiveItemsUI.ResetGameobjects*
references:
- uid: Animals.UI
  commentId: N:Animals.UI
  name: Animals.UI
  nameWithType: Animals.UI
  fullName: Animals.UI
  spec.csharp:
  - uid: Animals
    name: Animals
  - name: .
  - uid: Animals.UI
    name: UI
  spec.vb:
  - uid: Animals
    name: Animals
  - name: .
  - uid: Animals.UI
    name: UI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Action{Vector2,System.Boolean}
  commentId: '!:Global.Action{Vector2,System.Boolean}'
  definition: Global.Action`2
  name: Action<Vector2, bool>
  nameWithType: Action<Vector2, bool>
  fullName: Action<Vector2, bool>
  nameWithType.vb: Action(Of Vector2, Boolean)
  fullName.vb: Action(Of Vector2, Boolean)
  name.vb: Action(Of Vector2, Boolean)
  spec.csharp:
  - uid: Global.Action`2
    name: Action
    isExternal: true
  - name: <
  - uid: Global.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.Action`2
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.Action`2
  isExternal: true
  name: Action<, >
  nameWithType: Action<, >
  fullName: Action<, >
  nameWithType.vb: Action(Of , )
  fullName.vb: Action(Of , )
  name.vb: Action(Of , )
  spec.csharp:
  - uid: Global.Action`2
    name: Action
    isExternal: true
  - name: <
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.Action`2
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: )
- uid: Global.Button
  isExternal: true
  name: Button
  nameWithType: Button
  fullName: Button
- uid: Global.Image[]
  isExternal: true
  name: Image[]
  nameWithType: Image[]
  fullName: Image[]
  nameWithType.vb: Image()
  fullName.vb: Image()
  name.vb: Image()
  spec.csharp:
  - uid: Global.Image
    name: Image
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.Image
    name: Image
    isExternal: true
  - name: (
  - name: )
- uid: Global.TextMeshProUGUI[]
  isExternal: true
  name: TextMeshProUGUI[]
  nameWithType: TextMeshProUGUI[]
  fullName: TextMeshProUGUI[]
  nameWithType.vb: TextMeshProUGUI()
  fullName.vb: TextMeshProUGUI()
  name.vb: TextMeshProUGUI()
  spec.csharp:
  - uid: Global.TextMeshProUGUI
    name: TextMeshProUGUI
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.TextMeshProUGUI
    name: TextMeshProUGUI
    isExternal: true
  - name: (
  - name: )
- uid: Global.Button[]
  isExternal: true
  name: Button[]
  nameWithType: Button[]
  fullName: Button[]
  nameWithType.vb: Button()
  fullName.vb: Button()
  name.vb: Button()
  spec.csharp:
  - uid: Global.Button
    name: Button
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.Button
    name: Button
    isExternal: true
  - name: (
  - name: )
- uid: Animals.UI.GiveItemsUI.CollectEverything*
  commentId: Overload:Animals.UI.GiveItemsUI.CollectEverything
  name: CollectEverything
  nameWithType: GiveItemsUI.CollectEverything
  fullName: Animals.UI.GiveItemsUI.CollectEverything
- uid: Global.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: Global.AnimalHousingManager
  isExternal: true
  name: AnimalHousingManager
  nameWithType: AnimalHousingManager
  fullName: AnimalHousingManager
- uid: Animals.UI.AnimalHousingUI
  commentId: T:Animals.UI.AnimalHousingUI
  parent: Animals.UI
  name: AnimalHousingUI
  nameWithType: AnimalHousingUI
  fullName: Animals.UI.AnimalHousingUI
- uid: Animals.UI.GiveItemsUI.ShowItems*
  commentId: Overload:Animals.UI.GiveItemsUI.ShowItems
  name: ShowItems
  nameWithType: GiveItemsUI.ShowItems
  fullName: Animals.UI.GiveItemsUI.ShowItems
- uid: Animals.UI.GiveItemsUI.ResetGameobjects*
  commentId: Overload:Animals.UI.GiveItemsUI.ResetGameobjects
  name: ResetGameobjects
  nameWithType: GiveItemsUI.ResetGameobjects
  fullName: Animals.UI.GiveItemsUI.ResetGameobjects
