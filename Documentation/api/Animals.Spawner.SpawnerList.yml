### YamlMime:ManagedReference
items:
- uid: Animals.Spawner.SpawnerList
  commentId: T:Animals.Spawner.SpawnerList
  id: SpawnerList
  parent: Animals.Spawner
  children:
  - Animals.Spawner.SpawnerList.AddToList(System.Int32,Animals.Spawner.AnimalGameobjectInfo)
  - Animals.Spawner.SpawnerList.AddToList(System.Int32,MainAnimalsEnum,Vector2,AnimalStagesEnum,System.String)
  - Animals.Spawner.SpawnerList.AnimalGameobjects
  - Animals.Spawner.SpawnerList.AvailableAnimals
  - Animals.Spawner.SpawnerList.RemoveAnimal(System.Int32,ObjectPooling)
  - Animals.Spawner.SpawnerList.RenameAnimal(System.Int32,System.String)
  langs:
  - csharp
  - vb
  name: SpawnerList
  nameWithType: SpawnerList
  fullName: Animals.Spawner.SpawnerList
  type: Class
  source:
    id: SpawnerList
    path: ''
    startLine: 29326
  assemblies:
  - cs.temp.dll
  namespace: Animals.Spawner
  syntax:
    content: public class SpawnerList
    content.vb: Public Class SpawnerList
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Animals.Spawner.SpawnerList.AvailableAnimals
  commentId: F:Animals.Spawner.SpawnerList.AvailableAnimals
  id: AvailableAnimals
  parent: Animals.Spawner.SpawnerList
  langs:
  - csharp
  - vb
  name: AvailableAnimals
  nameWithType: SpawnerList.AvailableAnimals
  fullName: Animals.Spawner.SpawnerList.AvailableAnimals
  type: Field
  source:
    id: AvailableAnimals
    path: ''
    startLine: 29331
  assemblies:
  - cs.temp.dll
  namespace: Animals.Spawner
  summary: "\nAnimal, which can be spawned\n"
  example: []
  syntax:
    content: public Dictionary<int, AnimalGameobjectInfo> AvailableAnimals
    return:
      type: Global.Dictionary{System.Int32,Animals.Spawner.AnimalGameobjectInfo}
    content.vb: Public AvailableAnimals As Dictionary(Of Integer, AnimalGameobjectInfo)
- uid: Animals.Spawner.SpawnerList.AnimalGameobjects
  commentId: F:Animals.Spawner.SpawnerList.AnimalGameobjects
  id: AnimalGameobjects
  parent: Animals.Spawner.SpawnerList
  langs:
  - csharp
  - vb
  name: AnimalGameobjects
  nameWithType: SpawnerList.AnimalGameobjects
  fullName: Animals.Spawner.SpawnerList.AnimalGameobjects
  type: Field
  source:
    id: AnimalGameobjects
    path: ''
    startLine: 29336
  assemblies:
  - cs.temp.dll
  namespace: Animals.Spawner
  summary: "\nThis dictionary is used for faster access of IDs and gameobjects {i.e. animals}\n"
  example: []
  syntax:
    content: public Dictionary<int, FarmAnimal_AI> AnimalGameobjects
    return:
      type: Global.Dictionary{System.Int32,FarmAnimal_AI}
    content.vb: Public AnimalGameobjects As Dictionary(Of Integer, FarmAnimal_AI)
- uid: Animals.Spawner.SpawnerList.AddToList(System.Int32,MainAnimalsEnum,Vector2,AnimalStagesEnum,System.String)
  commentId: M:Animals.Spawner.SpawnerList.AddToList(System.Int32,MainAnimalsEnum,Vector2,AnimalStagesEnum,System.String)
  id: AddToList(System.Int32,MainAnimalsEnum,Vector2,AnimalStagesEnum,System.String)
  parent: Animals.Spawner.SpawnerList
  langs:
  - csharp
  - vb
  name: AddToList(int, MainAnimalsEnum, Vector2, AnimalStagesEnum, string)
  nameWithType: SpawnerList.AddToList(int, MainAnimalsEnum, Vector2, AnimalStagesEnum, string)
  fullName: Animals.Spawner.SpawnerList.AddToList(int, MainAnimalsEnum, Vector2, AnimalStagesEnum, string)
  type: Method
  source:
    id: AddToList
    path: ''
    startLine: 29341
  assemblies:
  - cs.temp.dll
  namespace: Animals.Spawner
  summary: "\nAdds a new animal to the list of spawnable animals\n"
  example: []
  syntax:
    content: public void AddToList(int id, MainAnimalsEnum animalType, Vector2 homePos, AnimalStagesEnum stage, string name)
    parameters:
    - id: id
      type: System.Int32
    - id: animalType
      type: Global.MainAnimalsEnum
    - id: homePos
      type: Global.Vector2
    - id: stage
      type: Global.AnimalStagesEnum
    - id: name
      type: System.String
    content.vb: Public Sub AddToList(id As Integer, animalType As MainAnimalsEnum, homePos As Vector2, stage As AnimalStagesEnum, name As String)
  overload: Animals.Spawner.SpawnerList.AddToList*
  nameWithType.vb: SpawnerList.AddToList(Integer, MainAnimalsEnum, Vector2, AnimalStagesEnum, String)
  fullName.vb: Animals.Spawner.SpawnerList.AddToList(Integer, MainAnimalsEnum, Vector2, AnimalStagesEnum, String)
  name.vb: AddToList(Integer, MainAnimalsEnum, Vector2, AnimalStagesEnum, String)
- uid: Animals.Spawner.SpawnerList.AddToList(System.Int32,Animals.Spawner.AnimalGameobjectInfo)
  commentId: M:Animals.Spawner.SpawnerList.AddToList(System.Int32,Animals.Spawner.AnimalGameobjectInfo)
  id: AddToList(System.Int32,Animals.Spawner.AnimalGameobjectInfo)
  parent: Animals.Spawner.SpawnerList
  langs:
  - csharp
  - vb
  name: AddToList(int, AnimalGameobjectInfo)
  nameWithType: SpawnerList.AddToList(int, AnimalGameobjectInfo)
  fullName: Animals.Spawner.SpawnerList.AddToList(int, Animals.Spawner.AnimalGameobjectInfo)
  type: Method
  source:
    id: AddToList
    path: ''
    startLine: 29346
  assemblies:
  - cs.temp.dll
  namespace: Animals.Spawner
  syntax:
    content: public void AddToList(int id, AnimalGameobjectInfo info)
    parameters:
    - id: id
      type: System.Int32
    - id: info
      type: Animals.Spawner.AnimalGameobjectInfo
    content.vb: Public Sub AddToList(id As Integer, info As AnimalGameobjectInfo)
  overload: Animals.Spawner.SpawnerList.AddToList*
  nameWithType.vb: SpawnerList.AddToList(Integer, AnimalGameobjectInfo)
  fullName.vb: Animals.Spawner.SpawnerList.AddToList(Integer, Animals.Spawner.AnimalGameobjectInfo)
  name.vb: AddToList(Integer, AnimalGameobjectInfo)
- uid: Animals.Spawner.SpawnerList.RemoveAnimal(System.Int32,ObjectPooling)
  commentId: M:Animals.Spawner.SpawnerList.RemoveAnimal(System.Int32,ObjectPooling)
  id: RemoveAnimal(System.Int32,ObjectPooling)
  parent: Animals.Spawner.SpawnerList
  langs:
  - csharp
  - vb
  name: RemoveAnimal(int, ObjectPooling)
  nameWithType: SpawnerList.RemoveAnimal(int, ObjectPooling)
  fullName: Animals.Spawner.SpawnerList.RemoveAnimal(int, ObjectPooling)
  type: Method
  source:
    id: RemoveAnimal
    path: ''
    startLine: 29352
  assemblies:
  - cs.temp.dll
  namespace: Animals.Spawner
  summary: 'Remove the animal from the spawner list '
  example: []
  syntax:
    content: public void RemoveAnimal(int id, ObjectPooling objectPooling)
    parameters:
    - id: id
      type: System.Int32
    - id: objectPooling
      type: Global.ObjectPooling
    content.vb: Public Sub RemoveAnimal(id As Integer, objectPooling As ObjectPooling)
  overload: Animals.Spawner.SpawnerList.RemoveAnimal*
  nameWithType.vb: SpawnerList.RemoveAnimal(Integer, ObjectPooling)
  fullName.vb: Animals.Spawner.SpawnerList.RemoveAnimal(Integer, ObjectPooling)
  name.vb: RemoveAnimal(Integer, ObjectPooling)
- uid: Animals.Spawner.SpawnerList.RenameAnimal(System.Int32,System.String)
  commentId: M:Animals.Spawner.SpawnerList.RenameAnimal(System.Int32,System.String)
  id: RenameAnimal(System.Int32,System.String)
  parent: Animals.Spawner.SpawnerList
  langs:
  - csharp
  - vb
  name: RenameAnimal(int, string)
  nameWithType: SpawnerList.RenameAnimal(int, string)
  fullName: Animals.Spawner.SpawnerList.RenameAnimal(int, string)
  type: Method
  source:
    id: RenameAnimal
    path: ''
    startLine: 29364
  assemblies:
  - cs.temp.dll
  namespace: Animals.Spawner
  syntax:
    content: public void RenameAnimal(int id, string name)
    parameters:
    - id: id
      type: System.Int32
    - id: name
      type: System.String
    content.vb: Public Sub RenameAnimal(id As Integer, name As String)
  overload: Animals.Spawner.SpawnerList.RenameAnimal*
  nameWithType.vb: SpawnerList.RenameAnimal(Integer, String)
  fullName.vb: Animals.Spawner.SpawnerList.RenameAnimal(Integer, String)
  name.vb: RenameAnimal(Integer, String)
references:
- uid: Animals.Spawner
  commentId: N:Animals.Spawner
  name: Animals.Spawner
  nameWithType: Animals.Spawner
  fullName: Animals.Spawner
  spec.csharp:
  - uid: Animals
    name: Animals
  - name: .
  - uid: Animals.Spawner
    name: Spawner
  spec.vb:
  - uid: Animals
    name: Animals
  - name: .
  - uid: Animals.Spawner
    name: Spawner
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Dictionary{System.Int32,Animals.Spawner.AnimalGameobjectInfo}
  commentId: '!:Global.Dictionary{System.Int32,Animals.Spawner.AnimalGameobjectInfo}'
  definition: Global.Dictionary`2
  name: Dictionary<int, AnimalGameobjectInfo>
  nameWithType: Dictionary<int, AnimalGameobjectInfo>
  fullName: Dictionary<int, Animals.Spawner.AnimalGameobjectInfo>
  nameWithType.vb: Dictionary(Of Integer, AnimalGameobjectInfo)
  fullName.vb: Dictionary(Of Integer, Animals.Spawner.AnimalGameobjectInfo)
  name.vb: Dictionary(Of Integer, AnimalGameobjectInfo)
  spec.csharp:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: Animals.Spawner.AnimalGameobjectInfo
    name: AnimalGameobjectInfo
  - name: '>'
  spec.vb:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: Animals.Spawner.AnimalGameobjectInfo
    name: AnimalGameobjectInfo
  - name: )
- uid: Global.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: )
- uid: Global.Dictionary{System.Int32,FarmAnimal_AI}
  commentId: '!:Global.Dictionary{System.Int32,FarmAnimal_AI}'
  definition: Global.Dictionary`2
  name: Dictionary<int, FarmAnimal_AI>
  nameWithType: Dictionary<int, FarmAnimal_AI>
  fullName: Dictionary<int, FarmAnimal_AI>
  nameWithType.vb: Dictionary(Of Integer, FarmAnimal_AI)
  fullName.vb: Dictionary(Of Integer, FarmAnimal_AI)
  name.vb: Dictionary(Of Integer, FarmAnimal_AI)
  spec.csharp:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.FarmAnimal_AI
    name: FarmAnimal_AI
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.FarmAnimal_AI
    name: FarmAnimal_AI
    isExternal: true
  - name: )
- uid: Animals.Spawner.SpawnerList.AddToList*
  commentId: Overload:Animals.Spawner.SpawnerList.AddToList
  name: AddToList
  nameWithType: SpawnerList.AddToList
  fullName: Animals.Spawner.SpawnerList.AddToList
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.MainAnimalsEnum
  isExternal: true
  name: MainAnimalsEnum
  nameWithType: MainAnimalsEnum
  fullName: MainAnimalsEnum
- uid: Global.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: Global.AnimalStagesEnum
  isExternal: true
  name: AnimalStagesEnum
  nameWithType: AnimalStagesEnum
  fullName: AnimalStagesEnum
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Animals.Spawner.AnimalGameobjectInfo
  commentId: T:Animals.Spawner.AnimalGameobjectInfo
  parent: Animals.Spawner
  name: AnimalGameobjectInfo
  nameWithType: AnimalGameobjectInfo
  fullName: Animals.Spawner.AnimalGameobjectInfo
- uid: Animals.Spawner.SpawnerList.RemoveAnimal*
  commentId: Overload:Animals.Spawner.SpawnerList.RemoveAnimal
  name: RemoveAnimal
  nameWithType: SpawnerList.RemoveAnimal
  fullName: Animals.Spawner.SpawnerList.RemoveAnimal
- uid: Global.ObjectPooling
  isExternal: true
  name: ObjectPooling
  nameWithType: ObjectPooling
  fullName: ObjectPooling
- uid: Animals.Spawner.SpawnerList.RenameAnimal*
  commentId: Overload:Animals.Spawner.SpawnerList.RenameAnimal
  name: RenameAnimal
  nameWithType: SpawnerList.RenameAnimal
  fullName: Animals.Spawner.SpawnerList.RenameAnimal
