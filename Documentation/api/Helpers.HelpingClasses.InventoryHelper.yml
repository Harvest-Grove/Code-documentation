### YamlMime:ManagedReference
items:
- uid: Helpers.HelpingClasses.InventoryHelper
  commentId: T:Helpers.HelpingClasses.InventoryHelper
  id: InventoryHelper
  parent: Helpers.HelpingClasses
  children:
  - Helpers.HelpingClasses.InventoryHelper.AddItemToTheInventory(InventoryItemData,System.Int32)
  - Helpers.HelpingClasses.InventoryHelper.CombineSlotsWithoutDuplicates(List{InventorySlot},List{InventorySlot})
  - Helpers.HelpingClasses.InventoryHelper.CurrentSlot
  - Helpers.HelpingClasses.InventoryHelper.CurrentSlotInvData
  - Helpers.HelpingClasses.InventoryHelper.DecreaseItemAtPositionHotbar
  - Helpers.HelpingClasses.InventoryHelper.DecreaseItemDurability
  - Helpers.HelpingClasses.InventoryHelper.IsCurrentSlotLocked
  - Helpers.HelpingClasses.InventoryHelper.ItemAmountInInventory(InventoryItemData,BackpackInventory,HotBarInventory)
  - Helpers.HelpingClasses.InventoryHelper.LockSlot
  langs:
  - csharp
  - vb
  name: InventoryHelper
  nameWithType: InventoryHelper
  fullName: Helpers.HelpingClasses.InventoryHelper
  type: Class
  source:
    id: InventoryHelper
    path: ''
    startLine: 46014
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses
  syntax:
    content: public static class InventoryHelper
    content.vb: Public Module InventoryHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Helpers.HelpingClasses.InventoryHelper.DecreaseItemAtPositionHotbar
  commentId: M:Helpers.HelpingClasses.InventoryHelper.DecreaseItemAtPositionHotbar
  id: DecreaseItemAtPositionHotbar
  parent: Helpers.HelpingClasses.InventoryHelper
  langs:
  - csharp
  - vb
  name: DecreaseItemAtPositionHotbar()
  nameWithType: InventoryHelper.DecreaseItemAtPositionHotbar()
  fullName: Helpers.HelpingClasses.InventoryHelper.DecreaseItemAtPositionHotbar()
  type: Method
  source:
    id: DecreaseItemAtPositionHotbar
    path: ''
    startLine: 46021
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses
  summary: "\nDecreases amount of the item at the current slot position in hotbar\n"
  example: []
  syntax:
    content: public static void DecreaseItemAtPositionHotbar()
    content.vb: Public Shared Sub DecreaseItemAtPositionHotbar()
  overload: Helpers.HelpingClasses.InventoryHelper.DecreaseItemAtPositionHotbar*
- uid: Helpers.HelpingClasses.InventoryHelper.AddItemToTheInventory(InventoryItemData,System.Int32)
  commentId: M:Helpers.HelpingClasses.InventoryHelper.AddItemToTheInventory(InventoryItemData,System.Int32)
  id: AddItemToTheInventory(InventoryItemData,System.Int32)
  parent: Helpers.HelpingClasses.InventoryHelper
  langs:
  - csharp
  - vb
  name: AddItemToTheInventory(InventoryItemData, int)
  nameWithType: InventoryHelper.AddItemToTheInventory(InventoryItemData, int)
  fullName: Helpers.HelpingClasses.InventoryHelper.AddItemToTheInventory(InventoryItemData, int)
  type: Method
  source:
    id: AddItemToTheInventory
    path: ''
    startLine: 46045
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses
  summary: "\nAdd item to the inventory, if the inventory is full, invoke the event\n"
  example: []
  syntax:
    content: public static (bool success, int amount) AddItemToTheInventory(InventoryItemData item, int amount)
    parameters:
    - id: item
      type: Global.InventoryItemData
    - id: amount
      type: System.Int32
    return:
      type: System.ValueTuple{System.Boolean,System.Int32}
      description: "\nTrue if the item has been fully added to any inventory; If the invetory doesn&apos;t have space in the inventory, \nit returns how many items it didn&apos;t find the space for\n{we wanna add 4 items, but space is just for 3, so it returns 1 as &quot;there wasn&apos;t space for 1 item&quot;}\n"
    content.vb: Public Shared Function AddItemToTheInventory(item As InventoryItemData, amount As Integer) As (success As Boolean, amount As Integer)
  overload: Helpers.HelpingClasses.InventoryHelper.AddItemToTheInventory*
  nameWithType.vb: InventoryHelper.AddItemToTheInventory(InventoryItemData, Integer)
  fullName.vb: Helpers.HelpingClasses.InventoryHelper.AddItemToTheInventory(InventoryItemData, Integer)
  name.vb: AddItemToTheInventory(InventoryItemData, Integer)
- uid: Helpers.HelpingClasses.InventoryHelper.DecreaseItemDurability
  commentId: M:Helpers.HelpingClasses.InventoryHelper.DecreaseItemDurability
  id: DecreaseItemDurability
  parent: Helpers.HelpingClasses.InventoryHelper
  langs:
  - csharp
  - vb
  name: DecreaseItemDurability()
  nameWithType: InventoryHelper.DecreaseItemDurability()
  fullName: Helpers.HelpingClasses.InventoryHelper.DecreaseItemDurability()
  type: Method
  source:
    id: DecreaseItemDurability
    path: ''
    startLine: 46082
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses
  syntax:
    content: public static void DecreaseItemDurability()
    content.vb: Public Shared Sub DecreaseItemDurability()
  overload: Helpers.HelpingClasses.InventoryHelper.DecreaseItemDurability*
- uid: Helpers.HelpingClasses.InventoryHelper.LockSlot
  commentId: M:Helpers.HelpingClasses.InventoryHelper.LockSlot
  id: LockSlot
  parent: Helpers.HelpingClasses.InventoryHelper
  langs:
  - csharp
  - vb
  name: LockSlot()
  nameWithType: InventoryHelper.LockSlot()
  fullName: Helpers.HelpingClasses.InventoryHelper.LockSlot()
  type: Method
  source:
    id: LockSlot
    path: ''
    startLine: 46089
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses
  syntax:
    content: public static void LockSlot()
    content.vb: Public Shared Sub LockSlot()
  overload: Helpers.HelpingClasses.InventoryHelper.LockSlot*
- uid: Helpers.HelpingClasses.InventoryHelper.IsCurrentSlotLocked
  commentId: M:Helpers.HelpingClasses.InventoryHelper.IsCurrentSlotLocked
  id: IsCurrentSlotLocked
  parent: Helpers.HelpingClasses.InventoryHelper
  langs:
  - csharp
  - vb
  name: IsCurrentSlotLocked()
  nameWithType: InventoryHelper.IsCurrentSlotLocked()
  fullName: Helpers.HelpingClasses.InventoryHelper.IsCurrentSlotLocked()
  type: Method
  source:
    id: IsCurrentSlotLocked
    path: ''
    startLine: 46095
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses
  syntax:
    content: public static bool IsCurrentSlotLocked()
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsCurrentSlotLocked() As Boolean
  overload: Helpers.HelpingClasses.InventoryHelper.IsCurrentSlotLocked*
- uid: Helpers.HelpingClasses.InventoryHelper.CurrentSlotInvData
  commentId: M:Helpers.HelpingClasses.InventoryHelper.CurrentSlotInvData
  id: CurrentSlotInvData
  parent: Helpers.HelpingClasses.InventoryHelper
  langs:
  - csharp
  - vb
  name: CurrentSlotInvData()
  nameWithType: InventoryHelper.CurrentSlotInvData()
  fullName: Helpers.HelpingClasses.InventoryHelper.CurrentSlotInvData()
  type: Method
  source:
    id: CurrentSlotInvData
    path: ''
    startLine: 46102
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses
  syntax:
    content: public static InventoryItemData CurrentSlotInvData()
    return:
      type: Global.InventoryItemData
    content.vb: Public Shared Function CurrentSlotInvData() As InventoryItemData
  overload: Helpers.HelpingClasses.InventoryHelper.CurrentSlotInvData*
- uid: Helpers.HelpingClasses.InventoryHelper.CurrentSlot
  commentId: M:Helpers.HelpingClasses.InventoryHelper.CurrentSlot
  id: CurrentSlot
  parent: Helpers.HelpingClasses.InventoryHelper
  langs:
  - csharp
  - vb
  name: CurrentSlot()
  nameWithType: InventoryHelper.CurrentSlot()
  fullName: Helpers.HelpingClasses.InventoryHelper.CurrentSlot()
  type: Method
  source:
    id: CurrentSlot
    path: ''
    startLine: 46109
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses
  syntax:
    content: public static InventorySlot CurrentSlot()
    return:
      type: Global.InventorySlot
    content.vb: Public Shared Function CurrentSlot() As InventorySlot
  overload: Helpers.HelpingClasses.InventoryHelper.CurrentSlot*
- uid: Helpers.HelpingClasses.InventoryHelper.ItemAmountInInventory(InventoryItemData,BackpackInventory,HotBarInventory)
  commentId: M:Helpers.HelpingClasses.InventoryHelper.ItemAmountInInventory(InventoryItemData,BackpackInventory,HotBarInventory)
  id: ItemAmountInInventory(InventoryItemData,BackpackInventory,HotBarInventory)
  parent: Helpers.HelpingClasses.InventoryHelper
  langs:
  - csharp
  - vb
  name: ItemAmountInInventory(InventoryItemData, BackpackInventory, HotBarInventory)
  nameWithType: InventoryHelper.ItemAmountInInventory(InventoryItemData, BackpackInventory, HotBarInventory)
  fullName: Helpers.HelpingClasses.InventoryHelper.ItemAmountInInventory(InventoryItemData, BackpackInventory, HotBarInventory)
  type: Method
  source:
    id: ItemAmountInInventory
    path: ''
    startLine: 46114
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses
  syntax:
    content: public static int ItemAmountInInventory(InventoryItemData item, BackpackInventory backpackInventory, HotBarInventory hotBarInventory)
    parameters:
    - id: item
      type: Global.InventoryItemData
    - id: backpackInventory
      type: Global.BackpackInventory
    - id: hotBarInventory
      type: Global.HotBarInventory
    return:
      type: System.Int32
    content.vb: Public Shared Function ItemAmountInInventory(item As InventoryItemData, backpackInventory As BackpackInventory, hotBarInventory As HotBarInventory) As Integer
  overload: Helpers.HelpingClasses.InventoryHelper.ItemAmountInInventory*
- uid: Helpers.HelpingClasses.InventoryHelper.CombineSlotsWithoutDuplicates(List{InventorySlot},List{InventorySlot})
  commentId: M:Helpers.HelpingClasses.InventoryHelper.CombineSlotsWithoutDuplicates(List{InventorySlot},List{InventorySlot})
  id: CombineSlotsWithoutDuplicates(List{InventorySlot},List{InventorySlot})
  parent: Helpers.HelpingClasses.InventoryHelper
  langs:
  - csharp
  - vb
  name: CombineSlotsWithoutDuplicates(List<InventorySlot>, List<InventorySlot>)
  nameWithType: InventoryHelper.CombineSlotsWithoutDuplicates(List<InventorySlot>, List<InventorySlot>)
  fullName: Helpers.HelpingClasses.InventoryHelper.CombineSlotsWithoutDuplicates(List<InventorySlot>, List<InventorySlot>)
  type: Method
  source:
    id: CombineSlotsWithoutDuplicates
    path: ''
    startLine: 46130
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses
  syntax:
    content: public static List<InventorySlot> CombineSlotsWithoutDuplicates(List<InventorySlot> slotsA, List<InventorySlot> slotsB)
    parameters:
    - id: slotsA
      type: Global.List{InventorySlot}
    - id: slotsB
      type: Global.List{InventorySlot}
    return:
      type: Global.List{InventorySlot}
    content.vb: Public Shared Function CombineSlotsWithoutDuplicates(slotsA As List(Of InventorySlot), slotsB As List(Of InventorySlot)) As List(Of InventorySlot)
  overload: Helpers.HelpingClasses.InventoryHelper.CombineSlotsWithoutDuplicates*
  nameWithType.vb: InventoryHelper.CombineSlotsWithoutDuplicates(List(Of InventorySlot), List(Of InventorySlot))
  fullName.vb: Helpers.HelpingClasses.InventoryHelper.CombineSlotsWithoutDuplicates(List(Of InventorySlot), List(Of InventorySlot))
  name.vb: CombineSlotsWithoutDuplicates(List(Of InventorySlot), List(Of InventorySlot))
references:
- uid: Helpers.HelpingClasses
  commentId: N:Helpers.HelpingClasses
  name: Helpers.HelpingClasses
  nameWithType: Helpers.HelpingClasses
  fullName: Helpers.HelpingClasses
  spec.csharp:
  - uid: Helpers
    name: Helpers
  - name: .
  - uid: Helpers.HelpingClasses
    name: HelpingClasses
  spec.vb:
  - uid: Helpers
    name: Helpers
  - name: .
  - uid: Helpers.HelpingClasses
    name: HelpingClasses
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Helpers.HelpingClasses.InventoryHelper.DecreaseItemAtPositionHotbar*
  commentId: Overload:Helpers.HelpingClasses.InventoryHelper.DecreaseItemAtPositionHotbar
  name: DecreaseItemAtPositionHotbar
  nameWithType: InventoryHelper.DecreaseItemAtPositionHotbar
  fullName: Helpers.HelpingClasses.InventoryHelper.DecreaseItemAtPositionHotbar
- uid: Helpers.HelpingClasses.InventoryHelper.AddItemToTheInventory*
  commentId: Overload:Helpers.HelpingClasses.InventoryHelper.AddItemToTheInventory
  name: AddItemToTheInventory
  nameWithType: InventoryHelper.AddItemToTheInventory
  fullName: Helpers.HelpingClasses.InventoryHelper.AddItemToTheInventory
- uid: Global.InventoryItemData
  isExternal: true
  name: InventoryItemData
  nameWithType: InventoryItemData
  fullName: InventoryItemData
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ValueTuple{System.Boolean,System.Int32}
  commentId: T:System.ValueTuple{System.Boolean,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  name: (bool success, int amount)
  nameWithType: (bool success, int amount)
  fullName: (bool success, int amount)
  nameWithType.vb: (success As Boolean, amount As Integer)
  fullName.vb: (success As Boolean, amount As Integer)
  name.vb: (success As Boolean, amount As Integer)
  spec.csharp:
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{System.Boolean,System.Int32}.success
    name: success
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{System.Boolean,System.Int32}.amount
    name: amount
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Boolean,System.Int32}.success
    name: success
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Boolean,System.Int32}.amount
    name: amount
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Helpers.HelpingClasses.InventoryHelper.DecreaseItemDurability*
  commentId: Overload:Helpers.HelpingClasses.InventoryHelper.DecreaseItemDurability
  name: DecreaseItemDurability
  nameWithType: InventoryHelper.DecreaseItemDurability
  fullName: Helpers.HelpingClasses.InventoryHelper.DecreaseItemDurability
- uid: Helpers.HelpingClasses.InventoryHelper.LockSlot*
  commentId: Overload:Helpers.HelpingClasses.InventoryHelper.LockSlot
  name: LockSlot
  nameWithType: InventoryHelper.LockSlot
  fullName: Helpers.HelpingClasses.InventoryHelper.LockSlot
- uid: Helpers.HelpingClasses.InventoryHelper.IsCurrentSlotLocked*
  commentId: Overload:Helpers.HelpingClasses.InventoryHelper.IsCurrentSlotLocked
  name: IsCurrentSlotLocked
  nameWithType: InventoryHelper.IsCurrentSlotLocked
  fullName: Helpers.HelpingClasses.InventoryHelper.IsCurrentSlotLocked
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Helpers.HelpingClasses.InventoryHelper.CurrentSlotInvData*
  commentId: Overload:Helpers.HelpingClasses.InventoryHelper.CurrentSlotInvData
  name: CurrentSlotInvData
  nameWithType: InventoryHelper.CurrentSlotInvData
  fullName: Helpers.HelpingClasses.InventoryHelper.CurrentSlotInvData
- uid: Helpers.HelpingClasses.InventoryHelper.CurrentSlot*
  commentId: Overload:Helpers.HelpingClasses.InventoryHelper.CurrentSlot
  name: CurrentSlot
  nameWithType: InventoryHelper.CurrentSlot
  fullName: Helpers.HelpingClasses.InventoryHelper.CurrentSlot
- uid: Global.InventorySlot
  commentId: '!:Global.InventorySlot'
  isExternal: true
  name: InventorySlot
  nameWithType: InventorySlot
  fullName: InventorySlot
- uid: Helpers.HelpingClasses.InventoryHelper.ItemAmountInInventory*
  commentId: Overload:Helpers.HelpingClasses.InventoryHelper.ItemAmountInInventory
  name: ItemAmountInInventory
  nameWithType: InventoryHelper.ItemAmountInInventory
  fullName: Helpers.HelpingClasses.InventoryHelper.ItemAmountInInventory
- uid: Global.BackpackInventory
  isExternal: true
  name: BackpackInventory
  nameWithType: BackpackInventory
  fullName: BackpackInventory
- uid: Global.HotBarInventory
  isExternal: true
  name: HotBarInventory
  nameWithType: HotBarInventory
  fullName: HotBarInventory
- uid: Helpers.HelpingClasses.InventoryHelper.CombineSlotsWithoutDuplicates*
  commentId: Overload:Helpers.HelpingClasses.InventoryHelper.CombineSlotsWithoutDuplicates
  name: CombineSlotsWithoutDuplicates
  nameWithType: InventoryHelper.CombineSlotsWithoutDuplicates
  fullName: Helpers.HelpingClasses.InventoryHelper.CombineSlotsWithoutDuplicates
- uid: Global.List{InventorySlot}
  commentId: '!:Global.List{InventorySlot}'
  definition: Global.List`1
  name: List<InventorySlot>
  nameWithType: List<InventorySlot>
  fullName: List<InventorySlot>
  nameWithType.vb: List(Of InventorySlot)
  fullName.vb: List(Of InventorySlot)
  name.vb: List(Of InventorySlot)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.InventorySlot
    name: InventorySlot
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.InventorySlot
    name: InventorySlot
    isExternal: true
  - name: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
