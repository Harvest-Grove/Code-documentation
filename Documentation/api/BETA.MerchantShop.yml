### YamlMime:ManagedReference
items:
- uid: BETA.MerchantShop
  commentId: T:BETA.MerchantShop
  id: MerchantShop
  parent: BETA
  children:
  - BETA.MerchantShop.BuyItem(InventoryItemData,IInventoryService)
  - BETA.MerchantShop.GenerateRandomItemsForFoodSection(System.Int32)
  - BETA.MerchantShop.GenerateRandomItemsForUtilitySection(System.Int32)
  - BETA.MerchantShop.SellItem(InventoryItemData,IInventoryService)
  langs:
  - csharp
  - vb
  name: MerchantShop
  nameWithType: MerchantShop
  fullName: BETA.MerchantShop
  type: Class
  source:
    id: MerchantShop
    path: ''
    startLine: 13681
  assemblies:
  - cs.temp.dll
  namespace: BETA
  syntax:
    content: public static class MerchantShop
    content.vb: Public Module MerchantShop
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: BETA.MerchantShop.GenerateRandomItemsForFoodSection(System.Int32)
  commentId: M:BETA.MerchantShop.GenerateRandomItemsForFoodSection(System.Int32)
  id: GenerateRandomItemsForFoodSection(System.Int32)
  parent: BETA.MerchantShop
  langs:
  - csharp
  - vb
  name: GenerateRandomItemsForFoodSection(int)
  nameWithType: MerchantShop.GenerateRandomItemsForFoodSection(int)
  fullName: BETA.MerchantShop.GenerateRandomItemsForFoodSection(int)
  type: Method
  source:
    id: GenerateRandomItemsForFoodSection
    path: ''
    startLine: 13683
  assemblies:
  - cs.temp.dll
  namespace: BETA
  syntax:
    content: public static List<InventoryItemData> GenerateRandomItemsForFoodSection(int foodSectionSize)
    parameters:
    - id: foodSectionSize
      type: System.Int32
    return:
      type: Global.List{InventoryItemData}
    content.vb: Public Shared Function GenerateRandomItemsForFoodSection(foodSectionSize As Integer) As List(Of InventoryItemData)
  overload: BETA.MerchantShop.GenerateRandomItemsForFoodSection*
  nameWithType.vb: MerchantShop.GenerateRandomItemsForFoodSection(Integer)
  fullName.vb: BETA.MerchantShop.GenerateRandomItemsForFoodSection(Integer)
  name.vb: GenerateRandomItemsForFoodSection(Integer)
- uid: BETA.MerchantShop.GenerateRandomItemsForUtilitySection(System.Int32)
  commentId: M:BETA.MerchantShop.GenerateRandomItemsForUtilitySection(System.Int32)
  id: GenerateRandomItemsForUtilitySection(System.Int32)
  parent: BETA.MerchantShop
  langs:
  - csharp
  - vb
  name: GenerateRandomItemsForUtilitySection(int)
  nameWithType: MerchantShop.GenerateRandomItemsForUtilitySection(int)
  fullName: BETA.MerchantShop.GenerateRandomItemsForUtilitySection(int)
  type: Method
  source:
    id: GenerateRandomItemsForUtilitySection
    path: ''
    startLine: 13700
  assemblies:
  - cs.temp.dll
  namespace: BETA
  syntax:
    content: public static List<InventoryItemData> GenerateRandomItemsForUtilitySection(int utilitySectionSize)
    parameters:
    - id: utilitySectionSize
      type: System.Int32
    return:
      type: Global.List{InventoryItemData}
    content.vb: Public Shared Function GenerateRandomItemsForUtilitySection(utilitySectionSize As Integer) As List(Of InventoryItemData)
  overload: BETA.MerchantShop.GenerateRandomItemsForUtilitySection*
  nameWithType.vb: MerchantShop.GenerateRandomItemsForUtilitySection(Integer)
  fullName.vb: BETA.MerchantShop.GenerateRandomItemsForUtilitySection(Integer)
  name.vb: GenerateRandomItemsForUtilitySection(Integer)
- uid: BETA.MerchantShop.BuyItem(InventoryItemData,IInventoryService)
  commentId: M:BETA.MerchantShop.BuyItem(InventoryItemData,IInventoryService)
  id: BuyItem(InventoryItemData,IInventoryService)
  parent: BETA.MerchantShop
  langs:
  - csharp
  - vb
  name: BuyItem(InventoryItemData, IInventoryService)
  nameWithType: MerchantShop.BuyItem(InventoryItemData, IInventoryService)
  fullName: BETA.MerchantShop.BuyItem(InventoryItemData, IInventoryService)
  type: Method
  source:
    id: BuyItem
    path: ''
    startLine: 13720
  assemblies:
  - cs.temp.dll
  namespace: BETA
  syntax:
    content: public static void BuyItem(InventoryItemData item, IInventoryService inventoryService)
    parameters:
    - id: item
      type: Global.InventoryItemData
    - id: inventoryService
      type: Global.IInventoryService
    content.vb: Public Shared Sub BuyItem(item As InventoryItemData, inventoryService As IInventoryService)
  overload: BETA.MerchantShop.BuyItem*
- uid: BETA.MerchantShop.SellItem(InventoryItemData,IInventoryService)
  commentId: M:BETA.MerchantShop.SellItem(InventoryItemData,IInventoryService)
  id: SellItem(InventoryItemData,IInventoryService)
  parent: BETA.MerchantShop
  langs:
  - csharp
  - vb
  name: SellItem(InventoryItemData, IInventoryService)
  nameWithType: MerchantShop.SellItem(InventoryItemData, IInventoryService)
  fullName: BETA.MerchantShop.SellItem(InventoryItemData, IInventoryService)
  type: Method
  source:
    id: SellItem
    path: ''
    startLine: 13746
  assemblies:
  - cs.temp.dll
  namespace: BETA
  syntax:
    content: public static void SellItem(InventoryItemData item, IInventoryService inventoryService)
    parameters:
    - id: item
      type: Global.InventoryItemData
    - id: inventoryService
      type: Global.IInventoryService
    content.vb: Public Shared Sub SellItem(item As InventoryItemData, inventoryService As IInventoryService)
  overload: BETA.MerchantShop.SellItem*
references:
- uid: BETA
  commentId: N:BETA
  name: BETA
  nameWithType: BETA
  fullName: BETA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BETA.MerchantShop.GenerateRandomItemsForFoodSection*
  commentId: Overload:BETA.MerchantShop.GenerateRandomItemsForFoodSection
  name: GenerateRandomItemsForFoodSection
  nameWithType: MerchantShop.GenerateRandomItemsForFoodSection
  fullName: BETA.MerchantShop.GenerateRandomItemsForFoodSection
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.List{InventoryItemData}
  commentId: '!:Global.List{InventoryItemData}'
  definition: Global.List`1
  name: List<InventoryItemData>
  nameWithType: List<InventoryItemData>
  fullName: List<InventoryItemData>
  nameWithType.vb: List(Of InventoryItemData)
  fullName.vb: List(Of InventoryItemData)
  name.vb: List(Of InventoryItemData)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.InventoryItemData
    name: InventoryItemData
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.InventoryItemData
    name: InventoryItemData
    isExternal: true
  - name: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: BETA.MerchantShop.GenerateRandomItemsForUtilitySection*
  commentId: Overload:BETA.MerchantShop.GenerateRandomItemsForUtilitySection
  name: GenerateRandomItemsForUtilitySection
  nameWithType: MerchantShop.GenerateRandomItemsForUtilitySection
  fullName: BETA.MerchantShop.GenerateRandomItemsForUtilitySection
- uid: BETA.MerchantShop.BuyItem*
  commentId: Overload:BETA.MerchantShop.BuyItem
  name: BuyItem
  nameWithType: MerchantShop.BuyItem
  fullName: BETA.MerchantShop.BuyItem
- uid: Global.InventoryItemData
  isExternal: true
  name: InventoryItemData
  nameWithType: InventoryItemData
  fullName: InventoryItemData
- uid: Global.IInventoryService
  isExternal: true
  name: IInventoryService
  nameWithType: IInventoryService
  fullName: IInventoryService
- uid: BETA.MerchantShop.SellItem*
  commentId: Overload:BETA.MerchantShop.SellItem
  name: SellItem
  nameWithType: MerchantShop.SellItem
  fullName: BETA.MerchantShop.SellItem
