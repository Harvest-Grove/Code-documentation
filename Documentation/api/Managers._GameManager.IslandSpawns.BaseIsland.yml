### YamlMime:ManagedReference
items:
- uid: Managers._GameManager.IslandSpawns.BaseIsland
  commentId: T:Managers._GameManager.IslandSpawns.BaseIsland
  id: BaseIsland
  parent: Managers._GameManager.IslandSpawns
  children:
  - Managers._GameManager.IslandSpawns.BaseIsland.#ctor(GameContextManager)
  - Managers._GameManager.IslandSpawns.BaseIsland.GameContextManager
  - Managers._GameManager.IslandSpawns.BaseIsland.GetPlayerPosition(System.Boolean,System.Boolean)
  langs:
  - csharp
  - vb
  name: BaseIsland
  nameWithType: BaseIsland
  fullName: Managers._GameManager.IslandSpawns.BaseIsland
  type: Class
  source:
    id: BaseIsland
    path: ''
    startLine: 41889
  assemblies:
  - cs.temp.dll
  namespace: Managers._GameManager.IslandSpawns
  syntax:
    content: public abstract class BaseIsland
    content.vb: Public MustInherit Class BaseIsland
  inheritance:
  - System.Object
  derivedClasses:
  - Managers._GameManager.IslandSpawns.CaveIsland
  - Managers._GameManager.IslandSpawns.ForestIsland
  - Managers._GameManager.IslandSpawns.HomeIsland
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Managers._GameManager.IslandSpawns.BaseIsland.GameContextManager
  commentId: F:Managers._GameManager.IslandSpawns.BaseIsland.GameContextManager
  id: GameContextManager
  parent: Managers._GameManager.IslandSpawns.BaseIsland
  langs:
  - csharp
  - vb
  name: GameContextManager
  nameWithType: BaseIsland.GameContextManager
  fullName: Managers._GameManager.IslandSpawns.BaseIsland.GameContextManager
  type: Field
  source:
    id: GameContextManager
    path: ''
    startLine: 41891
  assemblies:
  - cs.temp.dll
  namespace: Managers._GameManager.IslandSpawns
  syntax:
    content: protected GameContextManager GameContextManager
    return:
      type: Global.GameContextManager
    content.vb: Protected GameContextManager As GameContextManager
- uid: Managers._GameManager.IslandSpawns.BaseIsland.#ctor(GameContextManager)
  commentId: M:Managers._GameManager.IslandSpawns.BaseIsland.#ctor(GameContextManager)
  id: '#ctor(GameContextManager)'
  parent: Managers._GameManager.IslandSpawns.BaseIsland
  langs:
  - csharp
  - vb
  name: BaseIsland(GameContextManager)
  nameWithType: BaseIsland.BaseIsland(GameContextManager)
  fullName: Managers._GameManager.IslandSpawns.BaseIsland.BaseIsland(GameContextManager)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 41893
  assemblies:
  - cs.temp.dll
  namespace: Managers._GameManager.IslandSpawns
  syntax:
    content: public BaseIsland(GameContextManager gameContextManager)
    parameters:
    - id: gameContextManager
      type: Global.GameContextManager
    content.vb: Public Sub New(gameContextManager As GameContextManager)
  overload: Managers._GameManager.IslandSpawns.BaseIsland.#ctor*
  nameWithType.vb: BaseIsland.New(GameContextManager)
  fullName.vb: Managers._GameManager.IslandSpawns.BaseIsland.New(GameContextManager)
  name.vb: New(GameContextManager)
- uid: Managers._GameManager.IslandSpawns.BaseIsland.GetPlayerPosition(System.Boolean,System.Boolean)
  commentId: M:Managers._GameManager.IslandSpawns.BaseIsland.GetPlayerPosition(System.Boolean,System.Boolean)
  id: GetPlayerPosition(System.Boolean,System.Boolean)
  parent: Managers._GameManager.IslandSpawns.BaseIsland
  langs:
  - csharp
  - vb
  name: GetPlayerPosition(bool, bool)
  nameWithType: BaseIsland.GetPlayerPosition(bool, bool)
  fullName: Managers._GameManager.IslandSpawns.BaseIsland.GetPlayerPosition(bool, bool)
  type: Method
  source:
    id: GetPlayerPosition
    path: ''
    startLine: 41898
  assemblies:
  - cs.temp.dll
  namespace: Managers._GameManager.IslandSpawns
  syntax:
    content: public abstract UniTask<Vector2> GetPlayerPosition(bool isSaving, bool isTravelling)
    parameters:
    - id: isSaving
      type: System.Boolean
    - id: isTravelling
      type: System.Boolean
    return:
      type: Global.UniTask{Vector2}
    content.vb: Public MustOverride Function GetPlayerPosition(isSaving As Boolean, isTravelling As Boolean) As UniTask(Of Vector2)
  overload: Managers._GameManager.IslandSpawns.BaseIsland.GetPlayerPosition*
  nameWithType.vb: BaseIsland.GetPlayerPosition(Boolean, Boolean)
  fullName.vb: Managers._GameManager.IslandSpawns.BaseIsland.GetPlayerPosition(Boolean, Boolean)
  name.vb: GetPlayerPosition(Boolean, Boolean)
references:
- uid: Managers._GameManager.IslandSpawns
  commentId: N:Managers._GameManager.IslandSpawns
  name: Managers._GameManager.IslandSpawns
  nameWithType: Managers._GameManager.IslandSpawns
  fullName: Managers._GameManager.IslandSpawns
  spec.csharp:
  - uid: Managers
    name: Managers
  - name: .
  - uid: Managers._GameManager
    name: _GameManager
  - name: .
  - uid: Managers._GameManager.IslandSpawns
    name: IslandSpawns
  spec.vb:
  - uid: Managers
    name: Managers
  - name: .
  - uid: Managers._GameManager
    name: _GameManager
  - name: .
  - uid: Managers._GameManager.IslandSpawns
    name: IslandSpawns
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.GameContextManager
  isExternal: true
  name: GameContextManager
  nameWithType: GameContextManager
  fullName: GameContextManager
- uid: Managers._GameManager.IslandSpawns.BaseIsland.#ctor*
  commentId: Overload:Managers._GameManager.IslandSpawns.BaseIsland.#ctor
  name: BaseIsland
  nameWithType: BaseIsland.BaseIsland
  fullName: Managers._GameManager.IslandSpawns.BaseIsland.BaseIsland
  nameWithType.vb: BaseIsland.New
  fullName.vb: Managers._GameManager.IslandSpawns.BaseIsland.New
  name.vb: New
- uid: Managers._GameManager.IslandSpawns.BaseIsland.GetPlayerPosition*
  commentId: Overload:Managers._GameManager.IslandSpawns.BaseIsland.GetPlayerPosition
  name: GetPlayerPosition
  nameWithType: BaseIsland.GetPlayerPosition
  fullName: Managers._GameManager.IslandSpawns.BaseIsland.GetPlayerPosition
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.UniTask{Vector2}
  commentId: '!:Global.UniTask{Vector2}'
  definition: Global.UniTask`1
  name: UniTask<Vector2>
  nameWithType: UniTask<Vector2>
  fullName: UniTask<Vector2>
  nameWithType.vb: UniTask(Of Vector2)
  fullName.vb: UniTask(Of Vector2)
  name.vb: UniTask(Of Vector2)
  spec.csharp:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: Global.Vector2
    name: Vector2
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.UniTask`1
  isExternal: true
  name: UniTask<>
  nameWithType: UniTask<>
  fullName: UniTask<>
  nameWithType.vb: UniTask(Of )
  fullName.vb: UniTask(Of )
  name.vb: UniTask(Of )
  spec.csharp:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
