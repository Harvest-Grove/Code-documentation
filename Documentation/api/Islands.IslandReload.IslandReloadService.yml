### YamlMime:ManagedReference
items:
- uid: Islands.IslandReload.IslandReloadService
  commentId: T:Islands.IslandReload.IslandReloadService
  id: IslandReloadService
  parent: Islands.IslandReload
  children:
  - Islands.IslandReload.IslandReloadService.#ctor(Islands.IslandReload.IslandReloadSettingsSO,PlayerDataSO)
  - Islands.IslandReload.IslandReloadService.CanReload(IslandsDictionaryNames)
  - Islands.IslandReload.IslandReloadService.ReloadIsland(IslandsDictionaryNames)
  langs:
  - csharp
  - vb
  name: IslandReloadService
  nameWithType: IslandReloadService
  fullName: Islands.IslandReload.IslandReloadService
  type: Class
  source:
    id: IslandReloadService
    path: ''
    startLine: 32980
  assemblies:
  - cs.temp.dll
  namespace: Islands.IslandReload
  syntax:
    content: 'public class IslandReloadService : IIslandReloadService'
    content.vb: Public Class IslandReloadService Implements IIslandReloadService
  inheritance:
  - System.Object
  implements:
  - Islands.IslandReload.IIslandReloadService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Islands.IslandReload.IslandReloadService.#ctor(Islands.IslandReload.IslandReloadSettingsSO,PlayerDataSO)
  commentId: M:Islands.IslandReload.IslandReloadService.#ctor(Islands.IslandReload.IslandReloadSettingsSO,PlayerDataSO)
  id: '#ctor(Islands.IslandReload.IslandReloadSettingsSO,PlayerDataSO)'
  parent: Islands.IslandReload.IslandReloadService
  langs:
  - csharp
  - vb
  name: IslandReloadService(IslandReloadSettingsSO, PlayerDataSO)
  nameWithType: IslandReloadService.IslandReloadService(IslandReloadSettingsSO, PlayerDataSO)
  fullName: Islands.IslandReload.IslandReloadService.IslandReloadService(Islands.IslandReload.IslandReloadSettingsSO, PlayerDataSO)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 32987
  assemblies:
  - cs.temp.dll
  namespace: Islands.IslandReload
  syntax:
    content: public IslandReloadService(IslandReloadSettingsSO settingsSO, PlayerDataSO playerData)
    parameters:
    - id: settingsSO
      type: Islands.IslandReload.IslandReloadSettingsSO
    - id: playerData
      type: Global.PlayerDataSO
    content.vb: Public Sub New(settingsSO As IslandReloadSettingsSO, playerData As PlayerDataSO)
  overload: Islands.IslandReload.IslandReloadService.#ctor*
  nameWithType.vb: IslandReloadService.New(IslandReloadSettingsSO, PlayerDataSO)
  fullName.vb: Islands.IslandReload.IslandReloadService.New(Islands.IslandReload.IslandReloadSettingsSO, PlayerDataSO)
  name.vb: New(IslandReloadSettingsSO, PlayerDataSO)
- uid: Islands.IslandReload.IslandReloadService.CanReload(IslandsDictionaryNames)
  commentId: M:Islands.IslandReload.IslandReloadService.CanReload(IslandsDictionaryNames)
  id: CanReload(IslandsDictionaryNames)
  parent: Islands.IslandReload.IslandReloadService
  langs:
  - csharp
  - vb
  name: CanReload(IslandsDictionaryNames)
  nameWithType: IslandReloadService.CanReload(IslandsDictionaryNames)
  fullName: Islands.IslandReload.IslandReloadService.CanReload(IslandsDictionaryNames)
  type: Method
  source:
    id: CanReload
    path: ''
    startLine: 32993
  assemblies:
  - cs.temp.dll
  namespace: Islands.IslandReload
  syntax:
    content: public bool CanReload(IslandsDictionaryNames island)
    parameters:
    - id: island
      type: Global.IslandsDictionaryNames
    return:
      type: System.Boolean
    content.vb: Public Function CanReload(island As IslandsDictionaryNames) As Boolean
  overload: Islands.IslandReload.IslandReloadService.CanReload*
  implements:
  - Islands.IslandReload.IIslandReloadService.CanReload(IslandsDictionaryNames)
- uid: Islands.IslandReload.IslandReloadService.ReloadIsland(IslandsDictionaryNames)
  commentId: M:Islands.IslandReload.IslandReloadService.ReloadIsland(IslandsDictionaryNames)
  id: ReloadIsland(IslandsDictionaryNames)
  parent: Islands.IslandReload.IslandReloadService
  langs:
  - csharp
  - vb
  name: ReloadIsland(IslandsDictionaryNames)
  nameWithType: IslandReloadService.ReloadIsland(IslandsDictionaryNames)
  fullName: Islands.IslandReload.IslandReloadService.ReloadIsland(IslandsDictionaryNames)
  type: Method
  source:
    id: ReloadIsland
    path: ''
    startLine: 33011
  assemblies:
  - cs.temp.dll
  namespace: Islands.IslandReload
  syntax:
    content: public UniTask ReloadIsland(IslandsDictionaryNames island)
    parameters:
    - id: island
      type: Global.IslandsDictionaryNames
    return:
      type: Global.UniTask
    content.vb: Public Function ReloadIsland(island As IslandsDictionaryNames) As UniTask
  overload: Islands.IslandReload.IslandReloadService.ReloadIsland*
  implements:
  - Islands.IslandReload.IIslandReloadService.ReloadIsland(IslandsDictionaryNames)
references:
- uid: Islands.IslandReload
  commentId: N:Islands.IslandReload
  name: Islands.IslandReload
  nameWithType: Islands.IslandReload
  fullName: Islands.IslandReload
  spec.csharp:
  - uid: Islands
    name: Islands
  - name: .
  - uid: Islands.IslandReload
    name: IslandReload
  spec.vb:
  - uid: Islands
    name: Islands
  - name: .
  - uid: Islands.IslandReload
    name: IslandReload
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Islands.IslandReload.IIslandReloadService
  commentId: T:Islands.IslandReload.IIslandReloadService
  parent: Islands.IslandReload
  name: IIslandReloadService
  nameWithType: IIslandReloadService
  fullName: Islands.IslandReload.IIslandReloadService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Islands.IslandReload.IslandReloadService.#ctor*
  commentId: Overload:Islands.IslandReload.IslandReloadService.#ctor
  name: IslandReloadService
  nameWithType: IslandReloadService.IslandReloadService
  fullName: Islands.IslandReload.IslandReloadService.IslandReloadService
  nameWithType.vb: IslandReloadService.New
  fullName.vb: Islands.IslandReload.IslandReloadService.New
  name.vb: New
- uid: Islands.IslandReload.IslandReloadSettingsSO
  commentId: T:Islands.IslandReload.IslandReloadSettingsSO
  parent: Islands.IslandReload
  name: IslandReloadSettingsSO
  nameWithType: IslandReloadSettingsSO
  fullName: Islands.IslandReload.IslandReloadSettingsSO
- uid: Global.PlayerDataSO
  isExternal: true
  name: PlayerDataSO
  nameWithType: PlayerDataSO
  fullName: PlayerDataSO
- uid: Islands.IslandReload.IslandReloadService.CanReload*
  commentId: Overload:Islands.IslandReload.IslandReloadService.CanReload
  name: CanReload
  nameWithType: IslandReloadService.CanReload
  fullName: Islands.IslandReload.IslandReloadService.CanReload
- uid: Islands.IslandReload.IIslandReloadService.CanReload(IslandsDictionaryNames)
  commentId: M:Islands.IslandReload.IIslandReloadService.CanReload(IslandsDictionaryNames)
  parent: Islands.IslandReload.IIslandReloadService
  isExternal: true
  name: CanReload(IslandsDictionaryNames)
  nameWithType: IIslandReloadService.CanReload(IslandsDictionaryNames)
  fullName: Islands.IslandReload.IIslandReloadService.CanReload(IslandsDictionaryNames)
  spec.csharp:
  - uid: Islands.IslandReload.IIslandReloadService.CanReload(IslandsDictionaryNames)
    name: CanReload
  - name: (
  - uid: Global.IslandsDictionaryNames
    name: IslandsDictionaryNames
    isExternal: true
  - name: )
  spec.vb:
  - uid: Islands.IslandReload.IIslandReloadService.CanReload(IslandsDictionaryNames)
    name: CanReload
  - name: (
  - uid: Global.IslandsDictionaryNames
    name: IslandsDictionaryNames
    isExternal: true
  - name: )
- uid: Global.IslandsDictionaryNames
  isExternal: true
  name: IslandsDictionaryNames
  nameWithType: IslandsDictionaryNames
  fullName: IslandsDictionaryNames
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Islands.IslandReload.IslandReloadService.ReloadIsland*
  commentId: Overload:Islands.IslandReload.IslandReloadService.ReloadIsland
  name: ReloadIsland
  nameWithType: IslandReloadService.ReloadIsland
  fullName: Islands.IslandReload.IslandReloadService.ReloadIsland
- uid: Islands.IslandReload.IIslandReloadService.ReloadIsland(IslandsDictionaryNames)
  commentId: M:Islands.IslandReload.IIslandReloadService.ReloadIsland(IslandsDictionaryNames)
  parent: Islands.IslandReload.IIslandReloadService
  isExternal: true
  name: ReloadIsland(IslandsDictionaryNames)
  nameWithType: IIslandReloadService.ReloadIsland(IslandsDictionaryNames)
  fullName: Islands.IslandReload.IIslandReloadService.ReloadIsland(IslandsDictionaryNames)
  spec.csharp:
  - uid: Islands.IslandReload.IIslandReloadService.ReloadIsland(IslandsDictionaryNames)
    name: ReloadIsland
  - name: (
  - uid: Global.IslandsDictionaryNames
    name: IslandsDictionaryNames
    isExternal: true
  - name: )
  spec.vb:
  - uid: Islands.IslandReload.IIslandReloadService.ReloadIsland(IslandsDictionaryNames)
    name: ReloadIsland
  - name: (
  - uid: Global.IslandsDictionaryNames
    name: IslandsDictionaryNames
    isExternal: true
  - name: )
- uid: Global.UniTask
  isExternal: true
  name: UniTask
  nameWithType: UniTask
  fullName: UniTask
