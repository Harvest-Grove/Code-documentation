### YamlMime:ManagedReference
items:
- uid: Helpers.HelpingClasses.Extensions
  commentId: T:Helpers.HelpingClasses.Extensions
  id: Extensions
  parent: Helpers.HelpingClasses
  children:
  - Helpers.HelpingClasses.Extensions.SplitCamelCase(System.String)
  - Helpers.HelpingClasses.Extensions.SplitNPC_Dialogue(System.String)
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: Helpers.HelpingClasses.Extensions
  type: Class
  source:
    id: Extensions
    path: ''
    startLine: 46353
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses
  syntax:
    content: public static class Extensions
    content.vb: Public Module Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Helpers.HelpingClasses.Extensions.SplitCamelCase(System.String)
  commentId: M:Helpers.HelpingClasses.Extensions.SplitCamelCase(System.String)
  id: SplitCamelCase(System.String)
  parent: Helpers.HelpingClasses.Extensions
  langs:
  - csharp
  - vb
  name: SplitCamelCase(string)
  nameWithType: Extensions.SplitCamelCase(string)
  fullName: Helpers.HelpingClasses.Extensions.SplitCamelCase(string)
  type: Method
  source:
    id: SplitCamelCase
    path: ''
    startLine: 46355
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses
  syntax:
    content: public static string SplitCamelCase(string input)
    parameters:
    - id: input
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function SplitCamelCase(input As String) As String
  overload: Helpers.HelpingClasses.Extensions.SplitCamelCase*
  nameWithType.vb: Extensions.SplitCamelCase(String)
  fullName.vb: Helpers.HelpingClasses.Extensions.SplitCamelCase(String)
  name.vb: SplitCamelCase(String)
- uid: Helpers.HelpingClasses.Extensions.SplitNPC_Dialogue(System.String)
  commentId: M:Helpers.HelpingClasses.Extensions.SplitNPC_Dialogue(System.String)
  id: SplitNPC_Dialogue(System.String)
  parent: Helpers.HelpingClasses.Extensions
  langs:
  - csharp
  - vb
  name: SplitNPC_Dialogue(string)
  nameWithType: Extensions.SplitNPC_Dialogue(string)
  fullName: Helpers.HelpingClasses.Extensions.SplitNPC_Dialogue(string)
  type: Method
  source:
    id: SplitNPC_Dialogue
    path: ''
    startLine: 46357
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses
  syntax:
    content: public static string[] SplitNPC_Dialogue(string input)
    parameters:
    - id: input
      type: System.String
    return:
      type: System.String[]
    content.vb: Public Shared Function SplitNPC_Dialogue(input As String) As String()
  overload: Helpers.HelpingClasses.Extensions.SplitNPC_Dialogue*
  nameWithType.vb: Extensions.SplitNPC_Dialogue(String)
  fullName.vb: Helpers.HelpingClasses.Extensions.SplitNPC_Dialogue(String)
  name.vb: SplitNPC_Dialogue(String)
references:
- uid: Helpers.HelpingClasses
  commentId: N:Helpers.HelpingClasses
  name: Helpers.HelpingClasses
  nameWithType: Helpers.HelpingClasses
  fullName: Helpers.HelpingClasses
  spec.csharp:
  - uid: Helpers
    name: Helpers
  - name: .
  - uid: Helpers.HelpingClasses
    name: HelpingClasses
  spec.vb:
  - uid: Helpers
    name: Helpers
  - name: .
  - uid: Helpers.HelpingClasses
    name: HelpingClasses
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Helpers.HelpingClasses.Extensions.SplitCamelCase*
  commentId: Overload:Helpers.HelpingClasses.Extensions.SplitCamelCase
  name: SplitCamelCase
  nameWithType: Extensions.SplitCamelCase
  fullName: Helpers.HelpingClasses.Extensions.SplitCamelCase
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Helpers.HelpingClasses.Extensions.SplitNPC_Dialogue*
  commentId: Overload:Helpers.HelpingClasses.Extensions.SplitNPC_Dialogue
  name: SplitNPC_Dialogue
  nameWithType: Extensions.SplitNPC_Dialogue
  fullName: Helpers.HelpingClasses.Extensions.SplitNPC_Dialogue
- uid: System.String[]
  isExternal: true
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
