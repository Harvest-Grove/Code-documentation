### YamlMime:ManagedReference
items:
- uid: Managers.Managers.AnimalHousingManager
  commentId: T:Managers.Managers.AnimalHousingManager
  id: AnimalHousingManager
  parent: Managers.Managers
  children:
  - Managers.Managers.AnimalHousingManager.AddAnimalBuilding(Vector2,System.UInt16,MainAnimalsEnum,Managers.SideEnum)
  - Managers.Managers.AnimalHousingManager.AnimalHousePosition(System.Int32)
  - Managers.Managers.AnimalHousingManager.AnimalHousings
  - Managers.Managers.AnimalHousingManager.Beehives
  - Managers.Managers.AnimalHousingManager.CanBuyAnimal(MainAnimalsEnum)
  - Managers.Managers.AnimalHousingManager.ClearDictionary
  - Managers.Managers.AnimalHousingManager.FindHomeForAnimal(AnimalStage,MainAnimalsEnum,SecondaryAnimalsEnum,System.String,System.Boolean)
  - Managers.Managers.AnimalHousingManager.GetAnimalHousing(System.Int32)
  - Managers.Managers.AnimalHousingManager.GetAnimalHousing(Vector2)
  - Managers.Managers.AnimalHousingManager.GetAnimalHousingSide(Vector2)
  - Managers.Managers.AnimalHousingManager.GetAnimalSide(Vector2)
  - Managers.Managers.AnimalHousingManager.GetBeehive(Vector2)
  - Managers.Managers.AnimalHousingManager.Initialize(IslandsDictionaryNames)
  - Managers.Managers.AnimalHousingManager.IsAnimalHungry(System.Int32)
  - Managers.Managers.AnimalHousingManager.IsAnimalThirsty(System.Int32)
  - Managers.Managers.AnimalHousingManager.LastAvailableAnimalID
  - Managers.Managers.AnimalHousingManager.Load(IslandsDictionaryNames)
  - Managers.Managers.AnimalHousingManager.Priority
  - Managers.Managers.AnimalHousingManager.Save(IslandsDictionaryNames)
  - Managers.Managers.AnimalHousingManager.SavingPath(IslandsDictionaryNames)
  - Managers.Managers.AnimalHousingManager.SpaceAmount(MainAnimalsEnum)
  langs:
  - csharp
  - vb
  name: AnimalHousingManager
  nameWithType: AnimalHousingManager
  fullName: Managers.Managers.AnimalHousingManager
  type: Class
  source:
    id: AnimalHousingManager
    path: ''
    startLine: 42757
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  syntax:
    content: 'public class AnimalHousingManager : ScriptableObject, ISavableWithPath'
    content.vb: Public Class AnimalHousingManager Inherits ScriptableObject Implements ISavableWithPath
  inheritance:
  - System.Object
  implements:
  - Global.ISavableWithPath
- uid: Managers.Managers.AnimalHousingManager.LastAvailableAnimalID
  commentId: P:Managers.Managers.AnimalHousingManager.LastAvailableAnimalID
  id: LastAvailableAnimalID
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: LastAvailableAnimalID
  nameWithType: AnimalHousingManager.LastAvailableAnimalID
  fullName: Managers.Managers.AnimalHousingManager.LastAvailableAnimalID
  type: Property
  source:
    id: LastAvailableAnimalID
    path: ''
    startLine: 42760
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  syntax:
    content: public int LastAvailableAnimalID { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LastAvailableAnimalID As Integer
  overload: Managers.Managers.AnimalHousingManager.LastAvailableAnimalID*
- uid: Managers.Managers.AnimalHousingManager.Priority
  commentId: P:Managers.Managers.AnimalHousingManager.Priority
  id: Priority
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: AnimalHousingManager.Priority
  fullName: Managers.Managers.AnimalHousingManager.Priority
  type: Property
  source:
    id: Priority
    path: ''
    startLine: 42762
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  syntax:
    content: public int Priority { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Priority As Integer
  overload: Managers.Managers.AnimalHousingManager.Priority*
- uid: Managers.Managers.AnimalHousingManager.SavingPath(IslandsDictionaryNames)
  commentId: M:Managers.Managers.AnimalHousingManager.SavingPath(IslandsDictionaryNames)
  id: SavingPath(IslandsDictionaryNames)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: SavingPath(IslandsDictionaryNames)
  nameWithType: AnimalHousingManager.SavingPath(IslandsDictionaryNames)
  fullName: Managers.Managers.AnimalHousingManager.SavingPath(IslandsDictionaryNames)
  type: Method
  source:
    id: SavingPath
    path: ''
    startLine: 42764
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  syntax:
    content: public string SavingPath(IslandsDictionaryNames currentIsland)
    parameters:
    - id: currentIsland
      type: Global.IslandsDictionaryNames
    return:
      type: System.String
    content.vb: Public Function SavingPath(currentIsland As IslandsDictionaryNames) As String
  overload: Managers.Managers.AnimalHousingManager.SavingPath*
- uid: Managers.Managers.AnimalHousingManager.AnimalHousings
  commentId: F:Managers.Managers.AnimalHousingManager.AnimalHousings
  id: AnimalHousings
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: AnimalHousings
  nameWithType: AnimalHousingManager.AnimalHousings
  fullName: Managers.Managers.AnimalHousingManager.AnimalHousings
  type: Field
  source:
    id: AnimalHousings
    path: ''
    startLine: 42768
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  syntax:
    content: public Dictionary<Vector2, AnimalHousingDictionary> AnimalHousings
    return:
      type: Global.Dictionary{Vector2,AnimalHousingDictionary}
    content.vb: Public AnimalHousings As Dictionary(Of Vector2, AnimalHousingDictionary)
- uid: Managers.Managers.AnimalHousingManager.Beehives
  commentId: F:Managers.Managers.AnimalHousingManager.Beehives
  id: Beehives
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: Beehives
  nameWithType: AnimalHousingManager.Beehives
  fullName: Managers.Managers.AnimalHousingManager.Beehives
  type: Field
  source:
    id: Beehives
    path: ''
    startLine: 42771
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  summary: 'For faster access to the hives '
  example: []
  syntax:
    content: public Dictionary<Vector2, BeeDictionary> Beehives
    return:
      type: Global.Dictionary{Vector2,BeeDictionary}
    content.vb: Public Beehives As Dictionary(Of Vector2, BeeDictionary)
- uid: Managers.Managers.AnimalHousingManager.GetAnimalHousingSide(Vector2)
  commentId: M:Managers.Managers.AnimalHousingManager.GetAnimalHousingSide(Vector2)
  id: GetAnimalHousingSide(Vector2)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: GetAnimalHousingSide(Vector2)
  nameWithType: AnimalHousingManager.GetAnimalHousingSide(Vector2)
  fullName: Managers.Managers.AnimalHousingManager.GetAnimalHousingSide(Vector2)
  type: Method
  source:
    id: GetAnimalHousingSide
    path: ''
    startLine: 42776
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  summary: "\nGet the side of the animalType housing based on its position\n"
  example: []
  syntax:
    content: public SideEnum GetAnimalHousingSide(Vector2 position)
    parameters:
    - id: position
      type: Global.Vector2
    return:
      type: Managers.SideEnum
    content.vb: Public Function GetAnimalHousingSide(position As Vector2) As SideEnum
  overload: Managers.Managers.AnimalHousingManager.GetAnimalHousingSide*
- uid: Managers.Managers.AnimalHousingManager.GetBeehive(Vector2)
  commentId: M:Managers.Managers.AnimalHousingManager.GetBeehive(Vector2)
  id: GetBeehive(Vector2)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: GetBeehive(Vector2)
  nameWithType: AnimalHousingManager.GetBeehive(Vector2)
  fullName: Managers.Managers.AnimalHousingManager.GetBeehive(Vector2)
  type: Method
  source:
    id: GetBeehive
    path: ''
    startLine: 42779
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  summary: 'Gets the be hive at the specified position '
  example: []
  syntax:
    content: public BeeDictionary GetBeehive(Vector2 position)
    parameters:
    - id: position
      type: Global.Vector2
    return:
      type: Global.BeeDictionary
    content.vb: Public Function GetBeehive(position As Vector2) As BeeDictionary
  overload: Managers.Managers.AnimalHousingManager.GetBeehive*
- uid: Managers.Managers.AnimalHousingManager.AddAnimalBuilding(Vector2,System.UInt16,MainAnimalsEnum,Managers.SideEnum)
  commentId: M:Managers.Managers.AnimalHousingManager.AddAnimalBuilding(Vector2,System.UInt16,MainAnimalsEnum,Managers.SideEnum)
  id: AddAnimalBuilding(Vector2,System.UInt16,MainAnimalsEnum,Managers.SideEnum)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: AddAnimalBuilding(Vector2, ushort, MainAnimalsEnum, SideEnum)
  nameWithType: AnimalHousingManager.AddAnimalBuilding(Vector2, ushort, MainAnimalsEnum, SideEnum)
  fullName: Managers.Managers.AnimalHousingManager.AddAnimalBuilding(Vector2, ushort, MainAnimalsEnum, Managers.SideEnum)
  type: Method
  source:
    id: AddAnimalBuilding
    path: ''
    startLine: 42788
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  summary: "\nAdds the new animal building\n"
  example: []
  syntax:
    content: public void AddAnimalBuilding(Vector2 position, ushort ID, MainAnimalsEnum animalType, SideEnum side = SideEnum.Down)
    parameters:
    - id: position
      type: Global.Vector2
    - id: ID
      type: System.UInt16
    - id: animalType
      type: Global.MainAnimalsEnum
    - id: side
      type: Managers.SideEnum
    content.vb: Public Sub AddAnimalBuilding(position As Vector2, ID As UShort, animalType As MainAnimalsEnum, side As SideEnum = SideEnum.Down)
  overload: Managers.Managers.AnimalHousingManager.AddAnimalBuilding*
  nameWithType.vb: AnimalHousingManager.AddAnimalBuilding(Vector2, UShort, MainAnimalsEnum, SideEnum)
  fullName.vb: Managers.Managers.AnimalHousingManager.AddAnimalBuilding(Vector2, UShort, MainAnimalsEnum, Managers.SideEnum)
  name.vb: AddAnimalBuilding(Vector2, UShort, MainAnimalsEnum, SideEnum)
- uid: Managers.Managers.AnimalHousingManager.CanBuyAnimal(MainAnimalsEnum)
  commentId: M:Managers.Managers.AnimalHousingManager.CanBuyAnimal(MainAnimalsEnum)
  id: CanBuyAnimal(MainAnimalsEnum)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: CanBuyAnimal(MainAnimalsEnum)
  nameWithType: AnimalHousingManager.CanBuyAnimal(MainAnimalsEnum)
  fullName: Managers.Managers.AnimalHousingManager.CanBuyAnimal(MainAnimalsEnum)
  type: Method
  source:
    id: CanBuyAnimal
    path: ''
    startLine: 42823
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  summary: "\nChecks if the animalType can be bought\n"
  example: []
  syntax:
    content: public bool CanBuyAnimal(MainAnimalsEnum animal)
    parameters:
    - id: animal
      type: Global.MainAnimalsEnum
      description: The animalType to check
    return:
      type: System.Boolean
    content.vb: Public Function CanBuyAnimal(animal As MainAnimalsEnum) As Boolean
  overload: Managers.Managers.AnimalHousingManager.CanBuyAnimal*
- uid: Managers.Managers.AnimalHousingManager.SpaceAmount(MainAnimalsEnum)
  commentId: M:Managers.Managers.AnimalHousingManager.SpaceAmount(MainAnimalsEnum)
  id: SpaceAmount(MainAnimalsEnum)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: SpaceAmount(MainAnimalsEnum)
  nameWithType: AnimalHousingManager.SpaceAmount(MainAnimalsEnum)
  fullName: Managers.Managers.AnimalHousingManager.SpaceAmount(MainAnimalsEnum)
  type: Method
  source:
    id: SpaceAmount
    path: ''
    startLine: 42834
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  summary: "\nChecks how many animals can be bought in all same-type animalType housing\n"
  example: []
  syntax:
    content: public ushort SpaceAmount(MainAnimalsEnum animal)
    parameters:
    - id: animal
      type: Global.MainAnimalsEnum
      description: The animalType to check
    return:
      type: System.UInt16
    content.vb: Public Function SpaceAmount(animal As MainAnimalsEnum) As UShort
  overload: Managers.Managers.AnimalHousingManager.SpaceAmount*
- uid: Managers.Managers.AnimalHousingManager.GetAnimalHousing(Vector2)
  commentId: M:Managers.Managers.AnimalHousingManager.GetAnimalHousing(Vector2)
  id: GetAnimalHousing(Vector2)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: GetAnimalHousing(Vector2)
  nameWithType: AnimalHousingManager.GetAnimalHousing(Vector2)
  fullName: Managers.Managers.AnimalHousingManager.GetAnimalHousing(Vector2)
  type: Method
  source:
    id: GetAnimalHousing
    path: ''
    startLine: 42844
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  summary: "\nGets the animalType housing at the specified position\n"
  example: []
  syntax:
    content: public AnimalHousingDictionary GetAnimalHousing(Vector2 position)
    parameters:
    - id: position
      type: Global.Vector2
    return:
      type: Global.AnimalHousingDictionary
    content.vb: Public Function GetAnimalHousing(position As Vector2) As AnimalHousingDictionary
  overload: Managers.Managers.AnimalHousingManager.GetAnimalHousing*
- uid: Managers.Managers.AnimalHousingManager.GetAnimalHousing(System.Int32)
  commentId: M:Managers.Managers.AnimalHousingManager.GetAnimalHousing(System.Int32)
  id: GetAnimalHousing(System.Int32)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: GetAnimalHousing(int)
  nameWithType: AnimalHousingManager.GetAnimalHousing(int)
  fullName: Managers.Managers.AnimalHousingManager.GetAnimalHousing(int)
  type: Method
  source:
    id: GetAnimalHousing
    path: ''
    startLine: 42846
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  syntax:
    content: public (AnimalSlot, AnimalHousingDictionary) GetAnimalHousing(int ID)
    parameters:
    - id: ID
      type: System.Int32
    return:
      type: System.ValueTuple{AnimalSlot,AnimalHousingDictionary}
    content.vb: Public Function GetAnimalHousing(ID As Integer) As (AnimalSlot, AnimalHousingDictionary)
  overload: Managers.Managers.AnimalHousingManager.GetAnimalHousing*
  nameWithType.vb: AnimalHousingManager.GetAnimalHousing(Integer)
  fullName.vb: Managers.Managers.AnimalHousingManager.GetAnimalHousing(Integer)
  name.vb: GetAnimalHousing(Integer)
- uid: Managers.Managers.AnimalHousingManager.FindHomeForAnimal(AnimalStage,MainAnimalsEnum,SecondaryAnimalsEnum,System.String,System.Boolean)
  commentId: M:Managers.Managers.AnimalHousingManager.FindHomeForAnimal(AnimalStage,MainAnimalsEnum,SecondaryAnimalsEnum,System.String,System.Boolean)
  id: FindHomeForAnimal(AnimalStage,MainAnimalsEnum,SecondaryAnimalsEnum,System.String,System.Boolean)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: FindHomeForAnimal(AnimalStage, MainAnimalsEnum, SecondaryAnimalsEnum, string, bool)
  nameWithType: AnimalHousingManager.FindHomeForAnimal(AnimalStage, MainAnimalsEnum, SecondaryAnimalsEnum, string, bool)
  fullName: Managers.Managers.AnimalHousingManager.FindHomeForAnimal(AnimalStage, MainAnimalsEnum, SecondaryAnimalsEnum, string, bool)
  type: Method
  source:
    id: FindHomeForAnimal
    path: ''
    startLine: 42864
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  summary: "\nFinds available spot and put the animal in there\n"
  example: []
  syntax:
    content: public GameObject FindHomeForAnimal(AnimalStage stage, MainAnimalsEnum animalType, SecondaryAnimalsEnum secondaryAnimalType, string name, bool spawnAnimal = false)
    parameters:
    - id: stage
      type: Global.AnimalStage
    - id: animalType
      type: Global.MainAnimalsEnum
    - id: secondaryAnimalType
      type: Global.SecondaryAnimalsEnum
    - id: name
      type: System.String
    - id: spawnAnimal
      type: System.Boolean
      description: Flag indicating whether to spawn the animal
    return:
      type: Global.GameObject
      description: Gameobject of the animal which was spawned {null if no animal was spawned}
    content.vb: Public Function FindHomeForAnimal(stage As AnimalStage, animalType As MainAnimalsEnum, secondaryAnimalType As SecondaryAnimalsEnum, name As String, spawnAnimal As Boolean = False) As GameObject
  overload: Managers.Managers.AnimalHousingManager.FindHomeForAnimal*
  nameWithType.vb: AnimalHousingManager.FindHomeForAnimal(AnimalStage, MainAnimalsEnum, SecondaryAnimalsEnum, String, Boolean)
  fullName.vb: Managers.Managers.AnimalHousingManager.FindHomeForAnimal(AnimalStage, MainAnimalsEnum, SecondaryAnimalsEnum, String, Boolean)
  name.vb: FindHomeForAnimal(AnimalStage, MainAnimalsEnum, SecondaryAnimalsEnum, String, Boolean)
- uid: Managers.Managers.AnimalHousingManager.GetAnimalSide(Vector2)
  commentId: M:Managers.Managers.AnimalHousingManager.GetAnimalSide(Vector2)
  id: GetAnimalSide(Vector2)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: GetAnimalSide(Vector2)
  nameWithType: AnimalHousingManager.GetAnimalSide(Vector2)
  fullName: Managers.Managers.AnimalHousingManager.GetAnimalSide(Vector2)
  type: Method
  source:
    id: GetAnimalSide
    path: ''
    startLine: 42875
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  summary: "\nGets the building side\n"
  example: []
  syntax:
    content: public SideEnum GetAnimalSide(Vector2 position)
    parameters:
    - id: position
      type: Global.Vector2
    return:
      type: Managers.SideEnum
    content.vb: Public Function GetAnimalSide(position As Vector2) As SideEnum
  overload: Managers.Managers.AnimalHousingManager.GetAnimalSide*
- uid: Managers.Managers.AnimalHousingManager.IsAnimalHungry(System.Int32)
  commentId: M:Managers.Managers.AnimalHousingManager.IsAnimalHungry(System.Int32)
  id: IsAnimalHungry(System.Int32)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: IsAnimalHungry(int)
  nameWithType: AnimalHousingManager.IsAnimalHungry(int)
  fullName: Managers.Managers.AnimalHousingManager.IsAnimalHungry(int)
  type: Method
  source:
    id: IsAnimalHungry
    path: ''
    startLine: 42881
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  summary: "\nReturns if the animal is hungry {based on its id}\n"
  example: []
  syntax:
    content: public bool IsAnimalHungry(int ID)
    parameters:
    - id: ID
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function IsAnimalHungry(ID As Integer) As Boolean
  overload: Managers.Managers.AnimalHousingManager.IsAnimalHungry*
  nameWithType.vb: AnimalHousingManager.IsAnimalHungry(Integer)
  fullName.vb: Managers.Managers.AnimalHousingManager.IsAnimalHungry(Integer)
  name.vb: IsAnimalHungry(Integer)
- uid: Managers.Managers.AnimalHousingManager.IsAnimalThirsty(System.Int32)
  commentId: M:Managers.Managers.AnimalHousingManager.IsAnimalThirsty(System.Int32)
  id: IsAnimalThirsty(System.Int32)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: IsAnimalThirsty(int)
  nameWithType: AnimalHousingManager.IsAnimalThirsty(int)
  fullName: Managers.Managers.AnimalHousingManager.IsAnimalThirsty(int)
  type: Method
  source:
    id: IsAnimalThirsty
    path: ''
    startLine: 42888
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  summary: Returns if the animal is thirsty {based on its id}
  example: []
  syntax:
    content: public bool IsAnimalThirsty(int ID)
    parameters:
    - id: ID
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function IsAnimalThirsty(ID As Integer) As Boolean
  overload: Managers.Managers.AnimalHousingManager.IsAnimalThirsty*
  nameWithType.vb: AnimalHousingManager.IsAnimalThirsty(Integer)
  fullName.vb: Managers.Managers.AnimalHousingManager.IsAnimalThirsty(Integer)
  name.vb: IsAnimalThirsty(Integer)
- uid: Managers.Managers.AnimalHousingManager.AnimalHousePosition(System.Int32)
  commentId: M:Managers.Managers.AnimalHousingManager.AnimalHousePosition(System.Int32)
  id: AnimalHousePosition(System.Int32)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: AnimalHousePosition(int)
  nameWithType: AnimalHousingManager.AnimalHousePosition(int)
  fullName: Managers.Managers.AnimalHousingManager.AnimalHousePosition(int)
  type: Method
  source:
    id: AnimalHousePosition
    path: ''
    startLine: 42902
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  summary: "\nReturns home position based on animal&apos;s id\n"
  example: []
  syntax:
    content: public Vector2 AnimalHousePosition(int animalID)
    parameters:
    - id: animalID
      type: System.Int32
    return:
      type: Global.Vector2
    content.vb: Public Function AnimalHousePosition(animalID As Integer) As Vector2
  overload: Managers.Managers.AnimalHousingManager.AnimalHousePosition*
  nameWithType.vb: AnimalHousingManager.AnimalHousePosition(Integer)
  fullName.vb: Managers.Managers.AnimalHousingManager.AnimalHousePosition(Integer)
  name.vb: AnimalHousePosition(Integer)
- uid: Managers.Managers.AnimalHousingManager.Save(IslandsDictionaryNames)
  commentId: M:Managers.Managers.AnimalHousingManager.Save(IslandsDictionaryNames)
  id: Save(IslandsDictionaryNames)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: Save(IslandsDictionaryNames)
  nameWithType: AnimalHousingManager.Save(IslandsDictionaryNames)
  fullName: Managers.Managers.AnimalHousingManager.Save(IslandsDictionaryNames)
  type: Method
  source:
    id: Save
    path: ''
    startLine: 42920
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  syntax:
    content: public UniTask Save(IslandsDictionaryNames curIsland)
    parameters:
    - id: curIsland
      type: Global.IslandsDictionaryNames
    return:
      type: Global.UniTask
    content.vb: Public Function Save(curIsland As IslandsDictionaryNames) As UniTask
  overload: Managers.Managers.AnimalHousingManager.Save*
- uid: Managers.Managers.AnimalHousingManager.Load(IslandsDictionaryNames)
  commentId: M:Managers.Managers.AnimalHousingManager.Load(IslandsDictionaryNames)
  id: Load(IslandsDictionaryNames)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: Load(IslandsDictionaryNames)
  nameWithType: AnimalHousingManager.Load(IslandsDictionaryNames)
  fullName: Managers.Managers.AnimalHousingManager.Load(IslandsDictionaryNames)
  type: Method
  source:
    id: Load
    path: ''
    startLine: 42932
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  syntax:
    content: public UniTask Load(IslandsDictionaryNames curIsland)
    parameters:
    - id: curIsland
      type: Global.IslandsDictionaryNames
    return:
      type: Global.UniTask
    content.vb: Public Function Load(curIsland As IslandsDictionaryNames) As UniTask
  overload: Managers.Managers.AnimalHousingManager.Load*
- uid: Managers.Managers.AnimalHousingManager.Initialize(IslandsDictionaryNames)
  commentId: M:Managers.Managers.AnimalHousingManager.Initialize(IslandsDictionaryNames)
  id: Initialize(IslandsDictionaryNames)
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: Initialize(IslandsDictionaryNames)
  nameWithType: AnimalHousingManager.Initialize(IslandsDictionaryNames)
  fullName: Managers.Managers.AnimalHousingManager.Initialize(IslandsDictionaryNames)
  type: Method
  source:
    id: Initialize
    path: ''
    startLine: 42958
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  syntax:
    content: public UniTask Initialize(IslandsDictionaryNames curIsland)
    parameters:
    - id: curIsland
      type: Global.IslandsDictionaryNames
    return:
      type: Global.UniTask
    content.vb: Public Function Initialize(curIsland As IslandsDictionaryNames) As UniTask
  overload: Managers.Managers.AnimalHousingManager.Initialize*
- uid: Managers.Managers.AnimalHousingManager.ClearDictionary
  commentId: M:Managers.Managers.AnimalHousingManager.ClearDictionary
  id: ClearDictionary
  parent: Managers.Managers.AnimalHousingManager
  langs:
  - csharp
  - vb
  name: ClearDictionary()
  nameWithType: AnimalHousingManager.ClearDictionary()
  fullName: Managers.Managers.AnimalHousingManager.ClearDictionary()
  type: Method
  source:
    id: ClearDictionary
    path: ''
    startLine: 42973
  assemblies:
  - cs.temp.dll
  namespace: Managers.Managers
  syntax:
    content: public void ClearDictionary()
    content.vb: Public Sub ClearDictionary()
  overload: Managers.Managers.AnimalHousingManager.ClearDictionary*
references:
- uid: Managers.Managers
  commentId: N:Managers.Managers
  name: Managers.Managers
  nameWithType: Managers.Managers
  fullName: Managers.Managers
  spec.csharp:
  - uid: Managers
    name: Managers
  - name: .
  - uid: Managers.Managers
    name: Managers
  spec.vb:
  - uid: Managers
    name: Managers
  - name: .
  - uid: Managers.Managers
    name: Managers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ISavableWithPath
  isExternal: true
  name: ISavableWithPath
  nameWithType: ISavableWithPath
  fullName: ISavableWithPath
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Managers.Managers.AnimalHousingManager.LastAvailableAnimalID*
  commentId: Overload:Managers.Managers.AnimalHousingManager.LastAvailableAnimalID
  name: LastAvailableAnimalID
  nameWithType: AnimalHousingManager.LastAvailableAnimalID
  fullName: Managers.Managers.AnimalHousingManager.LastAvailableAnimalID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Managers.Managers.AnimalHousingManager.Priority*
  commentId: Overload:Managers.Managers.AnimalHousingManager.Priority
  name: Priority
  nameWithType: AnimalHousingManager.Priority
  fullName: Managers.Managers.AnimalHousingManager.Priority
- uid: Managers.Managers.AnimalHousingManager.SavingPath*
  commentId: Overload:Managers.Managers.AnimalHousingManager.SavingPath
  name: SavingPath
  nameWithType: AnimalHousingManager.SavingPath
  fullName: Managers.Managers.AnimalHousingManager.SavingPath
- uid: Global.IslandsDictionaryNames
  isExternal: true
  name: IslandsDictionaryNames
  nameWithType: IslandsDictionaryNames
  fullName: IslandsDictionaryNames
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.Dictionary{Vector2,AnimalHousingDictionary}
  commentId: '!:Global.Dictionary{Vector2,AnimalHousingDictionary}'
  definition: Global.Dictionary`2
  name: Dictionary<Vector2, AnimalHousingDictionary>
  nameWithType: Dictionary<Vector2, AnimalHousingDictionary>
  fullName: Dictionary<Vector2, AnimalHousingDictionary>
  nameWithType.vb: Dictionary(Of Vector2, AnimalHousingDictionary)
  fullName.vb: Dictionary(Of Vector2, AnimalHousingDictionary)
  name.vb: Dictionary(Of Vector2, AnimalHousingDictionary)
  spec.csharp:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: Global.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.AnimalHousingDictionary
    name: AnimalHousingDictionary
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.AnimalHousingDictionary
    name: AnimalHousingDictionary
    isExternal: true
  - name: )
- uid: Global.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: )
- uid: Global.Dictionary{Vector2,BeeDictionary}
  commentId: '!:Global.Dictionary{Vector2,BeeDictionary}'
  definition: Global.Dictionary`2
  name: Dictionary<Vector2, BeeDictionary>
  nameWithType: Dictionary<Vector2, BeeDictionary>
  fullName: Dictionary<Vector2, BeeDictionary>
  nameWithType.vb: Dictionary(Of Vector2, BeeDictionary)
  fullName.vb: Dictionary(Of Vector2, BeeDictionary)
  name.vb: Dictionary(Of Vector2, BeeDictionary)
  spec.csharp:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: Global.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.BeeDictionary
    name: BeeDictionary
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.BeeDictionary
    name: BeeDictionary
    isExternal: true
  - name: )
- uid: Managers.Managers.AnimalHousingManager.GetAnimalHousingSide*
  commentId: Overload:Managers.Managers.AnimalHousingManager.GetAnimalHousingSide
  name: GetAnimalHousingSide
  nameWithType: AnimalHousingManager.GetAnimalHousingSide
  fullName: Managers.Managers.AnimalHousingManager.GetAnimalHousingSide
- uid: Global.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: Managers.SideEnum
  commentId: T:Managers.SideEnum
  parent: Managers
  name: SideEnum
  nameWithType: SideEnum
  fullName: Managers.SideEnum
- uid: Managers
  commentId: N:Managers
  name: Managers
  nameWithType: Managers
  fullName: Managers
- uid: Managers.Managers.AnimalHousingManager.GetBeehive*
  commentId: Overload:Managers.Managers.AnimalHousingManager.GetBeehive
  name: GetBeehive
  nameWithType: AnimalHousingManager.GetBeehive
  fullName: Managers.Managers.AnimalHousingManager.GetBeehive
- uid: Global.BeeDictionary
  isExternal: true
  name: BeeDictionary
  nameWithType: BeeDictionary
  fullName: BeeDictionary
- uid: Managers.Managers.AnimalHousingManager.AddAnimalBuilding*
  commentId: Overload:Managers.Managers.AnimalHousingManager.AddAnimalBuilding
  name: AddAnimalBuilding
  nameWithType: AnimalHousingManager.AddAnimalBuilding
  fullName: Managers.Managers.AnimalHousingManager.AddAnimalBuilding
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: Global.MainAnimalsEnum
  isExternal: true
  name: MainAnimalsEnum
  nameWithType: MainAnimalsEnum
  fullName: MainAnimalsEnum
- uid: Managers.Managers.AnimalHousingManager.CanBuyAnimal*
  commentId: Overload:Managers.Managers.AnimalHousingManager.CanBuyAnimal
  name: CanBuyAnimal
  nameWithType: AnimalHousingManager.CanBuyAnimal
  fullName: Managers.Managers.AnimalHousingManager.CanBuyAnimal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Managers.Managers.AnimalHousingManager.SpaceAmount*
  commentId: Overload:Managers.Managers.AnimalHousingManager.SpaceAmount
  name: SpaceAmount
  nameWithType: AnimalHousingManager.SpaceAmount
  fullName: Managers.Managers.AnimalHousingManager.SpaceAmount
- uid: Managers.Managers.AnimalHousingManager.GetAnimalHousing*
  commentId: Overload:Managers.Managers.AnimalHousingManager.GetAnimalHousing
  name: GetAnimalHousing
  nameWithType: AnimalHousingManager.GetAnimalHousing
  fullName: Managers.Managers.AnimalHousingManager.GetAnimalHousing
- uid: Global.AnimalHousingDictionary
  commentId: '!:Global.AnimalHousingDictionary'
  isExternal: true
  name: AnimalHousingDictionary
  nameWithType: AnimalHousingDictionary
  fullName: AnimalHousingDictionary
- uid: System.ValueTuple{AnimalSlot,AnimalHousingDictionary}
  commentId: T:System.ValueTuple{AnimalSlot,AnimalHousingDictionary}
  parent: System
  definition: System.ValueTuple`2
  name: (AnimalSlot, AnimalHousingDictionary)
  nameWithType: (AnimalSlot, AnimalHousingDictionary)
  fullName: (AnimalSlot, AnimalHousingDictionary)
  spec.csharp:
  - name: (
  - uid: Global.AnimalSlot
    name: AnimalSlot
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.AnimalHousingDictionary
    name: AnimalHousingDictionary
    isExternal: true
  - name: )
  spec.vb:
  - name: (
  - uid: Global.AnimalSlot
    name: AnimalSlot
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.AnimalHousingDictionary
    name: AnimalHousingDictionary
    isExternal: true
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Managers.Managers.AnimalHousingManager.FindHomeForAnimal*
  commentId: Overload:Managers.Managers.AnimalHousingManager.FindHomeForAnimal
  name: FindHomeForAnimal
  nameWithType: AnimalHousingManager.FindHomeForAnimal
  fullName: Managers.Managers.AnimalHousingManager.FindHomeForAnimal
- uid: Global.AnimalStage
  isExternal: true
  name: AnimalStage
  nameWithType: AnimalStage
  fullName: AnimalStage
- uid: Global.SecondaryAnimalsEnum
  isExternal: true
  name: SecondaryAnimalsEnum
  nameWithType: SecondaryAnimalsEnum
  fullName: SecondaryAnimalsEnum
- uid: Global.GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: Managers.Managers.AnimalHousingManager.GetAnimalSide*
  commentId: Overload:Managers.Managers.AnimalHousingManager.GetAnimalSide
  name: GetAnimalSide
  nameWithType: AnimalHousingManager.GetAnimalSide
  fullName: Managers.Managers.AnimalHousingManager.GetAnimalSide
- uid: Managers.Managers.AnimalHousingManager.IsAnimalHungry*
  commentId: Overload:Managers.Managers.AnimalHousingManager.IsAnimalHungry
  name: IsAnimalHungry
  nameWithType: AnimalHousingManager.IsAnimalHungry
  fullName: Managers.Managers.AnimalHousingManager.IsAnimalHungry
- uid: Managers.Managers.AnimalHousingManager.IsAnimalThirsty*
  commentId: Overload:Managers.Managers.AnimalHousingManager.IsAnimalThirsty
  name: IsAnimalThirsty
  nameWithType: AnimalHousingManager.IsAnimalThirsty
  fullName: Managers.Managers.AnimalHousingManager.IsAnimalThirsty
- uid: Managers.Managers.AnimalHousingManager.AnimalHousePosition*
  commentId: Overload:Managers.Managers.AnimalHousingManager.AnimalHousePosition
  name: AnimalHousePosition
  nameWithType: AnimalHousingManager.AnimalHousePosition
  fullName: Managers.Managers.AnimalHousingManager.AnimalHousePosition
- uid: Managers.Managers.AnimalHousingManager.Save*
  commentId: Overload:Managers.Managers.AnimalHousingManager.Save
  name: Save
  nameWithType: AnimalHousingManager.Save
  fullName: Managers.Managers.AnimalHousingManager.Save
- uid: Global.UniTask
  isExternal: true
  name: UniTask
  nameWithType: UniTask
  fullName: UniTask
- uid: Managers.Managers.AnimalHousingManager.Load*
  commentId: Overload:Managers.Managers.AnimalHousingManager.Load
  name: Load
  nameWithType: AnimalHousingManager.Load
  fullName: Managers.Managers.AnimalHousingManager.Load
- uid: Managers.Managers.AnimalHousingManager.Initialize*
  commentId: Overload:Managers.Managers.AnimalHousingManager.Initialize
  name: Initialize
  nameWithType: AnimalHousingManager.Initialize
  fullName: Managers.Managers.AnimalHousingManager.Initialize
- uid: Managers.Managers.AnimalHousingManager.ClearDictionary*
  commentId: Overload:Managers.Managers.AnimalHousingManager.ClearDictionary
  name: ClearDictionary
  nameWithType: AnimalHousingManager.ClearDictionary
  fullName: Managers.Managers.AnimalHousingManager.ClearDictionary
