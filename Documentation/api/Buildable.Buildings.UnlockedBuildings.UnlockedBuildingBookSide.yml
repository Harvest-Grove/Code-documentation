### YamlMime:ManagedReference
items:
- uid: Buildable.Buildings.UnlockedBuildings.UnlockedBuildingBookSide
  commentId: T:Buildable.Buildings.UnlockedBuildings.UnlockedBuildingBookSide
  id: UnlockedBuildingBookSide
  parent: Buildable.Buildings.UnlockedBuildings
  children:
  - Buildable.Buildings.UnlockedBuildings.UnlockedBuildingBookSide.ShowBuildings(List{System.UInt16},BuildableHolderSO)
  langs:
  - csharp
  - vb
  name: UnlockedBuildingBookSide
  nameWithType: UnlockedBuildingBookSide
  fullName: Buildable.Buildings.UnlockedBuildings.UnlockedBuildingBookSide
  type: Class
  source:
    id: UnlockedBuildingBookSide
    path: ''
    startLine: 30001
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Buildings.UnlockedBuildings
  syntax:
    content: 'public class UnlockedBuildingBookSide : MonoBehaviour'
    content.vb: Public Class UnlockedBuildingBookSide Inherits MonoBehaviour
  inheritance:
  - System.Object
- uid: Buildable.Buildings.UnlockedBuildings.UnlockedBuildingBookSide.ShowBuildings(List{System.UInt16},BuildableHolderSO)
  commentId: M:Buildable.Buildings.UnlockedBuildings.UnlockedBuildingBookSide.ShowBuildings(List{System.UInt16},BuildableHolderSO)
  id: ShowBuildings(List{System.UInt16},BuildableHolderSO)
  parent: Buildable.Buildings.UnlockedBuildings.UnlockedBuildingBookSide
  langs:
  - csharp
  - vb
  name: ShowBuildings(List<ushort>, BuildableHolderSO)
  nameWithType: UnlockedBuildingBookSide.ShowBuildings(List<ushort>, BuildableHolderSO)
  fullName: Buildable.Buildings.UnlockedBuildings.UnlockedBuildingBookSide.ShowBuildings(List<ushort>, BuildableHolderSO)
  type: Method
  source:
    id: ShowBuildings
    path: ''
    startLine: 30007
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Buildings.UnlockedBuildings
  syntax:
    content: public void ShowBuildings(List<ushort> ids, BuildableHolderSO buildable)
    parameters:
    - id: ids
      type: Global.List{System.UInt16}
    - id: buildable
      type: Global.BuildableHolderSO
    content.vb: Public Sub ShowBuildings(ids As List(Of UShort), buildable As BuildableHolderSO)
  overload: Buildable.Buildings.UnlockedBuildings.UnlockedBuildingBookSide.ShowBuildings*
  nameWithType.vb: UnlockedBuildingBookSide.ShowBuildings(List(Of UShort), BuildableHolderSO)
  fullName.vb: Buildable.Buildings.UnlockedBuildings.UnlockedBuildingBookSide.ShowBuildings(List(Of UShort), BuildableHolderSO)
  name.vb: ShowBuildings(List(Of UShort), BuildableHolderSO)
references:
- uid: Buildable.Buildings.UnlockedBuildings
  commentId: N:Buildable.Buildings.UnlockedBuildings
  name: Buildable.Buildings.UnlockedBuildings
  nameWithType: Buildable.Buildings.UnlockedBuildings
  fullName: Buildable.Buildings.UnlockedBuildings
  spec.csharp:
  - uid: Buildable
    name: Buildable
  - name: .
  - uid: Buildable.Buildings
    name: Buildings
  - name: .
  - uid: Buildable.Buildings.UnlockedBuildings
    name: UnlockedBuildings
  spec.vb:
  - uid: Buildable
    name: Buildable
  - name: .
  - uid: Buildable.Buildings
    name: Buildings
  - name: .
  - uid: Buildable.Buildings.UnlockedBuildings
    name: UnlockedBuildings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Buildable.Buildings.UnlockedBuildings.UnlockedBuildingBookSide.ShowBuildings*
  commentId: Overload:Buildable.Buildings.UnlockedBuildings.UnlockedBuildingBookSide.ShowBuildings
  name: ShowBuildings
  nameWithType: UnlockedBuildingBookSide.ShowBuildings
  fullName: Buildable.Buildings.UnlockedBuildings.UnlockedBuildingBookSide.ShowBuildings
- uid: Global.List{System.UInt16}
  commentId: '!:Global.List{System.UInt16}'
  definition: Global.List`1
  name: List<ushort>
  nameWithType: List<ushort>
  fullName: List<ushort>
  nameWithType.vb: List(Of UShort)
  fullName.vb: List(Of UShort)
  name.vb: List(Of UShort)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.UInt16
    name: ushort
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt16
    name: UShort
    isExternal: true
  - name: )
- uid: Global.BuildableHolderSO
  isExternal: true
  name: BuildableHolderSO
  nameWithType: BuildableHolderSO
  fullName: BuildableHolderSO
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
