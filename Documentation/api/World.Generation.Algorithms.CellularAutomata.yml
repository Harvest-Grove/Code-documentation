### YamlMime:ManagedReference
items:
- uid: World.Generation.Algorithms.CellularAutomata
  commentId: T:World.Generation.Algorithms.CellularAutomata
  id: CellularAutomata
  parent: World.Generation.Algorithms
  children:
  - World.Generation.Algorithms.CellularAutomata.Apply(World.Generation.TilemapStructure,IslandsDictionaryNames)
  - World.Generation.Algorithms.CellularAutomata.MinAlive
  - World.Generation.Algorithms.CellularAutomata.Repetitions
  - World.Generation.Algorithms.CellularAutomata.ReplaceByDominantTile
  - World.Generation.Algorithms.CellularAutomata.ReplacedBy
  - World.Generation.Algorithms.CellularAutomata.TargetTile
  langs:
  - csharp
  - vb
  name: CellularAutomata
  nameWithType: CellularAutomata
  fullName: World.Generation.Algorithms.CellularAutomata
  type: Class
  source:
    id: CellularAutomata
    path: ''
    startLine: 6196
  assemblies:
  - cs.temp.dll
  namespace: World.Generation.Algorithms
  syntax:
    content: 'public class CellularAutomata : AlgorithmBase'
    content.vb: Public Class CellularAutomata Inherits AlgorithmBase
  inheritance:
  - System.Object
  - World.Generation.Algorithms.AlgorithmBase
- uid: World.Generation.Algorithms.CellularAutomata.MinAlive
  commentId: F:World.Generation.Algorithms.CellularAutomata.MinAlive
  id: MinAlive
  parent: World.Generation.Algorithms.CellularAutomata
  langs:
  - csharp
  - vb
  name: MinAlive
  nameWithType: CellularAutomata.MinAlive
  fullName: World.Generation.Algorithms.CellularAutomata.MinAlive
  type: Field
  source:
    id: MinAlive
    path: ''
    startLine: 6199
  assemblies:
  - cs.temp.dll
  namespace: World.Generation.Algorithms
  syntax:
    content: public int MinAlive
    return:
      type: System.Int32
    content.vb: Public MinAlive As Integer
- uid: World.Generation.Algorithms.CellularAutomata.Repetitions
  commentId: F:World.Generation.Algorithms.CellularAutomata.Repetitions
  id: Repetitions
  parent: World.Generation.Algorithms.CellularAutomata
  langs:
  - csharp
  - vb
  name: Repetitions
  nameWithType: CellularAutomata.Repetitions
  fullName: World.Generation.Algorithms.CellularAutomata.Repetitions
  type: Field
  source:
    id: Repetitions
    path: ''
    startLine: 6199
  assemblies:
  - cs.temp.dll
  namespace: World.Generation.Algorithms
  syntax:
    content: public int Repetitions
    return:
      type: System.Int32
    content.vb: Public Repetitions As Integer
- uid: World.Generation.Algorithms.CellularAutomata.ReplaceByDominantTile
  commentId: F:World.Generation.Algorithms.CellularAutomata.ReplaceByDominantTile
  id: ReplaceByDominantTile
  parent: World.Generation.Algorithms.CellularAutomata
  langs:
  - csharp
  - vb
  name: ReplaceByDominantTile
  nameWithType: CellularAutomata.ReplaceByDominantTile
  fullName: World.Generation.Algorithms.CellularAutomata.ReplaceByDominantTile
  type: Field
  source:
    id: ReplaceByDominantTile
    path: ''
    startLine: 6202
  assemblies:
  - cs.temp.dll
  namespace: World.Generation.Algorithms
  syntax:
    content: public bool ReplaceByDominantTile
    return:
      type: System.Boolean
    content.vb: Public ReplaceByDominantTile As Boolean
- uid: World.Generation.Algorithms.CellularAutomata.TargetTile
  commentId: F:World.Generation.Algorithms.CellularAutomata.TargetTile
  id: TargetTile
  parent: World.Generation.Algorithms.CellularAutomata
  langs:
  - csharp
  - vb
  name: TargetTile
  nameWithType: CellularAutomata.TargetTile
  fullName: World.Generation.Algorithms.CellularAutomata.TargetTile
  type: Field
  source:
    id: TargetTile
    path: ''
    startLine: 6204
  assemblies:
  - cs.temp.dll
  namespace: World.Generation.Algorithms
  syntax:
    content: public ObjectTileTypeEnum TargetTile
    return:
      type: Global.ObjectTileTypeEnum
    content.vb: Public TargetTile As ObjectTileTypeEnum
- uid: World.Generation.Algorithms.CellularAutomata.ReplacedBy
  commentId: F:World.Generation.Algorithms.CellularAutomata.ReplacedBy
  id: ReplacedBy
  parent: World.Generation.Algorithms.CellularAutomata
  langs:
  - csharp
  - vb
  name: ReplacedBy
  nameWithType: CellularAutomata.ReplacedBy
  fullName: World.Generation.Algorithms.CellularAutomata.ReplacedBy
  type: Field
  source:
    id: ReplacedBy
    path: ''
    startLine: 6204
  assemblies:
  - cs.temp.dll
  namespace: World.Generation.Algorithms
  syntax:
    content: public ObjectTileTypeEnum ReplacedBy
    return:
      type: Global.ObjectTileTypeEnum
    content.vb: Public ReplacedBy As ObjectTileTypeEnum
- uid: World.Generation.Algorithms.CellularAutomata.Apply(World.Generation.TilemapStructure,IslandsDictionaryNames)
  commentId: M:World.Generation.Algorithms.CellularAutomata.Apply(World.Generation.TilemapStructure,IslandsDictionaryNames)
  id: Apply(World.Generation.TilemapStructure,IslandsDictionaryNames)
  parent: World.Generation.Algorithms.CellularAutomata
  langs:
  - csharp
  - vb
  name: Apply(TilemapStructure, IslandsDictionaryNames)
  nameWithType: CellularAutomata.Apply(TilemapStructure, IslandsDictionaryNames)
  fullName: World.Generation.Algorithms.CellularAutomata.Apply(World.Generation.TilemapStructure, IslandsDictionaryNames)
  type: Method
  source:
    id: Apply
    path: ''
    startLine: 6206
  assemblies:
  - cs.temp.dll
  namespace: World.Generation.Algorithms
  syntax:
    content: public override void Apply(TilemapStructure tilemap, IslandsDictionaryNames currentIsland)
    parameters:
    - id: tilemap
      type: World.Generation.TilemapStructure
    - id: currentIsland
      type: Global.IslandsDictionaryNames
    content.vb: Public Overrides Sub Apply(tilemap As TilemapStructure, currentIsland As IslandsDictionaryNames)
  overridden: World.Generation.Algorithms.AlgorithmBase.Apply(World.Generation.TilemapStructure,IslandsDictionaryNames)
  overload: World.Generation.Algorithms.CellularAutomata.Apply*
references:
- uid: World.Generation.Algorithms
  commentId: N:World.Generation.Algorithms
  name: World.Generation.Algorithms
  nameWithType: World.Generation.Algorithms
  fullName: World.Generation.Algorithms
  spec.csharp:
  - uid: World
    name: World
  - name: .
  - uid: World.Generation
    name: Generation
  - name: .
  - uid: World.Generation.Algorithms
    name: Algorithms
  spec.vb:
  - uid: World
    name: World
  - name: .
  - uid: World.Generation
    name: Generation
  - name: .
  - uid: World.Generation.Algorithms
    name: Algorithms
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: World.Generation.Algorithms.AlgorithmBase
  commentId: T:World.Generation.Algorithms.AlgorithmBase
  parent: World.Generation.Algorithms
  name: AlgorithmBase
  nameWithType: AlgorithmBase
  fullName: World.Generation.Algorithms.AlgorithmBase
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ObjectTileTypeEnum
  isExternal: true
  name: ObjectTileTypeEnum
  nameWithType: ObjectTileTypeEnum
  fullName: ObjectTileTypeEnum
- uid: World.Generation.Algorithms.AlgorithmBase.Apply(World.Generation.TilemapStructure,IslandsDictionaryNames)
  commentId: M:World.Generation.Algorithms.AlgorithmBase.Apply(World.Generation.TilemapStructure,IslandsDictionaryNames)
  parent: World.Generation.Algorithms.AlgorithmBase
  isExternal: true
  name: Apply(TilemapStructure, IslandsDictionaryNames)
  nameWithType: AlgorithmBase.Apply(TilemapStructure, IslandsDictionaryNames)
  fullName: World.Generation.Algorithms.AlgorithmBase.Apply(World.Generation.TilemapStructure, IslandsDictionaryNames)
  spec.csharp:
  - uid: World.Generation.Algorithms.AlgorithmBase.Apply(World.Generation.TilemapStructure,IslandsDictionaryNames)
    name: Apply
  - name: (
  - uid: World.Generation.TilemapStructure
    name: TilemapStructure
  - name: ','
  - name: " "
  - uid: Global.IslandsDictionaryNames
    name: IslandsDictionaryNames
    isExternal: true
  - name: )
  spec.vb:
  - uid: World.Generation.Algorithms.AlgorithmBase.Apply(World.Generation.TilemapStructure,IslandsDictionaryNames)
    name: Apply
  - name: (
  - uid: World.Generation.TilemapStructure
    name: TilemapStructure
  - name: ','
  - name: " "
  - uid: Global.IslandsDictionaryNames
    name: IslandsDictionaryNames
    isExternal: true
  - name: )
- uid: World.Generation.Algorithms.CellularAutomata.Apply*
  commentId: Overload:World.Generation.Algorithms.CellularAutomata.Apply
  name: Apply
  nameWithType: CellularAutomata.Apply
  fullName: World.Generation.Algorithms.CellularAutomata.Apply
- uid: World.Generation.TilemapStructure
  commentId: T:World.Generation.TilemapStructure
  parent: World.Generation
  name: TilemapStructure
  nameWithType: TilemapStructure
  fullName: World.Generation.TilemapStructure
- uid: Global.IslandsDictionaryNames
  isExternal: true
  name: IslandsDictionaryNames
  nameWithType: IslandsDictionaryNames
  fullName: IslandsDictionaryNames
- uid: World.Generation
  commentId: N:World.Generation
  name: World.Generation
  nameWithType: World.Generation
  fullName: World.Generation
  spec.csharp:
  - uid: World
    name: World
  - name: .
  - uid: World.Generation
    name: Generation
  spec.vb:
  - uid: World
    name: World
  - name: .
  - uid: World.Generation
    name: Generation
