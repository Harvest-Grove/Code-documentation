### YamlMime:ManagedReference
items:
- uid: Buildable.BuildingSystem.PlacingHandeling
  commentId: T:Buildable.BuildingSystem.PlacingHandeling
  id: PlacingHandeling
  parent: Buildable.BuildingSystem
  children:
  - Buildable.BuildingSystem.PlacingHandeling.#ctor(IGameData,ITileMapService)
  - Buildable.BuildingSystem.PlacingHandeling.HandleCurrentBuilding(Buildable.BuildingSystem.PlacingBuilding)
  - Buildable.BuildingSystem.PlacingHandeling.HandleCurrentConstruction(Buildable.BuildingSystem.PlacingBuilding)
  langs:
  - csharp
  - vb
  name: PlacingHandeling
  nameWithType: PlacingHandeling
  fullName: Buildable.BuildingSystem.PlacingHandeling
  type: Class
  source:
    id: PlacingHandeling
    path: ''
    startLine: 30603
  assemblies:
  - cs.temp.dll
  namespace: Buildable.BuildingSystem
  syntax:
    content: public class PlacingHandeling
    content.vb: Public Class PlacingHandeling
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Buildable.BuildingSystem.PlacingHandeling.#ctor(IGameData,ITileMapService)
  commentId: M:Buildable.BuildingSystem.PlacingHandeling.#ctor(IGameData,ITileMapService)
  id: '#ctor(IGameData,ITileMapService)'
  parent: Buildable.BuildingSystem.PlacingHandeling
  langs:
  - csharp
  - vb
  name: PlacingHandeling(IGameData, ITileMapService)
  nameWithType: PlacingHandeling.PlacingHandeling(IGameData, ITileMapService)
  fullName: Buildable.BuildingSystem.PlacingHandeling.PlacingHandeling(IGameData, ITileMapService)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 30608
  assemblies:
  - cs.temp.dll
  namespace: Buildable.BuildingSystem
  syntax:
    content: public PlacingHandeling(IGameData gameData, ITileMapService tileMapService)
    parameters:
    - id: gameData
      type: Global.IGameData
    - id: tileMapService
      type: Global.ITileMapService
    content.vb: Public Sub New(gameData As IGameData, tileMapService As ITileMapService)
  overload: Buildable.BuildingSystem.PlacingHandeling.#ctor*
  nameWithType.vb: PlacingHandeling.New(IGameData, ITileMapService)
  fullName.vb: Buildable.BuildingSystem.PlacingHandeling.New(IGameData, ITileMapService)
  name.vb: New(IGameData, ITileMapService)
- uid: Buildable.BuildingSystem.PlacingHandeling.HandleCurrentBuilding(Buildable.BuildingSystem.PlacingBuilding)
  commentId: M:Buildable.BuildingSystem.PlacingHandeling.HandleCurrentBuilding(Buildable.BuildingSystem.PlacingBuilding)
  id: HandleCurrentBuilding(Buildable.BuildingSystem.PlacingBuilding)
  parent: Buildable.BuildingSystem.PlacingHandeling
  langs:
  - csharp
  - vb
  name: HandleCurrentBuilding(PlacingBuilding)
  nameWithType: PlacingHandeling.HandleCurrentBuilding(PlacingBuilding)
  fullName: Buildable.BuildingSystem.PlacingHandeling.HandleCurrentBuilding(Buildable.BuildingSystem.PlacingBuilding)
  type: Method
  source:
    id: HandleCurrentBuilding
    path: ''
    startLine: 30617
  assemblies:
  - cs.temp.dll
  namespace: Buildable.BuildingSystem
  summary: "\nHandles the current building based on its type\n"
  example: []
  syntax:
    content: public void HandleCurrentBuilding(PlacingBuilding placingBuilding)
    parameters:
    - id: placingBuilding
      type: Buildable.BuildingSystem.PlacingBuilding
    content.vb: Public Sub HandleCurrentBuilding(placingBuilding As PlacingBuilding)
  overload: Buildable.BuildingSystem.PlacingHandeling.HandleCurrentBuilding*
- uid: Buildable.BuildingSystem.PlacingHandeling.HandleCurrentConstruction(Buildable.BuildingSystem.PlacingBuilding)
  commentId: M:Buildable.BuildingSystem.PlacingHandeling.HandleCurrentConstruction(Buildable.BuildingSystem.PlacingBuilding)
  id: HandleCurrentConstruction(Buildable.BuildingSystem.PlacingBuilding)
  parent: Buildable.BuildingSystem.PlacingHandeling
  langs:
  - csharp
  - vb
  name: HandleCurrentConstruction(PlacingBuilding)
  nameWithType: PlacingHandeling.HandleCurrentConstruction(PlacingBuilding)
  fullName: Buildable.BuildingSystem.PlacingHandeling.HandleCurrentConstruction(Buildable.BuildingSystem.PlacingBuilding)
  type: Method
  source:
    id: HandleCurrentConstruction
    path: ''
    startLine: 30702
  assemblies:
  - cs.temp.dll
  namespace: Buildable.BuildingSystem
  summary: "\nHandles the current construction by building the construction and adding it to the mapSO\n"
  example: []
  syntax:
    content: public void HandleCurrentConstruction(PlacingBuilding placingBuilding)
    parameters:
    - id: placingBuilding
      type: Buildable.BuildingSystem.PlacingBuilding
    content.vb: Public Sub HandleCurrentConstruction(placingBuilding As PlacingBuilding)
  overload: Buildable.BuildingSystem.PlacingHandeling.HandleCurrentConstruction*
references:
- uid: Buildable.BuildingSystem
  commentId: N:Buildable.BuildingSystem
  name: Buildable.BuildingSystem
  nameWithType: Buildable.BuildingSystem
  fullName: Buildable.BuildingSystem
  spec.csharp:
  - uid: Buildable
    name: Buildable
  - name: .
  - uid: Buildable.BuildingSystem
    name: BuildingSystem
  spec.vb:
  - uid: Buildable
    name: Buildable
  - name: .
  - uid: Buildable.BuildingSystem
    name: BuildingSystem
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Buildable.BuildingSystem.PlacingHandeling.#ctor*
  commentId: Overload:Buildable.BuildingSystem.PlacingHandeling.#ctor
  name: PlacingHandeling
  nameWithType: PlacingHandeling.PlacingHandeling
  fullName: Buildable.BuildingSystem.PlacingHandeling.PlacingHandeling
  nameWithType.vb: PlacingHandeling.New
  fullName.vb: Buildable.BuildingSystem.PlacingHandeling.New
  name.vb: New
- uid: Global.IGameData
  isExternal: true
  name: IGameData
  nameWithType: IGameData
  fullName: IGameData
- uid: Global.ITileMapService
  isExternal: true
  name: ITileMapService
  nameWithType: ITileMapService
  fullName: ITileMapService
- uid: Buildable.BuildingSystem.PlacingHandeling.HandleCurrentBuilding*
  commentId: Overload:Buildable.BuildingSystem.PlacingHandeling.HandleCurrentBuilding
  name: HandleCurrentBuilding
  nameWithType: PlacingHandeling.HandleCurrentBuilding
  fullName: Buildable.BuildingSystem.PlacingHandeling.HandleCurrentBuilding
- uid: Buildable.BuildingSystem.PlacingBuilding
  commentId: T:Buildable.BuildingSystem.PlacingBuilding
  parent: Buildable.BuildingSystem
  name: PlacingBuilding
  nameWithType: PlacingBuilding
  fullName: Buildable.BuildingSystem.PlacingBuilding
- uid: Buildable.BuildingSystem.PlacingHandeling.HandleCurrentConstruction*
  commentId: Overload:Buildable.BuildingSystem.PlacingHandeling.HandleCurrentConstruction
  name: HandleCurrentConstruction
  nameWithType: PlacingHandeling.HandleCurrentConstruction
  fullName: Buildable.BuildingSystem.PlacingHandeling.HandleCurrentConstruction
