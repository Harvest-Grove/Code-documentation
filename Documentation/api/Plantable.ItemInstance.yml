### YamlMime:ManagedReference
items:
- uid: Plantable.ItemInstance
  commentId: T:Plantable.ItemInstance
  id: ItemInstance
  parent: Plantable
  children:
  - Plantable.ItemInstance.#ctor
  - Plantable.ItemInstance.#ctor(InventoryItemData)
  - Plantable.ItemInstance.Data
  langs:
  - csharp
  - vb
  name: ItemInstance
  nameWithType: ItemInstance
  fullName: Plantable.ItemInstance
  type: Class
  source:
    id: ItemInstance
    path: ''
    startLine: 33544
  assemblies:
  - cs.temp.dll
  namespace: Plantable
  syntax:
    content: public class ItemInstance
    content.vb: Public Class ItemInstance
  inheritance:
  - System.Object
  derivedClasses:
  - Plantable.ToolInstance
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Plantable.ItemInstance.Data
  commentId: P:Plantable.ItemInstance.Data
  id: Data
  parent: Plantable.ItemInstance
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: ItemInstance.Data
  fullName: Plantable.ItemInstance.Data
  type: Property
  source:
    id: Data
    path: ''
    startLine: 33546
  assemblies:
  - cs.temp.dll
  namespace: Plantable
  syntax:
    content: public InventoryItemData Data { get; set; }
    parameters: []
    return:
      type: Global.InventoryItemData
    content.vb: Public Property Data As InventoryItemData
  overload: Plantable.ItemInstance.Data*
- uid: Plantable.ItemInstance.#ctor(InventoryItemData)
  commentId: M:Plantable.ItemInstance.#ctor(InventoryItemData)
  id: '#ctor(InventoryItemData)'
  parent: Plantable.ItemInstance
  langs:
  - csharp
  - vb
  name: ItemInstance(InventoryItemData)
  nameWithType: ItemInstance.ItemInstance(InventoryItemData)
  fullName: Plantable.ItemInstance.ItemInstance(InventoryItemData)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 33548
  assemblies:
  - cs.temp.dll
  namespace: Plantable
  syntax:
    content: protected ItemInstance(InventoryItemData data)
    parameters:
    - id: data
      type: Global.InventoryItemData
    content.vb: Protected Sub New(data As InventoryItemData)
  overload: Plantable.ItemInstance.#ctor*
  nameWithType.vb: ItemInstance.New(InventoryItemData)
  fullName.vb: Plantable.ItemInstance.New(InventoryItemData)
  name.vb: New(InventoryItemData)
- uid: Plantable.ItemInstance.#ctor
  commentId: M:Plantable.ItemInstance.#ctor
  id: '#ctor'
  parent: Plantable.ItemInstance
  langs:
  - csharp
  - vb
  name: ItemInstance()
  nameWithType: ItemInstance.ItemInstance()
  fullName: Plantable.ItemInstance.ItemInstance()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 33553
  assemblies:
  - cs.temp.dll
  namespace: Plantable
  syntax:
    content: protected ItemInstance()
    content.vb: Protected Sub New()
  overload: Plantable.ItemInstance.#ctor*
  nameWithType.vb: ItemInstance.New()
  fullName.vb: Plantable.ItemInstance.New()
  name.vb: New()
references:
- uid: Plantable
  commentId: N:Plantable
  name: Plantable
  nameWithType: Plantable
  fullName: Plantable
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Plantable.ItemInstance.Data*
  commentId: Overload:Plantable.ItemInstance.Data
  name: Data
  nameWithType: ItemInstance.Data
  fullName: Plantable.ItemInstance.Data
- uid: Global.InventoryItemData
  isExternal: true
  name: InventoryItemData
  nameWithType: InventoryItemData
  fullName: InventoryItemData
- uid: Plantable.ItemInstance.#ctor*
  commentId: Overload:Plantable.ItemInstance.#ctor
  name: ItemInstance
  nameWithType: ItemInstance.ItemInstance
  fullName: Plantable.ItemInstance.ItemInstance
  nameWithType.vb: ItemInstance.New
  fullName.vb: Plantable.ItemInstance.New
  name.vb: New
