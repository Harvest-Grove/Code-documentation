### YamlMime:ManagedReference
items:
- uid: Global.SoundHelper
  commentId: T:Global.SoundHelper
  id: SoundHelper
  parent: Global
  children:
  - Global.SoundHelper.PlaySound(PLAYBACK_STATE,EventInstance)
  - Global.SoundHelper.StopSound(PLAYBACK_STATE,EventInstance)
  langs:
  - csharp
  - vb
  name: SoundHelper
  nameWithType: SoundHelper
  fullName: SoundHelper
  type: Class
  source:
    id: SoundHelper
    path: ''
    startLine: 47112
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nProvides helper methods for playing and stopping FMOD sound events\n"
  example: []
  syntax:
    content: public static class SoundHelper
    content.vb: Public Module SoundHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Global.SoundHelper.StopSound(PLAYBACK_STATE,EventInstance)
  commentId: M:Global.SoundHelper.StopSound(PLAYBACK_STATE,EventInstance)
  id: StopSound(PLAYBACK_STATE,EventInstance)
  parent: Global.SoundHelper
  langs:
  - csharp
  - vb
  name: StopSound(PLAYBACK_STATE, EventInstance)
  nameWithType: SoundHelper.StopSound(PLAYBACK_STATE, EventInstance)
  fullName: SoundHelper.StopSound(PLAYBACK_STATE, EventInstance)
  type: Method
  source:
    id: StopSound
    path: ''
    startLine: 47119
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nStops the given sound event if it is currently playing, allowing it to fade out.\n"
  example: []
  syntax:
    content: public static void StopSound(PLAYBACK_STATE state, EventInstance sound)
    parameters:
    - id: state
      type: Global.PLAYBACK_STATE
      description: The current playback state of the sound.
    - id: sound
      type: Global.EventInstance
      description: The FMOD event instance to stop.
    content.vb: Public Shared Sub StopSound(state As PLAYBACK_STATE, sound As EventInstance)
  overload: Global.SoundHelper.StopSound*
- uid: Global.SoundHelper.PlaySound(PLAYBACK_STATE,EventInstance)
  commentId: M:Global.SoundHelper.PlaySound(PLAYBACK_STATE,EventInstance)
  id: PlaySound(PLAYBACK_STATE,EventInstance)
  parent: Global.SoundHelper
  langs:
  - csharp
  - vb
  name: PlaySound(PLAYBACK_STATE, EventInstance)
  nameWithType: SoundHelper.PlaySound(PLAYBACK_STATE, EventInstance)
  fullName: SoundHelper.PlaySound(PLAYBACK_STATE, EventInstance)
  type: Method
  source:
    id: PlaySound
    path: ''
    startLine: 47131
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nStarts the given sound event if it is not already playing.\n"
  example: []
  syntax:
    content: public static void PlaySound(PLAYBACK_STATE state, EventInstance sound)
    parameters:
    - id: state
      type: Global.PLAYBACK_STATE
      description: The current playback state of the sound.
    - id: sound
      type: Global.EventInstance
      description: The FMOD event instance to play.
    content.vb: Public Shared Sub PlaySound(state As PLAYBACK_STATE, sound As EventInstance)
  overload: Global.SoundHelper.PlaySound*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.SoundHelper.StopSound*
  commentId: Overload:Global.SoundHelper.StopSound
  name: StopSound
  nameWithType: SoundHelper.StopSound
  fullName: SoundHelper.StopSound
- uid: Global.PLAYBACK_STATE
  isExternal: true
  name: PLAYBACK_STATE
  nameWithType: PLAYBACK_STATE
  fullName: PLAYBACK_STATE
- uid: Global.EventInstance
  isExternal: true
  name: EventInstance
  nameWithType: EventInstance
  fullName: EventInstance
- uid: Global.SoundHelper.PlaySound*
  commentId: Overload:Global.SoundHelper.PlaySound
  name: PlaySound
  nameWithType: SoundHelper.PlaySound
  fullName: SoundHelper.PlaySound
