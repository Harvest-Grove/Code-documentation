### YamlMime:ManagedReference
items:
- uid: Animals.UI.GiveItemsToHouses
  commentId: T:Animals.UI.GiveItemsToHouses
  id: GiveItemsToHouses
  parent: Animals.UI
  children:
  - Animals.UI.GiveItemsToHouses.GiveItems(AnimalHousingManager,AnimalsDatabase)
  langs:
  - csharp
  - vb
  name: GiveItemsToHouses
  nameWithType: GiveItemsToHouses
  fullName: Animals.UI.GiveItemsToHouses
  type: Class
  source:
    id: GiveItemsToHouses
    path: ''
    startLine: 28218
  assemblies:
  - cs.temp.dll
  namespace: Animals.UI
  syntax:
    content: >-
      [Serializable]

      public class GiveItemsToHouses
    content.vb: >-
      <Serializable>

      Public Class GiveItemsToHouses
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Animals.UI.GiveItemsToHouses.GiveItems(AnimalHousingManager,AnimalsDatabase)
  commentId: M:Animals.UI.GiveItemsToHouses.GiveItems(AnimalHousingManager,AnimalsDatabase)
  id: GiveItems(AnimalHousingManager,AnimalsDatabase)
  parent: Animals.UI.GiveItemsToHouses
  langs:
  - csharp
  - vb
  name: GiveItems(AnimalHousingManager, AnimalsDatabase)
  nameWithType: GiveItemsToHouses.GiveItems(AnimalHousingManager, AnimalsDatabase)
  fullName: Animals.UI.GiveItemsToHouses.GiveItems(AnimalHousingManager, AnimalsDatabase)
  type: Method
  source:
    id: GiveItems
    path: ''
    startLine: 28224
  assemblies:
  - cs.temp.dll
  namespace: Animals.UI
  summary: "\nIterates over all animal housings and animals and give the items which animals should give\n"
  example: []
  syntax:
    content: public UniTask GiveItems(AnimalHousingManager animalHousingManager, AnimalsDatabase animalsDatabase)
    parameters:
    - id: animalHousingManager
      type: Global.AnimalHousingManager
    - id: animalsDatabase
      type: Global.AnimalsDatabase
    return:
      type: Global.UniTask
    content.vb: Public Function GiveItems(animalHousingManager As AnimalHousingManager, animalsDatabase As AnimalsDatabase) As UniTask
  overload: Animals.UI.GiveItemsToHouses.GiveItems*
references:
- uid: Animals.UI
  commentId: N:Animals.UI
  name: Animals.UI
  nameWithType: Animals.UI
  fullName: Animals.UI
  spec.csharp:
  - uid: Animals
    name: Animals
  - name: .
  - uid: Animals.UI
    name: UI
  spec.vb:
  - uid: Animals
    name: Animals
  - name: .
  - uid: Animals.UI
    name: UI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Animals.UI.GiveItemsToHouses.GiveItems*
  commentId: Overload:Animals.UI.GiveItemsToHouses.GiveItems
  name: GiveItems
  nameWithType: GiveItemsToHouses.GiveItems
  fullName: Animals.UI.GiveItemsToHouses.GiveItems
- uid: Global.AnimalHousingManager
  isExternal: true
  name: AnimalHousingManager
  nameWithType: AnimalHousingManager
  fullName: AnimalHousingManager
- uid: Global.AnimalsDatabase
  isExternal: true
  name: AnimalsDatabase
  nameWithType: AnimalsDatabase
  fullName: AnimalsDatabase
- uid: Global.UniTask
  isExternal: true
  name: UniTask
  nameWithType: UniTask
  fullName: UniTask
