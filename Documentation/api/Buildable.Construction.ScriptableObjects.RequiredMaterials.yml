### YamlMime:ManagedReference
items:
- uid: Buildable.Construction.ScriptableObjects.RequiredMaterials
  commentId: T:Buildable.Construction.ScriptableObjects.RequiredMaterials
  id: RequiredMaterials
  parent: Buildable.Construction.ScriptableObjects
  children:
  - Buildable.Construction.ScriptableObjects.RequiredMaterials.#ctor(InventoryItemData,MaterialType,System.Byte)
  - Buildable.Construction.ScriptableObjects.RequiredMaterials.#ctor(InventoryItemData,System.Byte)
  - Buildable.Construction.ScriptableObjects.RequiredMaterials.#ctor(MaterialType,System.Byte,System.Int32)
  - Buildable.Construction.ScriptableObjects.RequiredMaterials.Amount
  - Buildable.Construction.ScriptableObjects.RequiredMaterials.Construct(IManagerData)
  - Buildable.Construction.ScriptableObjects.RequiredMaterials.ItemID
  - Buildable.Construction.ScriptableObjects.RequiredMaterials.Material
  - Buildable.Construction.ScriptableObjects.RequiredMaterials.MaterialType
  langs:
  - csharp
  - vb
  name: RequiredMaterials
  nameWithType: RequiredMaterials
  fullName: Buildable.Construction.ScriptableObjects.RequiredMaterials
  type: Class
  source:
    id: RequiredMaterials
    path: ''
    startLine: 32336
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Construction.ScriptableObjects
  summary: "\nThis class represents a required material for a construction (material type + amount)\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class RequiredMaterials
    content.vb: >-
      <Serializable>

      Public Class RequiredMaterials
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Buildable.Construction.ScriptableObjects.RequiredMaterials.Material
  commentId: F:Buildable.Construction.ScriptableObjects.RequiredMaterials.Material
  id: Material
  parent: Buildable.Construction.ScriptableObjects.RequiredMaterials
  langs:
  - csharp
  - vb
  name: Material
  nameWithType: RequiredMaterials.Material
  fullName: Buildable.Construction.ScriptableObjects.RequiredMaterials.Material
  type: Field
  source:
    id: Material
    path: ''
    startLine: 32340
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Construction.ScriptableObjects
  syntax:
    content: public InventoryItemData Material
    return:
      type: Global.InventoryItemData
    content.vb: Public Material As InventoryItemData
- uid: Buildable.Construction.ScriptableObjects.RequiredMaterials.MaterialType
  commentId: F:Buildable.Construction.ScriptableObjects.RequiredMaterials.MaterialType
  id: MaterialType
  parent: Buildable.Construction.ScriptableObjects.RequiredMaterials
  langs:
  - csharp
  - vb
  name: MaterialType
  nameWithType: RequiredMaterials.MaterialType
  fullName: Buildable.Construction.ScriptableObjects.RequiredMaterials.MaterialType
  type: Field
  source:
    id: MaterialType
    path: ''
    startLine: 32343
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Construction.ScriptableObjects
  syntax:
    content: public MaterialType MaterialType
    return:
      type: Global.MaterialType
    content.vb: Public MaterialType As MaterialType
- uid: Buildable.Construction.ScriptableObjects.RequiredMaterials.ItemID
  commentId: F:Buildable.Construction.ScriptableObjects.RequiredMaterials.ItemID
  id: ItemID
  parent: Buildable.Construction.ScriptableObjects.RequiredMaterials
  langs:
  - csharp
  - vb
  name: ItemID
  nameWithType: RequiredMaterials.ItemID
  fullName: Buildable.Construction.ScriptableObjects.RequiredMaterials.ItemID
  type: Field
  source:
    id: ItemID
    path: ''
    startLine: 32345
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Construction.ScriptableObjects
  syntax:
    content: public int ItemID
    return:
      type: System.Int32
    content.vb: Public ItemID As Integer
- uid: Buildable.Construction.ScriptableObjects.RequiredMaterials.Amount
  commentId: F:Buildable.Construction.ScriptableObjects.RequiredMaterials.Amount
  id: Amount
  parent: Buildable.Construction.ScriptableObjects.RequiredMaterials
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: RequiredMaterials.Amount
  fullName: Buildable.Construction.ScriptableObjects.RequiredMaterials.Amount
  type: Field
  source:
    id: Amount
    path: ''
    startLine: 32347
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Construction.ScriptableObjects
  syntax:
    content: public byte Amount
    return:
      type: System.Byte
    content.vb: Public Amount As Byte
- uid: Buildable.Construction.ScriptableObjects.RequiredMaterials.Construct(IManagerData)
  commentId: M:Buildable.Construction.ScriptableObjects.RequiredMaterials.Construct(IManagerData)
  id: Construct(IManagerData)
  parent: Buildable.Construction.ScriptableObjects.RequiredMaterials
  langs:
  - csharp
  - vb
  name: Construct(IManagerData)
  nameWithType: RequiredMaterials.Construct(IManagerData)
  fullName: Buildable.Construction.ScriptableObjects.RequiredMaterials.Construct(IManagerData)
  type: Method
  source:
    id: Construct
    path: ''
    startLine: 32352
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Construction.ScriptableObjects
  syntax:
    content: public void Construct(IManagerData gameData)
    parameters:
    - id: gameData
      type: Global.IManagerData
    content.vb: Public Sub Construct(gameData As IManagerData)
  overload: Buildable.Construction.ScriptableObjects.RequiredMaterials.Construct*
- uid: Buildable.Construction.ScriptableObjects.RequiredMaterials.#ctor(InventoryItemData,System.Byte)
  commentId: M:Buildable.Construction.ScriptableObjects.RequiredMaterials.#ctor(InventoryItemData,System.Byte)
  id: '#ctor(InventoryItemData,System.Byte)'
  parent: Buildable.Construction.ScriptableObjects.RequiredMaterials
  langs:
  - csharp
  - vb
  name: RequiredMaterials(InventoryItemData, byte)
  nameWithType: RequiredMaterials.RequiredMaterials(InventoryItemData, byte)
  fullName: Buildable.Construction.ScriptableObjects.RequiredMaterials.RequiredMaterials(InventoryItemData, byte)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 32357
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Construction.ScriptableObjects
  syntax:
    content: public RequiredMaterials(InventoryItemData item, byte amount)
    parameters:
    - id: item
      type: Global.InventoryItemData
    - id: amount
      type: System.Byte
    content.vb: Public Sub New(item As InventoryItemData, amount As Byte)
  overload: Buildable.Construction.ScriptableObjects.RequiredMaterials.#ctor*
  nameWithType.vb: RequiredMaterials.New(InventoryItemData, Byte)
  fullName.vb: Buildable.Construction.ScriptableObjects.RequiredMaterials.New(InventoryItemData, Byte)
  name.vb: New(InventoryItemData, Byte)
- uid: Buildable.Construction.ScriptableObjects.RequiredMaterials.#ctor(InventoryItemData,MaterialType,System.Byte)
  commentId: M:Buildable.Construction.ScriptableObjects.RequiredMaterials.#ctor(InventoryItemData,MaterialType,System.Byte)
  id: '#ctor(InventoryItemData,MaterialType,System.Byte)'
  parent: Buildable.Construction.ScriptableObjects.RequiredMaterials
  langs:
  - csharp
  - vb
  name: RequiredMaterials(InventoryItemData, MaterialType, byte)
  nameWithType: RequiredMaterials.RequiredMaterials(InventoryItemData, MaterialType, byte)
  fullName: Buildable.Construction.ScriptableObjects.RequiredMaterials.RequiredMaterials(InventoryItemData, MaterialType, byte)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 32364
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Construction.ScriptableObjects
  syntax:
    content: public RequiredMaterials(InventoryItemData item, MaterialType material, byte amount)
    parameters:
    - id: item
      type: Global.InventoryItemData
    - id: material
      type: Global.MaterialType
    - id: amount
      type: System.Byte
    content.vb: Public Sub New(item As InventoryItemData, material As MaterialType, amount As Byte)
  overload: Buildable.Construction.ScriptableObjects.RequiredMaterials.#ctor*
  nameWithType.vb: RequiredMaterials.New(InventoryItemData, MaterialType, Byte)
  fullName.vb: Buildable.Construction.ScriptableObjects.RequiredMaterials.New(InventoryItemData, MaterialType, Byte)
  name.vb: New(InventoryItemData, MaterialType, Byte)
- uid: Buildable.Construction.ScriptableObjects.RequiredMaterials.#ctor(MaterialType,System.Byte,System.Int32)
  commentId: M:Buildable.Construction.ScriptableObjects.RequiredMaterials.#ctor(MaterialType,System.Byte,System.Int32)
  id: '#ctor(MaterialType,System.Byte,System.Int32)'
  parent: Buildable.Construction.ScriptableObjects.RequiredMaterials
  langs:
  - csharp
  - vb
  name: RequiredMaterials(MaterialType, byte, int)
  nameWithType: RequiredMaterials.RequiredMaterials(MaterialType, byte, int)
  fullName: Buildable.Construction.ScriptableObjects.RequiredMaterials.RequiredMaterials(MaterialType, byte, int)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 32372
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Construction.ScriptableObjects
  syntax:
    content: public RequiredMaterials(MaterialType material, byte amount, int itemID)
    parameters:
    - id: material
      type: Global.MaterialType
    - id: amount
      type: System.Byte
    - id: itemID
      type: System.Int32
    content.vb: Public Sub New(material As MaterialType, amount As Byte, itemID As Integer)
  overload: Buildable.Construction.ScriptableObjects.RequiredMaterials.#ctor*
  nameWithType.vb: RequiredMaterials.New(MaterialType, Byte, Integer)
  fullName.vb: Buildable.Construction.ScriptableObjects.RequiredMaterials.New(MaterialType, Byte, Integer)
  name.vb: New(MaterialType, Byte, Integer)
references:
- uid: Buildable.Construction.ScriptableObjects
  commentId: N:Buildable.Construction.ScriptableObjects
  name: Buildable.Construction.ScriptableObjects
  nameWithType: Buildable.Construction.ScriptableObjects
  fullName: Buildable.Construction.ScriptableObjects
  spec.csharp:
  - uid: Buildable
    name: Buildable
  - name: .
  - uid: Buildable.Construction
    name: Construction
  - name: .
  - uid: Buildable.Construction.ScriptableObjects
    name: ScriptableObjects
  spec.vb:
  - uid: Buildable
    name: Buildable
  - name: .
  - uid: Buildable.Construction
    name: Construction
  - name: .
  - uid: Buildable.Construction.ScriptableObjects
    name: ScriptableObjects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.InventoryItemData
  isExternal: true
  name: InventoryItemData
  nameWithType: InventoryItemData
  fullName: InventoryItemData
- uid: Global.MaterialType
  isExternal: true
  name: MaterialType
  nameWithType: MaterialType
  fullName: MaterialType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: Buildable.Construction.ScriptableObjects.RequiredMaterials.Construct*
  commentId: Overload:Buildable.Construction.ScriptableObjects.RequiredMaterials.Construct
  name: Construct
  nameWithType: RequiredMaterials.Construct
  fullName: Buildable.Construction.ScriptableObjects.RequiredMaterials.Construct
- uid: Global.IManagerData
  isExternal: true
  name: IManagerData
  nameWithType: IManagerData
  fullName: IManagerData
- uid: Buildable.Construction.ScriptableObjects.RequiredMaterials.#ctor*
  commentId: Overload:Buildable.Construction.ScriptableObjects.RequiredMaterials.#ctor
  name: RequiredMaterials
  nameWithType: RequiredMaterials.RequiredMaterials
  fullName: Buildable.Construction.ScriptableObjects.RequiredMaterials.RequiredMaterials
  nameWithType.vb: RequiredMaterials.New
  fullName.vb: Buildable.Construction.ScriptableObjects.RequiredMaterials.New
  name.vb: New
