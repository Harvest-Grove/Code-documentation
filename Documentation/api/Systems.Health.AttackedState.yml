### YamlMime:ManagedReference
items:
- uid: Systems.Health.AttackedState
  commentId: T:Systems.Health.AttackedState
  id: AttackedState
  parent: Systems.Health
  children:
  - Systems.Health.AttackedState.#ctor(Systems.Health.PlayerHealth)
  - Systems.Health.AttackedState.InAttackMode(System.Single,InputAction)
  - Systems.Health.AttackedState.OnShowText
  langs:
  - csharp
  - vb
  name: AttackedState
  nameWithType: AttackedState
  fullName: Systems.Health.AttackedState
  type: Class
  source:
    id: AttackedState
    path: ''
    startLine: 25985
  assemblies:
  - cs.temp.dll
  namespace: Systems.Health
  syntax:
    content: public class AttackedState
    content.vb: Public Class AttackedState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Systems.Health.AttackedState.OnShowText
  commentId: F:Systems.Health.AttackedState.OnShowText
  id: OnShowText
  parent: Systems.Health.AttackedState
  langs:
  - csharp
  - vb
  name: OnShowText
  nameWithType: AttackedState.OnShowText
  fullName: Systems.Health.AttackedState.OnShowText
  type: Field
  source:
    id: OnShowText
    path: ''
    startLine: 25989
  assemblies:
  - cs.temp.dll
  namespace: Systems.Health
  syntax:
    content: public static Action<bool> OnShowText
    return:
      type: Global.Action{System.Boolean}
    content.vb: Public Shared OnShowText As Action(Of Boolean)
- uid: Systems.Health.AttackedState.#ctor(Systems.Health.PlayerHealth)
  commentId: M:Systems.Health.AttackedState.#ctor(Systems.Health.PlayerHealth)
  id: '#ctor(Systems.Health.PlayerHealth)'
  parent: Systems.Health.AttackedState
  langs:
  - csharp
  - vb
  name: AttackedState(PlayerHealth)
  nameWithType: AttackedState.AttackedState(PlayerHealth)
  fullName: Systems.Health.AttackedState.AttackedState(Systems.Health.PlayerHealth)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 25994
  assemblies:
  - cs.temp.dll
  namespace: Systems.Health
  syntax:
    content: public AttackedState(PlayerHealth playerHealth)
    parameters:
    - id: playerHealth
      type: Systems.Health.PlayerHealth
    content.vb: Public Sub New(playerHealth As PlayerHealth)
  overload: Systems.Health.AttackedState.#ctor*
  nameWithType.vb: AttackedState.New(PlayerHealth)
  fullName.vb: Systems.Health.AttackedState.New(Systems.Health.PlayerHealth)
  name.vb: New(PlayerHealth)
- uid: Systems.Health.AttackedState.InAttackMode(System.Single,InputAction)
  commentId: M:Systems.Health.AttackedState.InAttackMode(System.Single,InputAction)
  id: InAttackMode(System.Single,InputAction)
  parent: Systems.Health.AttackedState
  langs:
  - csharp
  - vb
  name: InAttackMode(float, InputAction)
  nameWithType: AttackedState.InAttackMode(float, InputAction)
  fullName: Systems.Health.AttackedState.InAttackMode(float, InputAction)
  type: Method
  source:
    id: InAttackMode
    path: ''
    startLine: 25999
  assemblies:
  - cs.temp.dll
  namespace: Systems.Health
  syntax:
    content: public UniTask InAttackMode(float attackModeTime, InputAction pauseAction)
    parameters:
    - id: attackModeTime
      type: System.Single
    - id: pauseAction
      type: Global.InputAction
    return:
      type: Global.UniTask
    content.vb: Public Function InAttackMode(attackModeTime As Single, pauseAction As InputAction) As UniTask
  overload: Systems.Health.AttackedState.InAttackMode*
  nameWithType.vb: AttackedState.InAttackMode(Single, InputAction)
  fullName.vb: Systems.Health.AttackedState.InAttackMode(Single, InputAction)
  name.vb: InAttackMode(Single, InputAction)
references:
- uid: Systems.Health
  commentId: N:Systems.Health
  name: Systems.Health
  nameWithType: Systems.Health
  fullName: Systems.Health
  spec.csharp:
  - uid: Systems
    name: Systems
  - name: .
  - uid: Systems.Health
    name: Health
  spec.vb:
  - uid: Systems
    name: Systems
  - name: .
  - uid: Systems.Health
    name: Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Action{System.Boolean}
  commentId: '!:Global.Action{System.Boolean}'
  definition: Global.Action`1
  name: Action<bool>
  nameWithType: Action<bool>
  fullName: Action<bool>
  nameWithType.vb: Action(Of Boolean)
  fullName.vb: Action(Of Boolean)
  name.vb: Action(Of Boolean)
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Systems.Health.AttackedState.#ctor*
  commentId: Overload:Systems.Health.AttackedState.#ctor
  name: AttackedState
  nameWithType: AttackedState.AttackedState
  fullName: Systems.Health.AttackedState.AttackedState
  nameWithType.vb: AttackedState.New
  fullName.vb: Systems.Health.AttackedState.New
  name.vb: New
- uid: Systems.Health.PlayerHealth
  commentId: T:Systems.Health.PlayerHealth
  parent: Systems.Health
  name: PlayerHealth
  nameWithType: PlayerHealth
  fullName: Systems.Health.PlayerHealth
- uid: Systems.Health.AttackedState.InAttackMode*
  commentId: Overload:Systems.Health.AttackedState.InAttackMode
  name: InAttackMode
  nameWithType: AttackedState.InAttackMode
  fullName: Systems.Health.AttackedState.InAttackMode
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.InputAction
  isExternal: true
  name: InputAction
  nameWithType: InputAction
  fullName: InputAction
- uid: Global.UniTask
  isExternal: true
  name: UniTask
  nameWithType: UniTask
  fullName: UniTask
