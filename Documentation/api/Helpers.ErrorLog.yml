### YamlMime:ManagedReference
items:
- uid: Helpers.ErrorLog
  commentId: T:Helpers.ErrorLog
  id: ErrorLog
  parent: Helpers
  children:
  - Helpers.ErrorLog.CreateErrorLog(Exception,WorldDataSO)
  - Helpers.ErrorLog.ErrorLogPath
  langs:
  - csharp
  - vb
  name: ErrorLog
  nameWithType: ErrorLog
  fullName: Helpers.ErrorLog
  type: Class
  source:
    id: ErrorLog
    path: ''
    startLine: 44013
  assemblies:
  - cs.temp.dll
  namespace: Helpers
  syntax:
    content: public static class ErrorLog
    content.vb: Public Module ErrorLog
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Helpers.ErrorLog.ErrorLogPath
  commentId: P:Helpers.ErrorLog.ErrorLogPath
  id: ErrorLogPath
  parent: Helpers.ErrorLog
  langs:
  - csharp
  - vb
  name: ErrorLogPath
  nameWithType: ErrorLog.ErrorLogPath
  fullName: Helpers.ErrorLog.ErrorLogPath
  type: Property
  source:
    id: ErrorLogPath
    path: ''
    startLine: 44015
  assemblies:
  - cs.temp.dll
  namespace: Helpers
  syntax:
    content: public static string ErrorLogPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property ErrorLogPath As String
  overload: Helpers.ErrorLog.ErrorLogPath*
- uid: Helpers.ErrorLog.CreateErrorLog(Exception,WorldDataSO)
  commentId: M:Helpers.ErrorLog.CreateErrorLog(Exception,WorldDataSO)
  id: CreateErrorLog(Exception,WorldDataSO)
  parent: Helpers.ErrorLog
  langs:
  - csharp
  - vb
  name: CreateErrorLog(Exception, WorldDataSO)
  nameWithType: ErrorLog.CreateErrorLog(Exception, WorldDataSO)
  fullName: Helpers.ErrorLog.CreateErrorLog(Exception, WorldDataSO)
  type: Method
  source:
    id: CreateErrorLog
    path: ''
    startLine: 44023
  assemblies:
  - cs.temp.dll
  namespace: Helpers
  summary: "\nCreates an error log with the details of the provided exception and optional WorldDataSO instance\nIf a WorldDataSO instance is provided, its data will appear to the error log\n"
  example: []
  syntax:
    content: public static void CreateErrorLog(Exception ex, WorldDataSO so = null)
    parameters:
    - id: ex
      type: Global.Exception
      description: The exception for which the error log is being created
    - id: so
      type: Global.WorldDataSO
      description: Optional. The WorldDataSO instance containing additional data to be logged
    content.vb: Public Shared Sub CreateErrorLog(ex As Exception, so As WorldDataSO = Nothing)
  overload: Helpers.ErrorLog.CreateErrorLog*
references:
- uid: Helpers
  commentId: N:Helpers
  name: Helpers
  nameWithType: Helpers
  fullName: Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Helpers.ErrorLog.ErrorLogPath*
  commentId: Overload:Helpers.ErrorLog.ErrorLogPath
  name: ErrorLogPath
  nameWithType: ErrorLog.ErrorLogPath
  fullName: Helpers.ErrorLog.ErrorLogPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Helpers.ErrorLog.CreateErrorLog*
  commentId: Overload:Helpers.ErrorLog.CreateErrorLog
  name: CreateErrorLog
  nameWithType: ErrorLog.CreateErrorLog
  fullName: Helpers.ErrorLog.CreateErrorLog
- uid: Global.Exception
  commentId: '!:Global.Exception'
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: Global.WorldDataSO
  isExternal: true
  name: WorldDataSO
  nameWithType: WorldDataSO
  fullName: WorldDataSO
