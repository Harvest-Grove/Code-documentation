### YamlMime:ManagedReference
items:
- uid: Buildable.Construction.ScriptableObjects.SideSprites
  commentId: T:Buildable.Construction.ScriptableObjects.SideSprites
  id: SideSprites
  parent: Buildable.Construction.ScriptableObjects
  children:
  - Buildable.Construction.ScriptableObjects.SideSprites.BuiltSprite
  - Buildable.Construction.ScriptableObjects.SideSprites.ConstructionSprite
  - Buildable.Construction.ScriptableObjects.SideSprites.Side
  - Buildable.Construction.ScriptableObjects.SideSprites.Size
  langs:
  - csharp
  - vb
  name: SideSprites
  nameWithType: SideSprites
  fullName: Buildable.Construction.ScriptableObjects.SideSprites
  type: Struct
  source:
    id: SideSprites
    path: ''
    startLine: 32394
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Construction.ScriptableObjects
  summary: "\nEach side has its own sprites - for construction, built and even open\nThis is the easiest way how to manage those different sprites\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct SideSprites
    content.vb: >-
      <Serializable>

      Public Structure SideSprites
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Buildable.Construction.ScriptableObjects.SideSprites.Size
  commentId: F:Buildable.Construction.ScriptableObjects.SideSprites.Size
  id: Size
  parent: Buildable.Construction.ScriptableObjects.SideSprites
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: SideSprites.Size
  fullName: Buildable.Construction.ScriptableObjects.SideSprites.Size
  type: Field
  source:
    id: Size
    path: ''
    startLine: 32398
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Construction.ScriptableObjects
  syntax:
    content: public Vector2Int Size
    return:
      type: Global.Vector2Int
    content.vb: Public Size As Vector2Int
- uid: Buildable.Construction.ScriptableObjects.SideSprites.Side
  commentId: F:Buildable.Construction.ScriptableObjects.SideSprites.Side
  id: Side
  parent: Buildable.Construction.ScriptableObjects.SideSprites
  langs:
  - csharp
  - vb
  name: Side
  nameWithType: SideSprites.Side
  fullName: Buildable.Construction.ScriptableObjects.SideSprites.Side
  type: Field
  source:
    id: Side
    path: ''
    startLine: 32399
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Construction.ScriptableObjects
  syntax:
    content: public SideEnum Side
    return:
      type: Global.SideEnum
    content.vb: Public Side As SideEnum
- uid: Buildable.Construction.ScriptableObjects.SideSprites.ConstructionSprite
  commentId: F:Buildable.Construction.ScriptableObjects.SideSprites.ConstructionSprite
  id: ConstructionSprite
  parent: Buildable.Construction.ScriptableObjects.SideSprites
  langs:
  - csharp
  - vb
  name: ConstructionSprite
  nameWithType: SideSprites.ConstructionSprite
  fullName: Buildable.Construction.ScriptableObjects.SideSprites.ConstructionSprite
  type: Field
  source:
    id: ConstructionSprite
    path: ''
    startLine: 32400
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Construction.ScriptableObjects
  syntax:
    content: public Sprite ConstructionSprite
    return:
      type: Global.Sprite
    content.vb: Public ConstructionSprite As Sprite
- uid: Buildable.Construction.ScriptableObjects.SideSprites.BuiltSprite
  commentId: F:Buildable.Construction.ScriptableObjects.SideSprites.BuiltSprite
  id: BuiltSprite
  parent: Buildable.Construction.ScriptableObjects.SideSprites
  langs:
  - csharp
  - vb
  name: BuiltSprite
  nameWithType: SideSprites.BuiltSprite
  fullName: Buildable.Construction.ScriptableObjects.SideSprites.BuiltSprite
  type: Field
  source:
    id: BuiltSprite
    path: ''
    startLine: 32401
  assemblies:
  - cs.temp.dll
  namespace: Buildable.Construction.ScriptableObjects
  syntax:
    content: public Sprite BuiltSprite
    return:
      type: Global.Sprite
    content.vb: Public BuiltSprite As Sprite
references:
- uid: Buildable.Construction.ScriptableObjects
  commentId: N:Buildable.Construction.ScriptableObjects
  name: Buildable.Construction.ScriptableObjects
  nameWithType: Buildable.Construction.ScriptableObjects
  fullName: Buildable.Construction.ScriptableObjects
  spec.csharp:
  - uid: Buildable
    name: Buildable
  - name: .
  - uid: Buildable.Construction
    name: Construction
  - name: .
  - uid: Buildable.Construction.ScriptableObjects
    name: ScriptableObjects
  spec.vb:
  - uid: Buildable
    name: Buildable
  - name: .
  - uid: Buildable.Construction
    name: Construction
  - name: .
  - uid: Buildable.Construction.ScriptableObjects
    name: ScriptableObjects
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Vector2Int
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: Vector2Int
- uid: Global.SideEnum
  isExternal: true
  name: SideEnum
  nameWithType: SideEnum
  fullName: SideEnum
- uid: Global.Sprite
  isExternal: true
  name: Sprite
  nameWithType: Sprite
  fullName: Sprite
