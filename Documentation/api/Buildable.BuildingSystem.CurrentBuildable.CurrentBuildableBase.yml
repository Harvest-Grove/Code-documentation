### YamlMime:ManagedReference
items:
- uid: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase
  commentId: T:Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase
  id: CurrentBuildableBase
  parent: Buildable.BuildingSystem.CurrentBuildable
  children:
  - Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.#ctor(Buildable.BuildingSystem.PlacingBuilding)
  - Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.BuildBuilding
  - Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.DisableBuilding
  - Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.PlacingBuilding
  - Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.PrepareBuildingPlaceholder
  - Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.Rotation
  langs:
  - csharp
  - vb
  name: CurrentBuildableBase
  nameWithType: CurrentBuildableBase
  fullName: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase
  type: Class
  source:
    id: CurrentBuildableBase
    path: ''
    startLine: 31054
  assemblies:
  - cs.temp.dll
  namespace: Buildable.BuildingSystem.CurrentBuildable
  syntax:
    content: public abstract class CurrentBuildableBase
    content.vb: Public MustInherit Class CurrentBuildableBase
  inheritance:
  - System.Object
  derivedClasses:
  - Buildable.BuildingSystem.CurrentBuildable.BuildableBuilding
  - Buildable.BuildingSystem.CurrentBuildable.BuildableConstruction
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.PlacingBuilding
  commentId: F:Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.PlacingBuilding
  id: PlacingBuilding
  parent: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase
  langs:
  - csharp
  - vb
  name: PlacingBuilding
  nameWithType: CurrentBuildableBase.PlacingBuilding
  fullName: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.PlacingBuilding
  type: Field
  source:
    id: PlacingBuilding
    path: ''
    startLine: 31056
  assemblies:
  - cs.temp.dll
  namespace: Buildable.BuildingSystem.CurrentBuildable
  syntax:
    content: protected PlacingBuilding PlacingBuilding
    return:
      type: Buildable.BuildingSystem.PlacingBuilding
    content.vb: Protected PlacingBuilding As PlacingBuilding
- uid: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.#ctor(Buildable.BuildingSystem.PlacingBuilding)
  commentId: M:Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.#ctor(Buildable.BuildingSystem.PlacingBuilding)
  id: '#ctor(Buildable.BuildingSystem.PlacingBuilding)'
  parent: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase
  langs:
  - csharp
  - vb
  name: CurrentBuildableBase(PlacingBuilding)
  nameWithType: CurrentBuildableBase.CurrentBuildableBase(PlacingBuilding)
  fullName: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.CurrentBuildableBase(Buildable.BuildingSystem.PlacingBuilding)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 31058
  assemblies:
  - cs.temp.dll
  namespace: Buildable.BuildingSystem.CurrentBuildable
  syntax:
    content: public CurrentBuildableBase(PlacingBuilding placingBuilding)
    parameters:
    - id: placingBuilding
      type: Buildable.BuildingSystem.PlacingBuilding
    content.vb: Public Sub New(placingBuilding As PlacingBuilding)
  overload: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.#ctor*
  nameWithType.vb: CurrentBuildableBase.New(PlacingBuilding)
  fullName.vb: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.New(Buildable.BuildingSystem.PlacingBuilding)
  name.vb: New(PlacingBuilding)
- uid: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.Rotation
  commentId: M:Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.Rotation
  id: Rotation
  parent: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase
  langs:
  - csharp
  - vb
  name: Rotation()
  nameWithType: CurrentBuildableBase.Rotation()
  fullName: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.Rotation()
  type: Method
  source:
    id: Rotation
    path: ''
    startLine: 31063
  assemblies:
  - cs.temp.dll
  namespace: Buildable.BuildingSystem.CurrentBuildable
  syntax:
    content: public abstract void Rotation()
    content.vb: Public MustOverride Sub Rotation()
  overload: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.Rotation*
- uid: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.BuildBuilding
  commentId: M:Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.BuildBuilding
  id: BuildBuilding
  parent: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase
  langs:
  - csharp
  - vb
  name: BuildBuilding()
  nameWithType: CurrentBuildableBase.BuildBuilding()
  fullName: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.BuildBuilding()
  type: Method
  source:
    id: BuildBuilding
    path: ''
    startLine: 31069
  assemblies:
  - cs.temp.dll
  namespace: Buildable.BuildingSystem.CurrentBuildable
  summary: "\nThis method checks if the Building can be placed\nIf it can, it builds the Building at the current mouse position \n"
  example: []
  syntax:
    content: public abstract void BuildBuilding()
    content.vb: Public MustOverride Sub BuildBuilding()
  overload: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.BuildBuilding*
- uid: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.PrepareBuildingPlaceholder
  commentId: M:Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.PrepareBuildingPlaceholder
  id: PrepareBuildingPlaceholder
  parent: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase
  langs:
  - csharp
  - vb
  name: PrepareBuildingPlaceholder()
  nameWithType: CurrentBuildableBase.PrepareBuildingPlaceholder()
  fullName: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.PrepareBuildingPlaceholder()
  type: Method
  source:
    id: PrepareBuildingPlaceholder
    path: ''
    startLine: 31071
  assemblies:
  - cs.temp.dll
  namespace: Buildable.BuildingSystem.CurrentBuildable
  syntax:
    content: public abstract void PrepareBuildingPlaceholder()
    content.vb: Public MustOverride Sub PrepareBuildingPlaceholder()
  overload: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.PrepareBuildingPlaceholder*
- uid: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.DisableBuilding
  commentId: M:Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.DisableBuilding
  id: DisableBuilding
  parent: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase
  langs:
  - csharp
  - vb
  name: DisableBuilding()
  nameWithType: CurrentBuildableBase.DisableBuilding()
  fullName: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.DisableBuilding()
  type: Method
  source:
    id: DisableBuilding
    path: ''
    startLine: 31073
  assemblies:
  - cs.temp.dll
  namespace: Buildable.BuildingSystem.CurrentBuildable
  syntax:
    content: public abstract UniTask DisableBuilding()
    return:
      type: Global.UniTask
    content.vb: Public MustOverride Function DisableBuilding() As UniTask
  overload: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.DisableBuilding*
references:
- uid: Buildable.BuildingSystem.CurrentBuildable
  commentId: N:Buildable.BuildingSystem.CurrentBuildable
  name: Buildable.BuildingSystem.CurrentBuildable
  nameWithType: Buildable.BuildingSystem.CurrentBuildable
  fullName: Buildable.BuildingSystem.CurrentBuildable
  spec.csharp:
  - uid: Buildable
    name: Buildable
  - name: .
  - uid: Buildable.BuildingSystem
    name: BuildingSystem
  - name: .
  - uid: Buildable.BuildingSystem.CurrentBuildable
    name: CurrentBuildable
  spec.vb:
  - uid: Buildable
    name: Buildable
  - name: .
  - uid: Buildable.BuildingSystem
    name: BuildingSystem
  - name: .
  - uid: Buildable.BuildingSystem.CurrentBuildable
    name: CurrentBuildable
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Buildable.BuildingSystem.PlacingBuilding
  commentId: T:Buildable.BuildingSystem.PlacingBuilding
  parent: Buildable.BuildingSystem
  name: PlacingBuilding
  nameWithType: PlacingBuilding
  fullName: Buildable.BuildingSystem.PlacingBuilding
- uid: Buildable.BuildingSystem
  commentId: N:Buildable.BuildingSystem
  name: Buildable.BuildingSystem
  nameWithType: Buildable.BuildingSystem
  fullName: Buildable.BuildingSystem
  spec.csharp:
  - uid: Buildable
    name: Buildable
  - name: .
  - uid: Buildable.BuildingSystem
    name: BuildingSystem
  spec.vb:
  - uid: Buildable
    name: Buildable
  - name: .
  - uid: Buildable.BuildingSystem
    name: BuildingSystem
- uid: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.#ctor*
  commentId: Overload:Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.#ctor
  name: CurrentBuildableBase
  nameWithType: CurrentBuildableBase.CurrentBuildableBase
  fullName: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.CurrentBuildableBase
  nameWithType.vb: CurrentBuildableBase.New
  fullName.vb: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.New
  name.vb: New
- uid: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.Rotation*
  commentId: Overload:Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.Rotation
  name: Rotation
  nameWithType: CurrentBuildableBase.Rotation
  fullName: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.Rotation
- uid: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.BuildBuilding*
  commentId: Overload:Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.BuildBuilding
  name: BuildBuilding
  nameWithType: CurrentBuildableBase.BuildBuilding
  fullName: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.BuildBuilding
- uid: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.PrepareBuildingPlaceholder*
  commentId: Overload:Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.PrepareBuildingPlaceholder
  name: PrepareBuildingPlaceholder
  nameWithType: CurrentBuildableBase.PrepareBuildingPlaceholder
  fullName: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.PrepareBuildingPlaceholder
- uid: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.DisableBuilding*
  commentId: Overload:Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.DisableBuilding
  name: DisableBuilding
  nameWithType: CurrentBuildableBase.DisableBuilding
  fullName: Buildable.BuildingSystem.CurrentBuildable.CurrentBuildableBase.DisableBuilding
- uid: Global.UniTask
  isExternal: true
  name: UniTask
  nameWithType: UniTask
  fullName: UniTask
