### YamlMime:ManagedReference
items:
- uid: Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving
  commentId: T:Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving
  id: SeedsSaving
  parent: Systems.Saving.SpecificDataSaving.Seeds
  children:
  - Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.LoadSeeds
  - Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.SaveSeeds(Dictionary{Vector2,PlantableData})
  langs:
  - csharp
  - vb
  name: SeedsSaving
  nameWithType: SeedsSaving
  fullName: Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving
  type: Class
  source:
    id: SeedsSaving
    path: ''
    startLine: 25010
  assemblies:
  - cs.temp.dll
  namespace: Systems.Saving.SpecificDataSaving.Seeds
  syntax:
    content: public static class SeedsSaving
    content.vb: Public Module SeedsSaving
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.SaveSeeds(Dictionary{Vector2,PlantableData})
  commentId: M:Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.SaveSeeds(Dictionary{Vector2,PlantableData})
  id: SaveSeeds(Dictionary{Vector2,PlantableData})
  parent: Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving
  langs:
  - csharp
  - vb
  name: SaveSeeds(Dictionary<Vector2, PlantableData>)
  nameWithType: SeedsSaving.SaveSeeds(Dictionary<Vector2, PlantableData>)
  fullName: Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.SaveSeeds(Dictionary<Vector2, PlantableData>)
  type: Method
  source:
    id: SaveSeeds
    path: ''
    startLine: 25015
  assemblies:
  - cs.temp.dll
  namespace: Systems.Saving.SpecificDataSaving.Seeds
  syntax:
    content: public static void SaveSeeds(Dictionary<Vector2, PlantableData> data)
    parameters:
    - id: data
      type: Global.Dictionary{Vector2,PlantableData}
    content.vb: Public Shared Sub SaveSeeds(data As Dictionary(Of Vector2, PlantableData))
  overload: Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.SaveSeeds*
  nameWithType.vb: SeedsSaving.SaveSeeds(Dictionary(Of Vector2, PlantableData))
  fullName.vb: Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.SaveSeeds(Dictionary(Of Vector2, PlantableData))
  name.vb: SaveSeeds(Dictionary(Of Vector2, PlantableData))
- uid: Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.LoadSeeds
  commentId: M:Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.LoadSeeds
  id: LoadSeeds
  parent: Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving
  langs:
  - csharp
  - vb
  name: LoadSeeds()
  nameWithType: SeedsSaving.LoadSeeds()
  fullName: Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.LoadSeeds()
  type: Method
  source:
    id: LoadSeeds
    path: ''
    startLine: 25021
  assemblies:
  - cs.temp.dll
  namespace: Systems.Saving.SpecificDataSaving.Seeds
  syntax:
    content: public static UniTask<Dictionary<Vector2, PlantableData>> LoadSeeds()
    return:
      type: Global.UniTask{Dictionary{Vector2,PlantableData}}
    content.vb: Public Shared Function LoadSeeds() As UniTask(Of Dictionary(Of Vector2, PlantableData))
  overload: Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.LoadSeeds*
references:
- uid: Systems.Saving.SpecificDataSaving.Seeds
  commentId: N:Systems.Saving.SpecificDataSaving.Seeds
  name: Systems.Saving.SpecificDataSaving.Seeds
  nameWithType: Systems.Saving.SpecificDataSaving.Seeds
  fullName: Systems.Saving.SpecificDataSaving.Seeds
  spec.csharp:
  - uid: Systems
    name: Systems
  - name: .
  - uid: Systems.Saving
    name: Saving
  - name: .
  - uid: Systems.Saving.SpecificDataSaving
    name: SpecificDataSaving
  - name: .
  - uid: Systems.Saving.SpecificDataSaving.Seeds
    name: Seeds
  spec.vb:
  - uid: Systems
    name: Systems
  - name: .
  - uid: Systems.Saving
    name: Saving
  - name: .
  - uid: Systems.Saving.SpecificDataSaving
    name: SpecificDataSaving
  - name: .
  - uid: Systems.Saving.SpecificDataSaving.Seeds
    name: Seeds
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.SaveSeeds*
  commentId: Overload:Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.SaveSeeds
  name: SaveSeeds
  nameWithType: SeedsSaving.SaveSeeds
  fullName: Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.SaveSeeds
- uid: Global.Dictionary{Vector2,PlantableData}
  commentId: '!:Global.Dictionary{Vector2,PlantableData}'
  definition: Global.Dictionary`2
  name: Dictionary<Vector2, PlantableData>
  nameWithType: Dictionary<Vector2, PlantableData>
  fullName: Dictionary<Vector2, PlantableData>
  nameWithType.vb: Dictionary(Of Vector2, PlantableData)
  fullName.vb: Dictionary(Of Vector2, PlantableData)
  name.vb: Dictionary(Of Vector2, PlantableData)
  spec.csharp:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: Global.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.PlantableData
    name: PlantableData
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.PlantableData
    name: PlantableData
    isExternal: true
  - name: )
- uid: Global.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: )
- uid: Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.LoadSeeds*
  commentId: Overload:Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.LoadSeeds
  name: LoadSeeds
  nameWithType: SeedsSaving.LoadSeeds
  fullName: Systems.Saving.SpecificDataSaving.Seeds.SeedsSaving.LoadSeeds
- uid: Global.UniTask{Dictionary{Vector2,PlantableData}}
  commentId: '!:Global.UniTask{Dictionary{Vector2,PlantableData}}'
  definition: Global.UniTask`1
  name: UniTask<Dictionary<Vector2, PlantableData>>
  nameWithType: UniTask<Dictionary<Vector2, PlantableData>>
  fullName: UniTask<Dictionary<Vector2, PlantableData>>
  nameWithType.vb: UniTask(Of Dictionary(Of Vector2, PlantableData))
  fullName.vb: UniTask(Of Dictionary(Of Vector2, PlantableData))
  name.vb: UniTask(Of Dictionary(Of Vector2, PlantableData))
  spec.csharp:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: Global.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.PlantableData
    name: PlantableData
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.PlantableData
    name: PlantableData
    isExternal: true
  - name: )
  - name: )
- uid: Global.UniTask`1
  isExternal: true
  name: UniTask<>
  nameWithType: UniTask<>
  fullName: UniTask<>
  nameWithType.vb: UniTask(Of )
  fullName.vb: UniTask(Of )
  name.vb: UniTask(Of )
  spec.csharp:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
