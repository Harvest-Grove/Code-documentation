### YamlMime:ManagedReference
items:
- uid: Systems.Crafting.Sections.CraftingSectionListSO
  commentId: T:Systems.Crafting.Sections.CraftingSectionListSO
  id: CraftingSectionListSO
  parent: Systems.Crafting.Sections
  children:
  - Systems.Crafting.Sections.CraftingSectionListSO.GetRecipesContaining(System.String)
  - Systems.Crafting.Sections.CraftingSectionListSO.Sections
  langs:
  - csharp
  - vb
  name: CraftingSectionListSO
  nameWithType: CraftingSectionListSO
  fullName: Systems.Crafting.Sections.CraftingSectionListSO
  type: Class
  source:
    id: CraftingSectionListSO
    path: ''
    startLine: 19268
  assemblies:
  - cs.temp.dll
  namespace: Systems.Crafting.Sections
  syntax:
    content: 'public class CraftingSectionListSO : ScriptableObject'
    content.vb: Public Class CraftingSectionListSO Inherits ScriptableObject
  inheritance:
  - System.Object
- uid: Systems.Crafting.Sections.CraftingSectionListSO.Sections
  commentId: F:Systems.Crafting.Sections.CraftingSectionListSO.Sections
  id: Sections
  parent: Systems.Crafting.Sections.CraftingSectionListSO
  langs:
  - csharp
  - vb
  name: Sections
  nameWithType: CraftingSectionListSO.Sections
  fullName: Systems.Crafting.Sections.CraftingSectionListSO.Sections
  type: Field
  source:
    id: Sections
    path: ''
    startLine: 19271
  assemblies:
  - cs.temp.dll
  namespace: Systems.Crafting.Sections
  syntax:
    content: public List<CraftingSectionSO> Sections
    return:
      type: Global.List{Systems.Crafting.Sections.CraftingSectionSO}
    content.vb: Public Sections As List(Of CraftingSectionSO)
- uid: Systems.Crafting.Sections.CraftingSectionListSO.GetRecipesContaining(System.String)
  commentId: M:Systems.Crafting.Sections.CraftingSectionListSO.GetRecipesContaining(System.String)
  id: GetRecipesContaining(System.String)
  parent: Systems.Crafting.Sections.CraftingSectionListSO
  langs:
  - csharp
  - vb
  name: GetRecipesContaining(string)
  nameWithType: CraftingSectionListSO.GetRecipesContaining(string)
  fullName: Systems.Crafting.Sections.CraftingSectionListSO.GetRecipesContaining(string)
  type: Method
  source:
    id: GetRecipesContaining
    path: ''
    startLine: 19276
  assemblies:
  - cs.temp.dll
  namespace: Systems.Crafting.Sections
  summary: 'Loops over all sections and returns all recipes containing the keyword '
  example: []
  syntax:
    content: public List<CraftingRecipeSO> GetRecipesContaining(string keyword)
    parameters:
    - id: keyword
      type: System.String
      description: The keyword
    return:
      type: Global.List{CraftingRecipeSO}
      description: All recipes containing the keyword
    content.vb: Public Function GetRecipesContaining(keyword As String) As List(Of CraftingRecipeSO)
  overload: Systems.Crafting.Sections.CraftingSectionListSO.GetRecipesContaining*
  nameWithType.vb: CraftingSectionListSO.GetRecipesContaining(String)
  fullName.vb: Systems.Crafting.Sections.CraftingSectionListSO.GetRecipesContaining(String)
  name.vb: GetRecipesContaining(String)
references:
- uid: Systems.Crafting.Sections
  commentId: N:Systems.Crafting.Sections
  name: Systems.Crafting.Sections
  nameWithType: Systems.Crafting.Sections
  fullName: Systems.Crafting.Sections
  spec.csharp:
  - uid: Systems
    name: Systems
  - name: .
  - uid: Systems.Crafting
    name: Crafting
  - name: .
  - uid: Systems.Crafting.Sections
    name: Sections
  spec.vb:
  - uid: Systems
    name: Systems
  - name: .
  - uid: Systems.Crafting
    name: Crafting
  - name: .
  - uid: Systems.Crafting.Sections
    name: Sections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.List{Systems.Crafting.Sections.CraftingSectionSO}
  commentId: '!:Global.List{Systems.Crafting.Sections.CraftingSectionSO}'
  definition: Global.List`1
  name: List<CraftingSectionSO>
  nameWithType: List<CraftingSectionSO>
  fullName: List<Systems.Crafting.Sections.CraftingSectionSO>
  nameWithType.vb: List(Of CraftingSectionSO)
  fullName.vb: List(Of Systems.Crafting.Sections.CraftingSectionSO)
  name.vb: List(Of CraftingSectionSO)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Systems.Crafting.Sections.CraftingSectionSO
    name: CraftingSectionSO
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Systems.Crafting.Sections.CraftingSectionSO
    name: CraftingSectionSO
  - name: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Systems.Crafting.Sections.CraftingSectionListSO.GetRecipesContaining*
  commentId: Overload:Systems.Crafting.Sections.CraftingSectionListSO.GetRecipesContaining
  name: GetRecipesContaining
  nameWithType: CraftingSectionListSO.GetRecipesContaining
  fullName: Systems.Crafting.Sections.CraftingSectionListSO.GetRecipesContaining
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.List{CraftingRecipeSO}
  commentId: '!:Global.List{CraftingRecipeSO}'
  definition: Global.List`1
  name: List<CraftingRecipeSO>
  nameWithType: List<CraftingRecipeSO>
  fullName: List<CraftingRecipeSO>
  nameWithType.vb: List(Of CraftingRecipeSO)
  fullName.vb: List(Of CraftingRecipeSO)
  name.vb: List(Of CraftingRecipeSO)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.CraftingRecipeSO
    name: CraftingRecipeSO
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.CraftingRecipeSO
    name: CraftingRecipeSO
    isExternal: true
  - name: )
