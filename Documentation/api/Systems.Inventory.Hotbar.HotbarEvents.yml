### YamlMime:ManagedReference
items:
- uid: Systems.Inventory.Hotbar.HotbarEvents
  commentId: T:Systems.Inventory.Hotbar.HotbarEvents
  id: HotbarEvents
  parent: Systems.Inventory.Hotbar
  children:
  - Systems.Inventory.Hotbar.HotbarEvents.OnBucketType
  - Systems.Inventory.Hotbar.HotbarEvents.OnDisableTool
  - Systems.Inventory.Hotbar.HotbarEvents.OnEnableTool
  - Systems.Inventory.Hotbar.HotbarEvents.OnGetCurrentSlot
  - Systems.Inventory.Hotbar.HotbarEvents.OnSeedPlanted
  langs:
  - csharp
  - vb
  name: HotbarEvents
  nameWithType: HotbarEvents
  fullName: Systems.Inventory.Hotbar.HotbarEvents
  type: Class
  source:
    id: HotbarEvents
    path: ''
    startLine: 17884
  assemblies:
  - cs.temp.dll
  namespace: Systems.Inventory.Hotbar
  syntax:
    content: public class HotbarEvents
    content.vb: Public Class HotbarEvents
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Systems.Inventory.Hotbar.HotbarEvents.OnSeedPlanted
  commentId: F:Systems.Inventory.Hotbar.HotbarEvents.OnSeedPlanted
  id: OnSeedPlanted
  parent: Systems.Inventory.Hotbar.HotbarEvents
  langs:
  - csharp
  - vb
  name: OnSeedPlanted
  nameWithType: HotbarEvents.OnSeedPlanted
  fullName: Systems.Inventory.Hotbar.HotbarEvents.OnSeedPlanted
  type: Field
  source:
    id: OnSeedPlanted
    path: ''
    startLine: 17892
  assemblies:
  - cs.temp.dll
  namespace: Systems.Inventory.Hotbar
  summary: "\nEvent raised when a seed with specific id is planted.\n"
  example: []
  syntax:
    content: public static Action<int> OnSeedPlanted
    return:
      type: Global.Action{System.Int32}
    content.vb: Public Shared OnSeedPlanted As Action(Of Integer)
- uid: Systems.Inventory.Hotbar.HotbarEvents.OnBucketType
  commentId: F:Systems.Inventory.Hotbar.HotbarEvents.OnBucketType
  id: OnBucketType
  parent: Systems.Inventory.Hotbar.HotbarEvents
  langs:
  - csharp
  - vb
  name: OnBucketType
  nameWithType: HotbarEvents.OnBucketType
  fullName: Systems.Inventory.Hotbar.HotbarEvents.OnBucketType
  type: Field
  source:
    id: OnBucketType
    path: ''
    startLine: 17900
  assemblies:
  - cs.temp.dll
  namespace: Systems.Inventory.Hotbar
  summary: "\nEvent raised when a specific type of bucket is used.\n"
  example: []
  syntax:
    content: public static Action<ToolType> OnBucketType
    return:
      type: Global.Action{ToolType}
    content.vb: Public Shared OnBucketType As Action(Of ToolType)
- uid: Systems.Inventory.Hotbar.HotbarEvents.OnEnableTool
  commentId: F:Systems.Inventory.Hotbar.HotbarEvents.OnEnableTool
  id: OnEnableTool
  parent: Systems.Inventory.Hotbar.HotbarEvents
  langs:
  - csharp
  - vb
  name: OnEnableTool
  nameWithType: HotbarEvents.OnEnableTool
  fullName: Systems.Inventory.Hotbar.HotbarEvents.OnEnableTool
  type: Field
  source:
    id: OnEnableTool
    path: ''
    startLine: 17906
  assemblies:
  - cs.temp.dll
  namespace: Systems.Inventory.Hotbar
  summary: "\nEquips the currently selected slot\nBool is used to for showing which item is on the position {i.e. triggering text}, if adding item to the inventory, set it to false\n"
  example: []
  syntax:
    content: public static Action OnEnableTool
    return:
      type: Global.Action
    content.vb: Public Shared OnEnableTool As Action
- uid: Systems.Inventory.Hotbar.HotbarEvents.OnDisableTool
  commentId: F:Systems.Inventory.Hotbar.HotbarEvents.OnDisableTool
  id: OnDisableTool
  parent: Systems.Inventory.Hotbar.HotbarEvents
  langs:
  - csharp
  - vb
  name: OnDisableTool
  nameWithType: HotbarEvents.OnDisableTool
  fullName: Systems.Inventory.Hotbar.HotbarEvents.OnDisableTool
  type: Field
  source:
    id: OnDisableTool
    path: ''
    startLine: 17907
  assemblies:
  - cs.temp.dll
  namespace: Systems.Inventory.Hotbar
  syntax:
    content: public static Action OnDisableTool
    return:
      type: Global.Action
    content.vb: Public Shared OnDisableTool As Action
- uid: Systems.Inventory.Hotbar.HotbarEvents.OnGetCurrentSlot
  commentId: F:Systems.Inventory.Hotbar.HotbarEvents.OnGetCurrentSlot
  id: OnGetCurrentSlot
  parent: Systems.Inventory.Hotbar.HotbarEvents
  langs:
  - csharp
  - vb
  name: OnGetCurrentSlot
  nameWithType: HotbarEvents.OnGetCurrentSlot
  fullName: Systems.Inventory.Hotbar.HotbarEvents.OnGetCurrentSlot
  type: Field
  source:
    id: OnGetCurrentSlot
    path: ''
    startLine: 17909
  assemblies:
  - cs.temp.dll
  namespace: Systems.Inventory.Hotbar
  syntax:
    content: public static Func<InventorySlotUI> OnGetCurrentSlot
    return:
      type: Global.Func{InventorySlotUI}
    content.vb: Public Shared OnGetCurrentSlot As Func(Of InventorySlotUI)
references:
- uid: Systems.Inventory.Hotbar
  commentId: N:Systems.Inventory.Hotbar
  name: Systems.Inventory.Hotbar
  nameWithType: Systems.Inventory.Hotbar
  fullName: Systems.Inventory.Hotbar
  spec.csharp:
  - uid: Systems
    name: Systems
  - name: .
  - uid: Systems.Inventory
    name: Inventory
  - name: .
  - uid: Systems.Inventory.Hotbar
    name: Hotbar
  spec.vb:
  - uid: Systems
    name: Systems
  - name: .
  - uid: Systems.Inventory
    name: Inventory
  - name: .
  - uid: Systems.Inventory.Hotbar
    name: Hotbar
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Action{System.Int32}
  commentId: '!:Global.Action{System.Int32}'
  definition: Global.Action`1
  name: Action<int>
  nameWithType: Action<int>
  fullName: Action<int>
  nameWithType.vb: Action(Of Integer)
  fullName.vb: Action(Of Integer)
  name.vb: Action(Of Integer)
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Global.Action{ToolType}
  commentId: '!:Global.Action{ToolType}'
  definition: Global.Action`1
  name: Action<ToolType>
  nameWithType: Action<ToolType>
  fullName: Action<ToolType>
  nameWithType.vb: Action(Of ToolType)
  fullName.vb: Action(Of ToolType)
  name.vb: Action(Of ToolType)
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: Global.ToolType
    name: ToolType
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.ToolType
    name: ToolType
    isExternal: true
  - name: )
- uid: Global.Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
- uid: Global.Func{InventorySlotUI}
  commentId: '!:Global.Func{InventorySlotUI}'
  definition: Global.Func`1
  name: Func<InventorySlotUI>
  nameWithType: Func<InventorySlotUI>
  fullName: Func<InventorySlotUI>
  nameWithType.vb: Func(Of InventorySlotUI)
  fullName.vb: Func(Of InventorySlotUI)
  name.vb: Func(Of InventorySlotUI)
  spec.csharp:
  - uid: Global.Func`1
    name: Func
    isExternal: true
  - name: <
  - uid: Global.InventorySlotUI
    name: InventorySlotUI
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.Func`1
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.InventorySlotUI
    name: InventorySlotUI
    isExternal: true
  - name: )
- uid: Global.Func`1
  isExternal: true
  name: Func<>
  nameWithType: Func<>
  fullName: Func<>
  nameWithType.vb: Func(Of )
  fullName.vb: Func(Of )
  name.vb: Func(Of )
  spec.csharp:
  - uid: Global.Func`1
    name: Func
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.Func`1
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
