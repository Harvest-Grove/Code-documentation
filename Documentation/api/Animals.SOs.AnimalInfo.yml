### YamlMime:ManagedReference
items:
- uid: Animals.SOs.AnimalInfo
  commentId: T:Animals.SOs.AnimalInfo
  id: AnimalInfo
  parent: Animals.SOs
  children:
  - Animals.SOs.AnimalInfo.AnimalHouseConstruction
  - Animals.SOs.AnimalInfo.Food
  - Animals.SOs.AnimalInfo.MainAnimalType
  - Animals.SOs.AnimalInfo.MatingFood
  - Animals.SOs.AnimalInfo.MaximumAnimalsInPen
  - Animals.SOs.AnimalInfo.Scale
  - Animals.SOs.AnimalInfo.SecondaryAnimalType
  - Animals.SOs.AnimalInfo.Stages
  langs:
  - csharp
  - vb
  name: AnimalInfo
  nameWithType: AnimalInfo
  fullName: Animals.SOs.AnimalInfo
  type: Class
  source:
    id: AnimalInfo
    path: ''
    startLine: 26126
  assemblies:
  - cs.temp.dll
  namespace: Animals.SOs
  syntax:
    content: >-
      [Serializable]

      public class AnimalInfo
    content.vb: >-
      <Serializable>

      Public Class AnimalInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Animals.SOs.AnimalInfo.AnimalHouseConstruction
  commentId: F:Animals.SOs.AnimalInfo.AnimalHouseConstruction
  id: AnimalHouseConstruction
  parent: Animals.SOs.AnimalInfo
  langs:
  - csharp
  - vb
  name: AnimalHouseConstruction
  nameWithType: AnimalInfo.AnimalHouseConstruction
  fullName: Animals.SOs.AnimalInfo.AnimalHouseConstruction
  type: Field
  source:
    id: AnimalHouseConstruction
    path: ''
    startLine: 26129
  assemblies:
  - cs.temp.dll
  namespace: Animals.SOs
  syntax:
    content: public ConstructionSO AnimalHouseConstruction
    return:
      type: Global.ConstructionSO
    content.vb: Public AnimalHouseConstruction As ConstructionSO
- uid: Animals.SOs.AnimalInfo.Scale
  commentId: F:Animals.SOs.AnimalInfo.Scale
  id: Scale
  parent: Animals.SOs.AnimalInfo
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: AnimalInfo.Scale
  fullName: Animals.SOs.AnimalInfo.Scale
  type: Field
  source:
    id: Scale
    path: ''
    startLine: 26131
  assemblies:
  - cs.temp.dll
  namespace: Animals.SOs
  syntax:
    content: public float Scale
    return:
      type: System.Single
    content.vb: Public Scale As Single
- uid: Animals.SOs.AnimalInfo.MainAnimalType
  commentId: F:Animals.SOs.AnimalInfo.MainAnimalType
  id: MainAnimalType
  parent: Animals.SOs.AnimalInfo
  langs:
  - csharp
  - vb
  name: MainAnimalType
  nameWithType: AnimalInfo.MainAnimalType
  fullName: Animals.SOs.AnimalInfo.MainAnimalType
  type: Field
  source:
    id: MainAnimalType
    path: ''
    startLine: 26132
  assemblies:
  - cs.temp.dll
  namespace: Animals.SOs
  syntax:
    content: public MainAnimalsEnum MainAnimalType
    return:
      type: Animals.SOs.MainAnimalsEnum
    content.vb: Public MainAnimalType As MainAnimalsEnum
- uid: Animals.SOs.AnimalInfo.SecondaryAnimalType
  commentId: F:Animals.SOs.AnimalInfo.SecondaryAnimalType
  id: SecondaryAnimalType
  parent: Animals.SOs.AnimalInfo
  langs:
  - csharp
  - vb
  name: SecondaryAnimalType
  nameWithType: AnimalInfo.SecondaryAnimalType
  fullName: Animals.SOs.AnimalInfo.SecondaryAnimalType
  type: Field
  source:
    id: SecondaryAnimalType
    path: ''
    startLine: 26133
  assemblies:
  - cs.temp.dll
  namespace: Animals.SOs
  syntax:
    content: public SecondaryAnimalsEnum SecondaryAnimalType
    return:
      type: Animals.SOs.SecondaryAnimalsEnum
    content.vb: Public SecondaryAnimalType As SecondaryAnimalsEnum
- uid: Animals.SOs.AnimalInfo.MaximumAnimalsInPen
  commentId: F:Animals.SOs.AnimalInfo.MaximumAnimalsInPen
  id: MaximumAnimalsInPen
  parent: Animals.SOs.AnimalInfo
  langs:
  - csharp
  - vb
  name: MaximumAnimalsInPen
  nameWithType: AnimalInfo.MaximumAnimalsInPen
  fullName: Animals.SOs.AnimalInfo.MaximumAnimalsInPen
  type: Field
  source:
    id: MaximumAnimalsInPen
    path: ''
    startLine: 26135
  assemblies:
  - cs.temp.dll
  namespace: Animals.SOs
  syntax:
    content: public byte MaximumAnimalsInPen
    return:
      type: System.Byte
    content.vb: Public MaximumAnimalsInPen As Byte
- uid: Animals.SOs.AnimalInfo.MatingFood
  commentId: F:Animals.SOs.AnimalInfo.MatingFood
  id: MatingFood
  parent: Animals.SOs.AnimalInfo
  langs:
  - csharp
  - vb
  name: MatingFood
  nameWithType: AnimalInfo.MatingFood
  fullName: Animals.SOs.AnimalInfo.MatingFood
  type: Field
  source:
    id: MatingFood
    path: ''
    startLine: 26136
  assemblies:
  - cs.temp.dll
  namespace: Animals.SOs
  syntax:
    content: public InventoryItemData MatingFood
    return:
      type: Global.InventoryItemData
    content.vb: Public MatingFood As InventoryItemData
- uid: Animals.SOs.AnimalInfo.Food
  commentId: F:Animals.SOs.AnimalInfo.Food
  id: Food
  parent: Animals.SOs.AnimalInfo
  langs:
  - csharp
  - vb
  name: Food
  nameWithType: AnimalInfo.Food
  fullName: Animals.SOs.AnimalInfo.Food
  type: Field
  source:
    id: Food
    path: ''
    startLine: 26137
  assemblies:
  - cs.temp.dll
  namespace: Animals.SOs
  syntax:
    content: public AnimalFoodType Food
    return:
      type: Animals.SOs.AnimalFoodType
    content.vb: Public Food As AnimalFoodType
- uid: Animals.SOs.AnimalInfo.Stages
  commentId: F:Animals.SOs.AnimalInfo.Stages
  id: Stages
  parent: Animals.SOs.AnimalInfo
  langs:
  - csharp
  - vb
  name: Stages
  nameWithType: AnimalInfo.Stages
  fullName: Animals.SOs.AnimalInfo.Stages
  type: Field
  source:
    id: Stages
    path: ''
    startLine: 26140
  assemblies:
  - cs.temp.dll
  namespace: Animals.SOs
  syntax:
    content: public List<AnimalStage> Stages
    return:
      type: Global.List{Animals.SOs.AnimalStage}
    content.vb: Public Stages As List(Of AnimalStage)
references:
- uid: Animals.SOs
  commentId: N:Animals.SOs
  name: Animals.SOs
  nameWithType: Animals.SOs
  fullName: Animals.SOs
  spec.csharp:
  - uid: Animals
    name: Animals
  - name: .
  - uid: Animals.SOs
    name: SOs
  spec.vb:
  - uid: Animals
    name: Animals
  - name: .
  - uid: Animals.SOs
    name: SOs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ConstructionSO
  isExternal: true
  name: ConstructionSO
  nameWithType: ConstructionSO
  fullName: ConstructionSO
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Animals.SOs.MainAnimalsEnum
  commentId: T:Animals.SOs.MainAnimalsEnum
  parent: Animals.SOs
  name: MainAnimalsEnum
  nameWithType: MainAnimalsEnum
  fullName: Animals.SOs.MainAnimalsEnum
- uid: Animals.SOs.SecondaryAnimalsEnum
  commentId: T:Animals.SOs.SecondaryAnimalsEnum
  parent: Animals.SOs
  name: SecondaryAnimalsEnum
  nameWithType: SecondaryAnimalsEnum
  fullName: Animals.SOs.SecondaryAnimalsEnum
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: Global.InventoryItemData
  isExternal: true
  name: InventoryItemData
  nameWithType: InventoryItemData
  fullName: InventoryItemData
- uid: Animals.SOs.AnimalFoodType
  commentId: T:Animals.SOs.AnimalFoodType
  parent: Animals.SOs
  name: AnimalFoodType
  nameWithType: AnimalFoodType
  fullName: Animals.SOs.AnimalFoodType
- uid: Global.List{Animals.SOs.AnimalStage}
  commentId: '!:Global.List{Animals.SOs.AnimalStage}'
  definition: Global.List`1
  name: List<AnimalStage>
  nameWithType: List<AnimalStage>
  fullName: List<Animals.SOs.AnimalStage>
  nameWithType.vb: List(Of AnimalStage)
  fullName.vb: List(Of Animals.SOs.AnimalStage)
  name.vb: List(Of AnimalStage)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Animals.SOs.AnimalStage
    name: AnimalStage
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Animals.SOs.AnimalStage
    name: AnimalStage
  - name: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
