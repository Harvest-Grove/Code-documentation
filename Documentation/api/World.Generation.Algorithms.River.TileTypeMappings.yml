### YamlMime:ManagedReference
items:
- uid: World.Generation.Algorithms.River.TileTypeMappings
  commentId: T:World.Generation.Algorithms.River.TileTypeMappings
  id: TileTypeMappings
  parent: World.Generation.Algorithms.River
  children:
  - World.Generation.Algorithms.River.TileTypeMappings.IslandTileTypeConfig
  langs:
  - csharp
  - vb
  name: TileTypeMappings
  nameWithType: TileTypeMappings
  fullName: World.Generation.Algorithms.River.TileTypeMappings
  type: Class
  source:
    id: TileTypeMappings
    path: ''
    startLine: 7345
  assemblies:
  - cs.temp.dll
  namespace: World.Generation.Algorithms.River
  syntax:
    content: public static class TileTypeMappings
    content.vb: Public Module TileTypeMappings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: World.Generation.Algorithms.River.TileTypeMappings.IslandTileTypeConfig
  commentId: F:World.Generation.Algorithms.River.TileTypeMappings.IslandTileTypeConfig
  id: IslandTileTypeConfig
  parent: World.Generation.Algorithms.River.TileTypeMappings
  langs:
  - csharp
  - vb
  name: IslandTileTypeConfig
  nameWithType: TileTypeMappings.IslandTileTypeConfig
  fullName: World.Generation.Algorithms.River.TileTypeMappings.IslandTileTypeConfig
  type: Field
  source:
    id: IslandTileTypeConfig
    path: ''
    startLine: 7347
  assemblies:
  - cs.temp.dll
  namespace: World.Generation.Algorithms.River
  syntax:
    content: public static readonly Dictionary<IslandsDictionaryNames, TileTypeConfig> IslandTileTypeConfig
    return:
      type: Global.Dictionary{IslandsDictionaryNames,World.Generation.Algorithms.River.TileTypeConfig}
    content.vb: Public Shared ReadOnly IslandTileTypeConfig As Dictionary(Of IslandsDictionaryNames, TileTypeConfig)
references:
- uid: World.Generation.Algorithms.River
  commentId: N:World.Generation.Algorithms.River
  name: World.Generation.Algorithms.River
  nameWithType: World.Generation.Algorithms.River
  fullName: World.Generation.Algorithms.River
  spec.csharp:
  - uid: World
    name: World
  - name: .
  - uid: World.Generation
    name: Generation
  - name: .
  - uid: World.Generation.Algorithms
    name: Algorithms
  - name: .
  - uid: World.Generation.Algorithms.River
    name: River
  spec.vb:
  - uid: World
    name: World
  - name: .
  - uid: World.Generation
    name: Generation
  - name: .
  - uid: World.Generation.Algorithms
    name: Algorithms
  - name: .
  - uid: World.Generation.Algorithms.River
    name: River
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Dictionary{IslandsDictionaryNames,World.Generation.Algorithms.River.TileTypeConfig}
  commentId: '!:Global.Dictionary{IslandsDictionaryNames,World.Generation.Algorithms.River.TileTypeConfig}'
  definition: Global.Dictionary`2
  name: Dictionary<IslandsDictionaryNames, TileTypeConfig>
  nameWithType: Dictionary<IslandsDictionaryNames, TileTypeConfig>
  fullName: Dictionary<IslandsDictionaryNames, World.Generation.Algorithms.River.TileTypeConfig>
  nameWithType.vb: Dictionary(Of IslandsDictionaryNames, TileTypeConfig)
  fullName.vb: Dictionary(Of IslandsDictionaryNames, World.Generation.Algorithms.River.TileTypeConfig)
  name.vb: Dictionary(Of IslandsDictionaryNames, TileTypeConfig)
  spec.csharp:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: Global.IslandsDictionaryNames
    name: IslandsDictionaryNames
    isExternal: true
  - name: ','
  - name: " "
  - uid: World.Generation.Algorithms.River.TileTypeConfig
    name: TileTypeConfig
  - name: '>'
  spec.vb:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IslandsDictionaryNames
    name: IslandsDictionaryNames
    isExternal: true
  - name: ','
  - name: " "
  - uid: World.Generation.Algorithms.River.TileTypeConfig
    name: TileTypeConfig
  - name: )
- uid: Global.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: )
