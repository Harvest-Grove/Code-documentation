### YamlMime:ManagedReference
items:
- uid: QuestSystem.QuestsDataHolder
  commentId: T:QuestSystem.QuestsDataHolder
  id: QuestsDataHolder
  parent: QuestSystem
  children:
  - QuestSystem.QuestsDataHolder.ActiveQuests
  - QuestSystem.QuestsDataHolder.GenerateRandomQuest(System.String,NPC_Data,System.String)
  - QuestSystem.QuestsDataHolder.IsQuestActive(System.String)
  - QuestSystem.QuestsDataHolder.QuestsToClaim
  langs:
  - csharp
  - vb
  name: QuestsDataHolder
  nameWithType: QuestsDataHolder
  fullName: QuestSystem.QuestsDataHolder
  type: Class
  source:
    id: QuestsDataHolder
    path: ''
    startLine: 21885
  assemblies:
  - cs.temp.dll
  namespace: QuestSystem
  syntax:
    content: public static class QuestsDataHolder
    content.vb: Public Module QuestsDataHolder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: QuestSystem.QuestsDataHolder.ActiveQuests
  commentId: F:QuestSystem.QuestsDataHolder.ActiveQuests
  id: ActiveQuests
  parent: QuestSystem.QuestsDataHolder
  langs:
  - csharp
  - vb
  name: ActiveQuests
  nameWithType: QuestsDataHolder.ActiveQuests
  fullName: QuestSystem.QuestsDataHolder.ActiveQuests
  type: Field
  source:
    id: ActiveQuests
    path: ''
    startLine: 21887
  assemblies:
  - cs.temp.dll
  namespace: QuestSystem
  syntax:
    content: public static readonly List<Quest> ActiveQuests
    return:
      type: Global.List{QuestSystem.Quest}
    content.vb: Public Shared ReadOnly ActiveQuests As List(Of Quest)
- uid: QuestSystem.QuestsDataHolder.QuestsToClaim
  commentId: F:QuestSystem.QuestsDataHolder.QuestsToClaim
  id: QuestsToClaim
  parent: QuestSystem.QuestsDataHolder
  langs:
  - csharp
  - vb
  name: QuestsToClaim
  nameWithType: QuestsDataHolder.QuestsToClaim
  fullName: QuestSystem.QuestsDataHolder.QuestsToClaim
  type: Field
  source:
    id: QuestsToClaim
    path: ''
    startLine: 21888
  assemblies:
  - cs.temp.dll
  namespace: QuestSystem
  syntax:
    content: public static readonly List<Quest> QuestsToClaim
    return:
      type: Global.List{QuestSystem.Quest}
    content.vb: Public Shared ReadOnly QuestsToClaim As List(Of Quest)
- uid: QuestSystem.QuestsDataHolder.IsQuestActive(System.String)
  commentId: M:QuestSystem.QuestsDataHolder.IsQuestActive(System.String)
  id: IsQuestActive(System.String)
  parent: QuestSystem.QuestsDataHolder
  langs:
  - csharp
  - vb
  name: IsQuestActive(string)
  nameWithType: QuestsDataHolder.IsQuestActive(string)
  fullName: QuestSystem.QuestsDataHolder.IsQuestActive(string)
  type: Method
  source:
    id: IsQuestActive
    path: ''
    startLine: 21890
  assemblies:
  - cs.temp.dll
  namespace: QuestSystem
  syntax:
    content: public static bool IsQuestActive(string givenQuestID)
    parameters:
    - id: givenQuestID
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsQuestActive(givenQuestID As String) As Boolean
  overload: QuestSystem.QuestsDataHolder.IsQuestActive*
  nameWithType.vb: QuestsDataHolder.IsQuestActive(String)
  fullName.vb: QuestSystem.QuestsDataHolder.IsQuestActive(String)
  name.vb: IsQuestActive(String)
- uid: QuestSystem.QuestsDataHolder.GenerateRandomQuest(System.String,NPC_Data,System.String)
  commentId: M:QuestSystem.QuestsDataHolder.GenerateRandomQuest(System.String,NPC_Data,System.String)
  id: GenerateRandomQuest(System.String,NPC_Data,System.String)
  parent: QuestSystem.QuestsDataHolder
  langs:
  - csharp
  - vb
  name: GenerateRandomQuest(string, NPC_Data, string)
  nameWithType: QuestsDataHolder.GenerateRandomQuest(string, NPC_Data, string)
  fullName: QuestSystem.QuestsDataHolder.GenerateRandomQuest(string, NPC_Data, string)
  type: Method
  source:
    id: GenerateRandomQuest
    path: ''
    startLine: 21895
  assemblies:
  - cs.temp.dll
  namespace: QuestSystem
  syntax:
    content: public static void GenerateRandomQuest(string questName, NPC_Data npcData, string questText)
    parameters:
    - id: questName
      type: System.String
    - id: npcData
      type: Global.NPC_Data
    - id: questText
      type: System.String
    content.vb: Public Shared Sub GenerateRandomQuest(questName As String, npcData As NPC_Data, questText As String)
  overload: QuestSystem.QuestsDataHolder.GenerateRandomQuest*
  nameWithType.vb: QuestsDataHolder.GenerateRandomQuest(String, NPC_Data, String)
  fullName.vb: QuestSystem.QuestsDataHolder.GenerateRandomQuest(String, NPC_Data, String)
  name.vb: GenerateRandomQuest(String, NPC_Data, String)
references:
- uid: QuestSystem
  commentId: N:QuestSystem
  name: QuestSystem
  nameWithType: QuestSystem
  fullName: QuestSystem
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.List{QuestSystem.Quest}
  commentId: '!:Global.List{QuestSystem.Quest}'
  definition: Global.List`1
  name: List<Quest>
  nameWithType: List<Quest>
  fullName: List<QuestSystem.Quest>
  nameWithType.vb: List(Of Quest)
  fullName.vb: List(Of QuestSystem.Quest)
  name.vb: List(Of Quest)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: QuestSystem.Quest
    name: Quest
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: QuestSystem.Quest
    name: Quest
  - name: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: QuestSystem.QuestsDataHolder.IsQuestActive*
  commentId: Overload:QuestSystem.QuestsDataHolder.IsQuestActive
  name: IsQuestActive
  nameWithType: QuestsDataHolder.IsQuestActive
  fullName: QuestSystem.QuestsDataHolder.IsQuestActive
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: QuestSystem.QuestsDataHolder.GenerateRandomQuest*
  commentId: Overload:QuestSystem.QuestsDataHolder.GenerateRandomQuest
  name: GenerateRandomQuest
  nameWithType: QuestsDataHolder.GenerateRandomQuest
  fullName: QuestSystem.QuestsDataHolder.GenerateRandomQuest
- uid: Global.NPC_Data
  isExternal: true
  name: NPC_Data
  nameWithType: NPC_Data
  fullName: NPC_Data
