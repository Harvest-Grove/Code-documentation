### YamlMime:ManagedReference
items:
- uid: Helpers.HelpingClasses.Buildings.BuildingsHelper
  commentId: T:Helpers.HelpingClasses.Buildings.BuildingsHelper
  id: BuildingsHelper
  parent: Helpers.HelpingClasses.Buildings
  children:
  - Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildCampfire(Vector2)
  - Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildChest(Chest,BuildingSO,Vector2)
  langs:
  - csharp
  - vb
  name: BuildingsHelper
  nameWithType: BuildingsHelper
  fullName: Helpers.HelpingClasses.Buildings.BuildingsHelper
  type: Class
  source:
    id: BuildingsHelper
    path: ''
    startLine: 46779
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses.Buildings
  syntax:
    content: public static class BuildingsHelper
    content.vb: Public Module BuildingsHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildCampfire(Vector2)
  commentId: M:Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildCampfire(Vector2)
  id: BuildCampfire(Vector2)
  parent: Helpers.HelpingClasses.Buildings.BuildingsHelper
  langs:
  - csharp
  - vb
  name: BuildCampfire(Vector2)
  nameWithType: BuildingsHelper.BuildCampfire(Vector2)
  fullName: Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildCampfire(Vector2)
  type: Method
  source:
    id: BuildCampfire
    path: ''
    startLine: 46783
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses.Buildings
  syntax:
    content: public static void BuildCampfire(Vector2 buildingPosition)
    parameters:
    - id: buildingPosition
      type: Global.Vector2
    content.vb: Public Shared Sub BuildCampfire(buildingPosition As Vector2)
  overload: Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildCampfire*
- uid: Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildChest(Chest,BuildingSO,Vector2)
  commentId: M:Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildChest(Chest,BuildingSO,Vector2)
  id: BuildChest(Chest,BuildingSO,Vector2)
  parent: Helpers.HelpingClasses.Buildings.BuildingsHelper
  langs:
  - csharp
  - vb
  name: BuildChest(Chest, BuildingSO, Vector2)
  nameWithType: BuildingsHelper.BuildChest(Chest, BuildingSO, Vector2)
  fullName: Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildChest(Chest, BuildingSO, Vector2)
  type: Method
  source:
    id: BuildChest
    path: ''
    startLine: 46788
  assemblies:
  - cs.temp.dll
  namespace: Helpers.HelpingClasses.Buildings
  syntax:
    content: public static void BuildChest(Chest chest, BuildingSO buildingSo, Vector2 buildingPosition)
    parameters:
    - id: chest
      type: Global.Chest
    - id: buildingSo
      type: Global.BuildingSO
    - id: buildingPosition
      type: Global.Vector2
    content.vb: Public Shared Sub BuildChest(chest As Chest, buildingSo As BuildingSO, buildingPosition As Vector2)
  overload: Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildChest*
references:
- uid: Helpers.HelpingClasses.Buildings
  commentId: N:Helpers.HelpingClasses.Buildings
  name: Helpers.HelpingClasses.Buildings
  nameWithType: Helpers.HelpingClasses.Buildings
  fullName: Helpers.HelpingClasses.Buildings
  spec.csharp:
  - uid: Helpers
    name: Helpers
  - name: .
  - uid: Helpers.HelpingClasses
    name: HelpingClasses
  - name: .
  - uid: Helpers.HelpingClasses.Buildings
    name: Buildings
  spec.vb:
  - uid: Helpers
    name: Helpers
  - name: .
  - uid: Helpers.HelpingClasses
    name: HelpingClasses
  - name: .
  - uid: Helpers.HelpingClasses.Buildings
    name: Buildings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildCampfire*
  commentId: Overload:Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildCampfire
  name: BuildCampfire
  nameWithType: BuildingsHelper.BuildCampfire
  fullName: Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildCampfire
- uid: Global.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildChest*
  commentId: Overload:Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildChest
  name: BuildChest
  nameWithType: BuildingsHelper.BuildChest
  fullName: Helpers.HelpingClasses.Buildings.BuildingsHelper.BuildChest
- uid: Global.Chest
  isExternal: true
  name: Chest
  nameWithType: Chest
  fullName: Chest
- uid: Global.BuildingSO
  isExternal: true
  name: BuildingSO
  nameWithType: BuildingSO
  fullName: BuildingSO
