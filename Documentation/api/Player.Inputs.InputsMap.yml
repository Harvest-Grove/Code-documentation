### YamlMime:ManagedReference
items:
- uid: Player.Inputs.InputsMap
  commentId: T:Player.Inputs.InputsMap
  id: InputsMap
  parent: Player.Inputs
  children:
  - Player.Inputs.InputsMap.CloseInputAction
  - Player.Inputs.InputsMap.CollectableAction
  - Player.Inputs.InputsMap.DebugInputAction
  - Player.Inputs.InputsMap.DevConsole
  - Player.Inputs.InputsMap.DividingAction
  - Player.Inputs.InputsMap.DropItemHotbar
  - Player.Inputs.InputsMap.InteractInputAction
  - Player.Inputs.InputsMap.LeftClickInputAction
  - Player.Inputs.InputsMap.LoadInputs
  - Player.Inputs.InputsMap.MapInputAction
  - Player.Inputs.InputsMap.MoveInputAction
  - Player.Inputs.InputsMap.OpenBackpackAction
  - Player.Inputs.InputsMap.PauseInputAction
  - Player.Inputs.InputsMap.PlayerInput
  - Player.Inputs.InputsMap.QuestInputAction
  - Player.Inputs.InputsMap.RightClickInputAction
  - Player.Inputs.InputsMap.RotateInputAction
  - Player.Inputs.InputsMap.RunInputAction
  - Player.Inputs.InputsMap.ScreenshotInputAction
  - Player.Inputs.InputsMap.UseConsumableInputAction
  langs:
  - csharp
  - vb
  name: InputsMap
  nameWithType: InputsMap
  fullName: Player.Inputs.InputsMap
  type: Class
  source:
    id: InputsMap
    path: ''
    startLine: 36215
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public class InputsMap
    content.vb: Public Class InputsMap
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Player.Inputs.InputsMap.PlayerInput
  commentId: P:Player.Inputs.InputsMap.PlayerInput
  id: PlayerInput
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: PlayerInput
  nameWithType: InputsMap.PlayerInput
  fullName: Player.Inputs.InputsMap.PlayerInput
  type: Property
  source:
    id: PlayerInput
    path: ''
    startLine: 36217
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public PlayerInput PlayerInput { get; }
    parameters: []
    return:
      type: Global.PlayerInput
    content.vb: Public ReadOnly Property PlayerInput As PlayerInput
  overload: Player.Inputs.InputsMap.PlayerInput*
- uid: Player.Inputs.InputsMap.MoveInputAction
  commentId: P:Player.Inputs.InputsMap.MoveInputAction
  id: MoveInputAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: MoveInputAction
  nameWithType: InputsMap.MoveInputAction
  fullName: Player.Inputs.InputsMap.MoveInputAction
  type: Property
  source:
    id: MoveInputAction
    path: ''
    startLine: 36219
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction MoveInputAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property MoveInputAction As InputAction
  overload: Player.Inputs.InputsMap.MoveInputAction*
- uid: Player.Inputs.InputsMap.RunInputAction
  commentId: P:Player.Inputs.InputsMap.RunInputAction
  id: RunInputAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: RunInputAction
  nameWithType: InputsMap.RunInputAction
  fullName: Player.Inputs.InputsMap.RunInputAction
  type: Property
  source:
    id: RunInputAction
    path: ''
    startLine: 36220
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction RunInputAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property RunInputAction As InputAction
  overload: Player.Inputs.InputsMap.RunInputAction*
- uid: Player.Inputs.InputsMap.InteractInputAction
  commentId: P:Player.Inputs.InputsMap.InteractInputAction
  id: InteractInputAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: InteractInputAction
  nameWithType: InputsMap.InteractInputAction
  fullName: Player.Inputs.InputsMap.InteractInputAction
  type: Property
  source:
    id: InteractInputAction
    path: ''
    startLine: 36221
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction InteractInputAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property InteractInputAction As InputAction
  overload: Player.Inputs.InputsMap.InteractInputAction*
- uid: Player.Inputs.InputsMap.CloseInputAction
  commentId: P:Player.Inputs.InputsMap.CloseInputAction
  id: CloseInputAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: CloseInputAction
  nameWithType: InputsMap.CloseInputAction
  fullName: Player.Inputs.InputsMap.CloseInputAction
  type: Property
  source:
    id: CloseInputAction
    path: ''
    startLine: 36222
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction CloseInputAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property CloseInputAction As InputAction
  overload: Player.Inputs.InputsMap.CloseInputAction*
- uid: Player.Inputs.InputsMap.PauseInputAction
  commentId: P:Player.Inputs.InputsMap.PauseInputAction
  id: PauseInputAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: PauseInputAction
  nameWithType: InputsMap.PauseInputAction
  fullName: Player.Inputs.InputsMap.PauseInputAction
  type: Property
  source:
    id: PauseInputAction
    path: ''
    startLine: 36223
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction PauseInputAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property PauseInputAction As InputAction
  overload: Player.Inputs.InputsMap.PauseInputAction*
- uid: Player.Inputs.InputsMap.UseConsumableInputAction
  commentId: P:Player.Inputs.InputsMap.UseConsumableInputAction
  id: UseConsumableInputAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: UseConsumableInputAction
  nameWithType: InputsMap.UseConsumableInputAction
  fullName: Player.Inputs.InputsMap.UseConsumableInputAction
  type: Property
  source:
    id: UseConsumableInputAction
    path: ''
    startLine: 36224
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction UseConsumableInputAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property UseConsumableInputAction As InputAction
  overload: Player.Inputs.InputsMap.UseConsumableInputAction*
- uid: Player.Inputs.InputsMap.RotateInputAction
  commentId: P:Player.Inputs.InputsMap.RotateInputAction
  id: RotateInputAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: RotateInputAction
  nameWithType: InputsMap.RotateInputAction
  fullName: Player.Inputs.InputsMap.RotateInputAction
  type: Property
  source:
    id: RotateInputAction
    path: ''
    startLine: 36225
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction RotateInputAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property RotateInputAction As InputAction
  overload: Player.Inputs.InputsMap.RotateInputAction*
- uid: Player.Inputs.InputsMap.QuestInputAction
  commentId: P:Player.Inputs.InputsMap.QuestInputAction
  id: QuestInputAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: QuestInputAction
  nameWithType: InputsMap.QuestInputAction
  fullName: Player.Inputs.InputsMap.QuestInputAction
  type: Property
  source:
    id: QuestInputAction
    path: ''
    startLine: 36226
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction QuestInputAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property QuestInputAction As InputAction
  overload: Player.Inputs.InputsMap.QuestInputAction*
- uid: Player.Inputs.InputsMap.RightClickInputAction
  commentId: P:Player.Inputs.InputsMap.RightClickInputAction
  id: RightClickInputAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: RightClickInputAction
  nameWithType: InputsMap.RightClickInputAction
  fullName: Player.Inputs.InputsMap.RightClickInputAction
  type: Property
  source:
    id: RightClickInputAction
    path: ''
    startLine: 36228
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction RightClickInputAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property RightClickInputAction As InputAction
  overload: Player.Inputs.InputsMap.RightClickInputAction*
- uid: Player.Inputs.InputsMap.LeftClickInputAction
  commentId: P:Player.Inputs.InputsMap.LeftClickInputAction
  id: LeftClickInputAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: LeftClickInputAction
  nameWithType: InputsMap.LeftClickInputAction
  fullName: Player.Inputs.InputsMap.LeftClickInputAction
  type: Property
  source:
    id: LeftClickInputAction
    path: ''
    startLine: 36229
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction LeftClickInputAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property LeftClickInputAction As InputAction
  overload: Player.Inputs.InputsMap.LeftClickInputAction*
- uid: Player.Inputs.InputsMap.DebugInputAction
  commentId: P:Player.Inputs.InputsMap.DebugInputAction
  id: DebugInputAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: DebugInputAction
  nameWithType: InputsMap.DebugInputAction
  fullName: Player.Inputs.InputsMap.DebugInputAction
  type: Property
  source:
    id: DebugInputAction
    path: ''
    startLine: 36230
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction DebugInputAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property DebugInputAction As InputAction
  overload: Player.Inputs.InputsMap.DebugInputAction*
- uid: Player.Inputs.InputsMap.DividingAction
  commentId: P:Player.Inputs.InputsMap.DividingAction
  id: DividingAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: DividingAction
  nameWithType: InputsMap.DividingAction
  fullName: Player.Inputs.InputsMap.DividingAction
  type: Property
  source:
    id: DividingAction
    path: ''
    startLine: 36231
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction DividingAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property DividingAction As InputAction
  overload: Player.Inputs.InputsMap.DividingAction*
- uid: Player.Inputs.InputsMap.OpenBackpackAction
  commentId: P:Player.Inputs.InputsMap.OpenBackpackAction
  id: OpenBackpackAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: OpenBackpackAction
  nameWithType: InputsMap.OpenBackpackAction
  fullName: Player.Inputs.InputsMap.OpenBackpackAction
  type: Property
  source:
    id: OpenBackpackAction
    path: ''
    startLine: 36232
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction OpenBackpackAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property OpenBackpackAction As InputAction
  overload: Player.Inputs.InputsMap.OpenBackpackAction*
- uid: Player.Inputs.InputsMap.CollectableAction
  commentId: P:Player.Inputs.InputsMap.CollectableAction
  id: CollectableAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: CollectableAction
  nameWithType: InputsMap.CollectableAction
  fullName: Player.Inputs.InputsMap.CollectableAction
  type: Property
  source:
    id: CollectableAction
    path: ''
    startLine: 36233
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction CollectableAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property CollectableAction As InputAction
  overload: Player.Inputs.InputsMap.CollectableAction*
- uid: Player.Inputs.InputsMap.DropItemHotbar
  commentId: P:Player.Inputs.InputsMap.DropItemHotbar
  id: DropItemHotbar
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: DropItemHotbar
  nameWithType: InputsMap.DropItemHotbar
  fullName: Player.Inputs.InputsMap.DropItemHotbar
  type: Property
  source:
    id: DropItemHotbar
    path: ''
    startLine: 36234
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction DropItemHotbar { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property DropItemHotbar As InputAction
  overload: Player.Inputs.InputsMap.DropItemHotbar*
- uid: Player.Inputs.InputsMap.ScreenshotInputAction
  commentId: P:Player.Inputs.InputsMap.ScreenshotInputAction
  id: ScreenshotInputAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: ScreenshotInputAction
  nameWithType: InputsMap.ScreenshotInputAction
  fullName: Player.Inputs.InputsMap.ScreenshotInputAction
  type: Property
  source:
    id: ScreenshotInputAction
    path: ''
    startLine: 36235
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction ScreenshotInputAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property ScreenshotInputAction As InputAction
  overload: Player.Inputs.InputsMap.ScreenshotInputAction*
- uid: Player.Inputs.InputsMap.DevConsole
  commentId: P:Player.Inputs.InputsMap.DevConsole
  id: DevConsole
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: DevConsole
  nameWithType: InputsMap.DevConsole
  fullName: Player.Inputs.InputsMap.DevConsole
  type: Property
  source:
    id: DevConsole
    path: ''
    startLine: 36236
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction DevConsole { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property DevConsole As InputAction
  overload: Player.Inputs.InputsMap.DevConsole*
- uid: Player.Inputs.InputsMap.MapInputAction
  commentId: P:Player.Inputs.InputsMap.MapInputAction
  id: MapInputAction
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: MapInputAction
  nameWithType: InputsMap.MapInputAction
  fullName: Player.Inputs.InputsMap.MapInputAction
  type: Property
  source:
    id: MapInputAction
    path: ''
    startLine: 36237
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  syntax:
    content: public InputAction MapInputAction { get; }
    parameters: []
    return:
      type: Global.InputAction
    content.vb: Public ReadOnly Property MapInputAction As InputAction
  overload: Player.Inputs.InputsMap.MapInputAction*
- uid: Player.Inputs.InputsMap.LoadInputs
  commentId: M:Player.Inputs.InputsMap.LoadInputs
  id: LoadInputs
  parent: Player.Inputs.InputsMap
  langs:
  - csharp
  - vb
  name: LoadInputs()
  nameWithType: InputsMap.LoadInputs()
  fullName: Player.Inputs.InputsMap.LoadInputs()
  type: Method
  source:
    id: LoadInputs
    path: ''
    startLine: 36245
  assemblies:
  - cs.temp.dll
  namespace: Player.Inputs
  summary: "\nLoads the rebinds from the playerprefs\n"
  example: []
  syntax:
    content: public void LoadInputs()
    content.vb: Public Sub LoadInputs()
  overload: Player.Inputs.InputsMap.LoadInputs*
references:
- uid: Player.Inputs
  commentId: N:Player.Inputs
  name: Player.Inputs
  nameWithType: Player.Inputs
  fullName: Player.Inputs
  spec.csharp:
  - uid: Player
    name: Player
  - name: .
  - uid: Player.Inputs
    name: Inputs
  spec.vb:
  - uid: Player
    name: Player
  - name: .
  - uid: Player.Inputs
    name: Inputs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Player.Inputs.InputsMap.PlayerInput*
  commentId: Overload:Player.Inputs.InputsMap.PlayerInput
  name: PlayerInput
  nameWithType: InputsMap.PlayerInput
  fullName: Player.Inputs.InputsMap.PlayerInput
- uid: Global.PlayerInput
  commentId: T:Global.PlayerInput
  name: PlayerInput
  nameWithType: PlayerInput
  fullName: PlayerInput
- uid: Player.Inputs.InputsMap.MoveInputAction*
  commentId: Overload:Player.Inputs.InputsMap.MoveInputAction
  name: MoveInputAction
  nameWithType: InputsMap.MoveInputAction
  fullName: Player.Inputs.InputsMap.MoveInputAction
- uid: Global.InputAction
  isExternal: true
  name: InputAction
  nameWithType: InputAction
  fullName: InputAction
- uid: Player.Inputs.InputsMap.RunInputAction*
  commentId: Overload:Player.Inputs.InputsMap.RunInputAction
  name: RunInputAction
  nameWithType: InputsMap.RunInputAction
  fullName: Player.Inputs.InputsMap.RunInputAction
- uid: Player.Inputs.InputsMap.InteractInputAction*
  commentId: Overload:Player.Inputs.InputsMap.InteractInputAction
  name: InteractInputAction
  nameWithType: InputsMap.InteractInputAction
  fullName: Player.Inputs.InputsMap.InteractInputAction
- uid: Player.Inputs.InputsMap.CloseInputAction*
  commentId: Overload:Player.Inputs.InputsMap.CloseInputAction
  name: CloseInputAction
  nameWithType: InputsMap.CloseInputAction
  fullName: Player.Inputs.InputsMap.CloseInputAction
- uid: Player.Inputs.InputsMap.PauseInputAction*
  commentId: Overload:Player.Inputs.InputsMap.PauseInputAction
  name: PauseInputAction
  nameWithType: InputsMap.PauseInputAction
  fullName: Player.Inputs.InputsMap.PauseInputAction
- uid: Player.Inputs.InputsMap.UseConsumableInputAction*
  commentId: Overload:Player.Inputs.InputsMap.UseConsumableInputAction
  name: UseConsumableInputAction
  nameWithType: InputsMap.UseConsumableInputAction
  fullName: Player.Inputs.InputsMap.UseConsumableInputAction
- uid: Player.Inputs.InputsMap.RotateInputAction*
  commentId: Overload:Player.Inputs.InputsMap.RotateInputAction
  name: RotateInputAction
  nameWithType: InputsMap.RotateInputAction
  fullName: Player.Inputs.InputsMap.RotateInputAction
- uid: Player.Inputs.InputsMap.QuestInputAction*
  commentId: Overload:Player.Inputs.InputsMap.QuestInputAction
  name: QuestInputAction
  nameWithType: InputsMap.QuestInputAction
  fullName: Player.Inputs.InputsMap.QuestInputAction
- uid: Player.Inputs.InputsMap.RightClickInputAction*
  commentId: Overload:Player.Inputs.InputsMap.RightClickInputAction
  name: RightClickInputAction
  nameWithType: InputsMap.RightClickInputAction
  fullName: Player.Inputs.InputsMap.RightClickInputAction
- uid: Player.Inputs.InputsMap.LeftClickInputAction*
  commentId: Overload:Player.Inputs.InputsMap.LeftClickInputAction
  name: LeftClickInputAction
  nameWithType: InputsMap.LeftClickInputAction
  fullName: Player.Inputs.InputsMap.LeftClickInputAction
- uid: Player.Inputs.InputsMap.DebugInputAction*
  commentId: Overload:Player.Inputs.InputsMap.DebugInputAction
  name: DebugInputAction
  nameWithType: InputsMap.DebugInputAction
  fullName: Player.Inputs.InputsMap.DebugInputAction
- uid: Player.Inputs.InputsMap.DividingAction*
  commentId: Overload:Player.Inputs.InputsMap.DividingAction
  name: DividingAction
  nameWithType: InputsMap.DividingAction
  fullName: Player.Inputs.InputsMap.DividingAction
- uid: Player.Inputs.InputsMap.OpenBackpackAction*
  commentId: Overload:Player.Inputs.InputsMap.OpenBackpackAction
  name: OpenBackpackAction
  nameWithType: InputsMap.OpenBackpackAction
  fullName: Player.Inputs.InputsMap.OpenBackpackAction
- uid: Player.Inputs.InputsMap.CollectableAction*
  commentId: Overload:Player.Inputs.InputsMap.CollectableAction
  name: CollectableAction
  nameWithType: InputsMap.CollectableAction
  fullName: Player.Inputs.InputsMap.CollectableAction
- uid: Player.Inputs.InputsMap.DropItemHotbar*
  commentId: Overload:Player.Inputs.InputsMap.DropItemHotbar
  name: DropItemHotbar
  nameWithType: InputsMap.DropItemHotbar
  fullName: Player.Inputs.InputsMap.DropItemHotbar
- uid: Player.Inputs.InputsMap.ScreenshotInputAction*
  commentId: Overload:Player.Inputs.InputsMap.ScreenshotInputAction
  name: ScreenshotInputAction
  nameWithType: InputsMap.ScreenshotInputAction
  fullName: Player.Inputs.InputsMap.ScreenshotInputAction
- uid: Player.Inputs.InputsMap.DevConsole*
  commentId: Overload:Player.Inputs.InputsMap.DevConsole
  name: DevConsole
  nameWithType: InputsMap.DevConsole
  fullName: Player.Inputs.InputsMap.DevConsole
- uid: Player.Inputs.InputsMap.MapInputAction*
  commentId: Overload:Player.Inputs.InputsMap.MapInputAction
  name: MapInputAction
  nameWithType: InputsMap.MapInputAction
  fullName: Player.Inputs.InputsMap.MapInputAction
- uid: Player.Inputs.InputsMap.LoadInputs*
  commentId: Overload:Player.Inputs.InputsMap.LoadInputs
  name: LoadInputs
  nameWithType: InputsMap.LoadInputs
  fullName: Player.Inputs.InputsMap.LoadInputs
