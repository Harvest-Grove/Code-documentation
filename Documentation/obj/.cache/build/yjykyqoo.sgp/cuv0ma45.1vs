<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>

  <head>
    <meta charset="utf-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
      <title>Class Helper
 | Harvest Grove code documentation </title>
      <meta name="viewport" content="width=device-width">
      <meta name="title" content="Class Helper
 | Harvest Grove code documentation ">
    
      <link rel="shortcut icon" href="../favicon.ico">
      <link rel="stylesheet" href="../styles/docfx.vendor.css">
      <link rel="stylesheet" href="../styles/docfx.css">
      <link rel="stylesheet" href="../styles/main.css">
      <meta property="docfx:navrel" content="../toc.html">
      <meta property="docfx:tocrel" content="toc.html">
    
    <meta property="docfx:rel" content="../">
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>

        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>

              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>

        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div class="container body-content">

        <div id="search-results">
          <div class="search-list">Search Results for <span></span></div>
          <div class="sr-items">
            <p><i class="glyphicon glyphicon-refresh index-loading"></i></p>
          </div>
          <ul id="pagination" data-first="First" data-prev="Previous" data-next="Next" data-last="Last"></ul>
        </div>
      </div>
      <div role="main" class="container body-content hide-when-search">

        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="Helpers.HelpingClasses.Helper.Helper">


  <h1 id="Helpers_HelpingClasses_Helper_Helper" data-uid="Helpers.HelpingClasses.Helper.Helper" class="text-break">Class Helper
</h1>
  <div class="markdown level0 summary"><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="2">Here you can find every helper class</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">object</span></div>
    <div class="level1"><span class="xref">Helper</span></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <span class="xref">object.Equals(object)</span>
    </div>
    <div>
      <span class="xref">object.Equals(object, object)</span>
    </div>
    <div>
      <span class="xref">object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">object.GetType()</span>
    </div>
    <div>
      <span class="xref">object.MemberwiseClone()</span>
    </div>
    <div>
      <span class="xref">object.ReferenceEquals(object, object)</span>
    </div>
    <div>
      <span class="xref">object.ToString()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="Helpers.html">Helpers</a>.<a class="xref" href="Helpers.HelpingClasses.html">HelpingClasses</a>.<a class="xref" href="Helpers.HelpingClasses.Helper.html">Helper</a></h6>
  <h6><strong>Assembly</strong>: cs.temp.dll.dll</h6>
  <h5 id="Helpers_HelpingClasses_Helper_Helper_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class Helper</code></pre>
  </div>
  <h3 id="fields">Fields
</h3>


  <h4 id="Helpers_HelpingClasses_Helper_Helper_SpawnedObjectsCount" data-uid="Helpers.HelpingClasses.Helper.Helper.SpawnedObjectsCount">SpawnedObjectsCount</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static ushort SpawnedObjectsCount</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">ushort</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
</h3>


  <a id="Helpers_HelpingClasses_Helper_Helper_ConvertIslandToScene_" data-uid="Helpers.HelpingClasses.Helper.Helper.ConvertIslandToScene*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_ConvertIslandToScene_IslandsDictionaryNames_" data-uid="Helpers.HelpingClasses.Helper.Helper.ConvertIslandToScene(IslandsDictionaryNames)">ConvertIslandToScene(IslandsDictionaryNames)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static SceneEnum ConvertIslandToScene(IslandsDictionaryNames islandName)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">IslandsDictionaryNames</span></td>
        <td><span class="parametername">islandName</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">SceneEnum</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_ConvertSceneToIsland_" data-uid="Helpers.HelpingClasses.Helper.Helper.ConvertSceneToIsland*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_ConvertSceneToIsland_SceneEnum_" data-uid="Helpers.HelpingClasses.Helper.Helper.ConvertSceneToIsland(SceneEnum)">ConvertSceneToIsland(SceneEnum)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IslandsDictionaryNames ConvertSceneToIsland(SceneEnum sceneName)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">SceneEnum</span></td>
        <td><span class="parametername">sceneName</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">IslandsDictionaryNames</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_ExtractWords_" data-uid="Helpers.HelpingClasses.Helper.Helper.ExtractWords*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_ExtractWords_System_String_" data-uid="Helpers.HelpingClasses.Helper.Helper.ExtractWords(System.String)">ExtractWords(string)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string ExtractWords(string input)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><span class="parametername">input</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_FadeIn_" data-uid="Helpers.HelpingClasses.Helper.Helper.FadeIn*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_FadeIn_Image_System_Single_" data-uid="Helpers.HelpingClasses.Helper.Helper.FadeIn(Image,System.Single)">FadeIn(Image, float)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="2">Fade the image in</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void FadeIn(this Image image, float duration)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Image</span></td>
        <td><span class="parametername">image</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">float</span></td>
        <td><span class="parametername">duration</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_FadeOut_" data-uid="Helpers.HelpingClasses.Helper.Helper.FadeOut*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_FadeOut_Image_System_Single_" data-uid="Helpers.HelpingClasses.Helper.Helper.FadeOut(Image,System.Single)">FadeOut(Image, float)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="2">Fade the image out</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void FadeOut(this Image image, float duration)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Image</span></td>
        <td><span class="parametername">image</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">float</span></td>
        <td><span class="parametername">duration</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_GetDictionarySettings_" data-uid="Helpers.HelpingClasses.Helper.Helper.GetDictionarySettings*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_GetDictionarySettings__1" data-uid="Helpers.HelpingClasses.Helper.Helper.GetDictionarySettings``1">GetDictionarySettings&lt;T&gt;()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="2">Get the json settings for the dictionary {only when it has vector2 as key!!!}</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static JsonSerializerSettings GetDictionarySettings&lt;T&gt;()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">JsonSerializerSettings</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_GetHoneyText_" data-uid="Helpers.HelpingClasses.Helper.Helper.GetHoneyText*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_GetHoneyText_BeeDictionary_" data-uid="Helpers.HelpingClasses.Helper.Helper.GetHoneyText(BeeDictionary)">GetHoneyText(BeeDictionary)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="1">Gets the text for honey status based on the honey status in the bee dictionary</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string GetHoneyText(BeeDictionary beeDictionary)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">BeeDictionary</span></td>
        <td><span class="parametername">beeDictionary</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_GetInventoryService_" data-uid="Helpers.HelpingClasses.Helper.Helper.GetInventoryService*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_GetInventoryService" data-uid="Helpers.HelpingClasses.Helper.Helper.GetInventoryService">GetInventoryService()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IInventoryService GetInventoryService()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">IInventoryService</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_GetMaterialTypeAtPositionHotbar_" data-uid="Helpers.HelpingClasses.Helper.Helper.GetMaterialTypeAtPositionHotbar*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_GetMaterialTypeAtPositionHotbar" data-uid="Helpers.HelpingClasses.Helper.Helper.GetMaterialTypeAtPositionHotbar">GetMaterialTypeAtPositionHotbar()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="2">Gets the material type of the item at the current slot position in the hotbar {ONLY FOR TOOLS!}</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static MaterialType GetMaterialTypeAtPositionHotbar()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">MaterialType</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_GetNormalizedDirectionFromPlayer_" data-uid="Helpers.HelpingClasses.Helper.Helper.GetNormalizedDirectionFromPlayer*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_GetNormalizedDirectionFromPlayer_System_Int32_System_Int32_" data-uid="Helpers.HelpingClasses.Helper.Helper.GetNormalizedDirectionFromPlayer(System.Int32,System.Int32)">GetNormalizedDirectionFromPlayer(int, int)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Vector2 GetNormalizedDirectionFromPlayer(int x, int y)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">x</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">y</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Vector2</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_GetNormalizedDirectionFromPlayer_" data-uid="Helpers.HelpingClasses.Helper.Helper.GetNormalizedDirectionFromPlayer*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_GetNormalizedDirectionFromPlayer_Vector2Int_" data-uid="Helpers.HelpingClasses.Helper.Helper.GetNormalizedDirectionFromPlayer(Vector2Int)">GetNormalizedDirectionFromPlayer(Vector2Int)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Vector2 GetNormalizedDirectionFromPlayer(Vector2Int clickPosition)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Vector2Int</span></td>
        <td><span class="parametername">clickPosition</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Vector2</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_GetTilesPlayerIsOn_" data-uid="Helpers.HelpingClasses.Helper.Helper.GetTilesPlayerIsOn*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_GetTilesPlayerIsOn_Vector2_TilemapStructure_" data-uid="Helpers.HelpingClasses.Helper.Helper.GetTilesPlayerIsOn(Vector2,TilemapStructure)">GetTilesPlayerIsOn(Vector2, TilemapStructure)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="2">Gets all the tiles player is standing on</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static List&lt;Vector2Int&gt; GetTilesPlayerIsOn(Vector2 position, TilemapStructure tilemapStructure)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Vector2</span></td>
        <td><span class="parametername">position</span></td>
        <td><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="1">Player's position in world coordinates</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">TilemapStructure</span></td>
        <td><span class="parametername">tilemapStructure</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">List&lt;&gt;</span>&lt;<span class="xref">Vector2Int</span>&gt;</td>
        <td><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="1">List of unique tiles (Vector2Int) the player is standing on or nearby him</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_GetVector2IntMousePosition_" data-uid="Helpers.HelpingClasses.Helper.Helper.GetVector2IntMousePosition*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_GetVector2IntMousePosition_Vector2_" data-uid="Helpers.HelpingClasses.Helper.Helper.GetVector2IntMousePosition(Vector2)">GetVector2IntMousePosition(Vector2)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="2">Convert mouse position to Vector2Int</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Vector2Int GetVector2IntMousePosition(Vector2 position)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Vector2</span></td>
        <td><span class="parametername">position</span></td>
        <td><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="1">Where the mouse clicked (vector2)</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Vector2Int</span></td>
        <td><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="1">Int vector with the mouse position in the world coordinates</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_GetWateredFieldID_" data-uid="Helpers.HelpingClasses.Helper.Helper.GetWateredFieldID*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_GetWateredFieldID_System_Int32_System_Int32_" data-uid="Helpers.HelpingClasses.Helper.Helper.GetWateredFieldID(System.Int32,System.Int32)">GetWateredFieldID(int, int)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static int GetWateredFieldID(int xPos, int yPos)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">xPos</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">yPos</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">int</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_HasEnoughItemsAtPositionHotbar_" data-uid="Helpers.HelpingClasses.Helper.Helper.HasEnoughItemsAtPositionHotbar*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_HasEnoughItemsAtPositionHotbar" data-uid="Helpers.HelpingClasses.Helper.Helper.HasEnoughItemsAtPositionHotbar">HasEnoughItemsAtPositionHotbar()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="1">Checks if the item on the current slot position in hotbar has enough items {i.e. is greater than 0}</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool HasEnoughItemsAtPositionHotbar()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">bool</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_IsPlayerNearby_" data-uid="Helpers.HelpingClasses.Helper.Helper.IsPlayerNearby*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_IsPlayerNearby_Vector2_TilemapStructure_System_Int32_System_Int32_System_Boolean_" data-uid="Helpers.HelpingClasses.Helper.Helper.IsPlayerNearby(Vector2,TilemapStructure,System.Int32,System.Int32,System.Boolean)">IsPlayerNearby(Vector2, TilemapStructure, int, int, bool)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="2">Determines if a player is nearby a given position on a tilemap</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsPlayerNearby(Vector2 position, TilemapStructure tilemapStructure, int mouseXPos, int mouseYPos, bool takePlayerInAccount = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Vector2</span></td>
        <td><span class="parametername">position</span></td>
        <td><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="1">The player's position as a Vector2</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">TilemapStructure</span></td>
        <td><span class="parametername">tilemapStructure</span></td>
        <td><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="1">The TilemapStructure containing the tilemap data</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">mouseXPos</span></td>
        <td><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="1">The X position of the mouse cursor</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">mouseYPos</span></td>
        <td><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="1">The Y position of the mouse cursor</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">bool</span></td>
        <td><span class="parametername">takePlayerInAccount</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">bool</span></td>
        <td><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="1">true if the player is nearby, false otherwise</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_IsPointerOverUIObject_" data-uid="Helpers.HelpingClasses.Helper.Helper.IsPointerOverUIObject*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_IsPointerOverUIObject" data-uid="Helpers.HelpingClasses.Helper.Helper.IsPointerOverUIObject">IsPointerOverUIObject()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="2">Checks if the clicked point on the screen has some objects in his way</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsPointerOverUIObject()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">bool</span></td>
        <td><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="1">If it has hit something</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_IsWaterTile_" data-uid="Helpers.HelpingClasses.Helper.Helper.IsWaterTile*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_IsWaterTile_System_Int32_System_Int32_" data-uid="Helpers.HelpingClasses.Helper.Helper.IsWaterTile(System.Int32,System.Int32)">IsWaterTile(int, int)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsWaterTile(int posX, int posY)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">posX</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">posY</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">bool</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_IsWaterTile_" data-uid="Helpers.HelpingClasses.Helper.Helper.IsWaterTile*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_IsWaterTile_Vector2Int_" data-uid="Helpers.HelpingClasses.Helper.Helper.IsWaterTile(Vector2Int)">IsWaterTile(Vector2Int)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="1">Checks if the tile is water</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsWaterTile(Vector2Int position)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Vector2Int</span></td>
        <td><span class="parametername">position</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">bool</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_IsWaterTile_" data-uid="Helpers.HelpingClasses.Helper.Helper.IsWaterTile*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_IsWaterTile_Vector3Int_" data-uid="Helpers.HelpingClasses.Helper.Helper.IsWaterTile(Vector3Int)">IsWaterTile(Vector3Int)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsWaterTile(Vector3Int position)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Vector3Int</span></td>
        <td><span class="parametername">position</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">bool</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_RemoveCollidersFromTilesAtPositions_" data-uid="Helpers.HelpingClasses.Helper.Helper.RemoveCollidersFromTilesAtPositions*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_RemoveCollidersFromTilesAtPositions__1_Tilemap_IEnumerable_Vector3Int__" data-uid="Helpers.HelpingClasses.Helper.Helper.RemoveCollidersFromTilesAtPositions``1(Tilemap,IEnumerable{Vector3Int})">RemoveCollidersFromTilesAtPositions&lt;T&gt;(Tilemap, IEnumerable&lt;Vector3Int&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="2">Removes colliders from tiles at certain position(s)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void RemoveCollidersFromTilesAtPositions&lt;T&gt;(Tilemap tilemap, IEnumerable&lt;Vector3Int&gt; positions) where T : TileBase</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Tilemap</span></td>
        <td><span class="parametername">tilemap</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">IEnumerable&lt;&gt;</span>&lt;<span class="xref">Vector3Int</span>&gt;</td>
        <td><span class="parametername">positions</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="1">The type of tile</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_SpawnItemOnTheGround_" data-uid="Helpers.HelpingClasses.Helper.Helper.SpawnItemOnTheGround*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_SpawnItemOnTheGround_Vector2Int_InventoryItemData_System_UInt16_" data-uid="Helpers.HelpingClasses.Helper.Helper.SpawnItemOnTheGround(Vector2Int,InventoryItemData,System.UInt16)">SpawnItemOnTheGround(Vector2Int, InventoryItemData, ushort)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void SpawnItemOnTheGround(Vector2Int pos, InventoryItemData item, ushort amount)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Vector2Int</span></td>
        <td><span class="parametername">pos</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">InventoryItemData</span></td>
        <td><span class="parametername">item</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">ushort</span></td>
        <td><span class="parametername">amount</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_SpawnItemOnTheGround_" data-uid="Helpers.HelpingClasses.Helper.Helper.SpawnItemOnTheGround*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_SpawnItemOnTheGround_Vector3_InventoryItemData_System_Int32_ToolInstance_" data-uid="Helpers.HelpingClasses.Helper.Helper.SpawnItemOnTheGround(Vector3,InventoryItemData,System.Int32,ToolInstance)">SpawnItemOnTheGround(Vector3, InventoryItemData, int, ToolInstance)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void SpawnItemOnTheGround(Vector3 pos, InventoryItemData item, int amount, ToolInstance toolInstance)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Vector3</span></td>
        <td><span class="parametername">pos</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">InventoryItemData</span></td>
        <td><span class="parametername">item</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">amount</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">ToolInstance</span></td>
        <td><span class="parametername">toolInstance</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_SpawnItemOnTheGround_" data-uid="Helpers.HelpingClasses.Helper.Helper.SpawnItemOnTheGround*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_SpawnItemOnTheGround_Vector3_InventoryItemData_System_Int32_" data-uid="Helpers.HelpingClasses.Helper.Helper.SpawnItemOnTheGround(Vector3,InventoryItemData,System.Int32)">SpawnItemOnTheGround(Vector3, InventoryItemData, int)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="2">Spawns the item on the specific position (ONLY PICKUP ITEM!!)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void SpawnItemOnTheGround(Vector3 pos, InventoryItemData item, int amount)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Vector3</span></td>
        <td><span class="parametername">pos</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">InventoryItemData</span></td>
        <td><span class="parametername">item</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">amount</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_SpawnItemOnTheGround_" data-uid="Helpers.HelpingClasses.Helper.Helper.SpawnItemOnTheGround*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_SpawnItemOnTheGround_Vector3_InventoryItemData_System_UInt16_" data-uid="Helpers.HelpingClasses.Helper.Helper.SpawnItemOnTheGround(Vector3,InventoryItemData,System.UInt16)">SpawnItemOnTheGround(Vector3, InventoryItemData, ushort)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void SpawnItemOnTheGround(Vector3 pos, InventoryItemData item, ushort amount)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Vector3</span></td>
        <td><span class="parametername">pos</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">InventoryItemData</span></td>
        <td><span class="parametername">item</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">ushort</span></td>
        <td><span class="parametername">amount</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Helpers_HelpingClasses_Helper_Helper_TileName_" data-uid="Helpers.HelpingClasses.Helper.Helper.TileName*"></a>
  <h4 id="Helpers_HelpingClasses_Helper_Helper_TileName_System_Int32_" data-uid="Helpers.HelpingClasses.Helper.Helper.TileName(System.Int32)">TileName(int)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Helpers.HelpingClasses.Helper.Helper.yml" sourcestartlinenumber="1">Get the name of the tile based on it's id</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string TileName(int id)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">id</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
</article>
          </div>

          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>

      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
      Harvest Grove 
      
          </div>
        </div>
      </footer>
    </div>

    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
