<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>

  <head>
    <meta charset="utf-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
      <title>Class InventorySlot
 | Harvest Grove code documentation </title>
      <meta name="viewport" content="width=device-width">
      <meta name="title" content="Class InventorySlot
 | Harvest Grove code documentation ">
    
      <link rel="shortcut icon" href="../favicon.ico">
      <link rel="stylesheet" href="../styles/docfx.vendor.css">
      <link rel="stylesheet" href="../styles/docfx.css">
      <link rel="stylesheet" href="../styles/main.css">
      <meta property="docfx:navrel" content="../toc.html">
      <meta property="docfx:tocrel" content="toc.html">
    
    <meta property="docfx:rel" content="../">
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>

        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>

              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>

        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div class="container body-content">

        <div id="search-results">
          <div class="search-list">Search Results for <span></span></div>
          <div class="sr-items">
            <p><i class="glyphicon glyphicon-refresh index-loading"></i></p>
          </div>
          <ul id="pagination" data-first="First" data-prev="Previous" data-next="Next" data-last="Last"></ul>
        </div>
      </div>
      <div role="main" class="container body-content hide-when-search">

        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="Systems.Inventory.InventorySlot">


  <h1 id="Systems_Inventory_InventorySlot" data-uid="Systems.Inventory.InventorySlot" class="text-break">Class InventorySlot
</h1>
  <div class="markdown level0 summary"></div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">object</span></div>
    <div class="level1"><span class="xref">InventorySlot</span></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <span class="xref">object.Equals(object)</span>
    </div>
    <div>
      <span class="xref">object.Equals(object, object)</span>
    </div>
    <div>
      <span class="xref">object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">object.GetType()</span>
    </div>
    <div>
      <span class="xref">object.MemberwiseClone()</span>
    </div>
    <div>
      <span class="xref">object.ReferenceEquals(object, object)</span>
    </div>
    <div>
      <span class="xref">object.ToString()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <span class="xref">Systems</span>.<a class="xref" href="Systems.Inventory.html">Inventory</a></h6>
  <h6><strong>Assembly</strong>: cs.temp.dll.dll</h6>
  <h5 id="Systems_Inventory_InventorySlot_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Serializable]
public class InventorySlot</code></pre>
  </div>
  <h3 id="constructors">Constructors
</h3>


  <a id="Systems_Inventory_InventorySlot__ctor_" data-uid="Systems.Inventory.InventorySlot.#ctor*"></a>
  <h4 id="Systems_Inventory_InventorySlot__ctor" data-uid="Systems.Inventory.InventorySlot.#ctor">InventorySlot()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="2">Initializes an empty slot</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public InventorySlot()</code></pre>
  </div>


  <a id="Systems_Inventory_InventorySlot__ctor_" data-uid="Systems.Inventory.InventorySlot.#ctor*"></a>
  <h4 id="Systems_Inventory_InventorySlot__ctor_InventoryItemData_System_Int32_ToolInstance_" data-uid="Systems.Inventory.InventorySlot.#ctor(InventoryItemData,System.Int32,ToolInstance)">InventorySlot(InventoryItemData, int, ToolInstance)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public InventorySlot(InventoryItemData source, int amount, ToolInstance tool)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">InventoryItemData</span></td>
        <td><span class="parametername">source</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">amount</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">ToolInstance</span></td>
        <td><span class="parametername">tool</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Systems_Inventory_InventorySlot__ctor_" data-uid="Systems.Inventory.InventorySlot.#ctor*"></a>
  <h4 id="Systems_Inventory_InventorySlot__ctor_InventoryItemData_System_Int32_" data-uid="Systems.Inventory.InventorySlot.#ctor(InventoryItemData,System.Int32)">InventorySlot(InventoryItemData, int)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="2">Initializes the slot by the given data</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public InventorySlot(InventoryItemData source, int amount)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">InventoryItemData</span></td>
        <td><span class="parametername">source</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">The item to initialize with the slot</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">amount</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">Amount to put in the slot</p>
</td>
      </tr>
    </tbody>
  </table>
  <h3 id="properties">Properties
</h3>


  <a id="Systems_Inventory_InventorySlot_ItemData_" data-uid="Systems.Inventory.InventorySlot.ItemData*"></a>
  <h4 id="Systems_Inventory_InventorySlot_ItemData" data-uid="Systems.Inventory.InventorySlot.ItemData">ItemData</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public InventoryItemData ItemData { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">InventoryItemData</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Systems_Inventory_InventorySlot_StackSize_" data-uid="Systems.Inventory.InventorySlot.StackSize*"></a>
  <h4 id="Systems_Inventory_InventorySlot_StackSize" data-uid="Systems.Inventory.InventorySlot.StackSize">StackSize</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int StackSize { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">int</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Systems_Inventory_InventorySlot_ToolInstance_" data-uid="Systems.Inventory.InventorySlot.ToolInstance*"></a>
  <h4 id="Systems_Inventory_InventorySlot_ToolInstance" data-uid="Systems.Inventory.InventorySlot.ToolInstance">ToolInstance</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public ToolInstance ToolInstance { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">ToolInstance</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
</h3>


  <a id="Systems_Inventory_InventorySlot_AddItemToStack_" data-uid="Systems.Inventory.InventorySlot.AddItemToStack*"></a>
  <h4 id="Systems_Inventory_InventorySlot_AddItemToStack_System_Int32_System_Boolean_" data-uid="Systems.Inventory.InventorySlot.AddItemToStack(System.Int32,System.Boolean)">AddItemToStack(int, bool)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="2">Increases the quantity of items in the slot by a specified amount.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void AddItemToStack(int amountToAdd, bool fireEvent = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">amountToAdd</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">The quantity of items to be added to the slot.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">bool</span></td>
        <td><span class="parametername">fireEvent</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Systems_Inventory_InventorySlot_ClearSlot_" data-uid="Systems.Inventory.InventorySlot.ClearSlot*"></a>
  <h4 id="Systems_Inventory_InventorySlot_ClearSlot_Systems_Inventory_Inventory_" data-uid="Systems.Inventory.InventorySlot.ClearSlot(Systems.Inventory.Inventory)">ClearSlot(Inventory)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="2">Clears the slot</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ClearSlot(Inventory inventory = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Systems.Inventory.Inventory.html">Inventory</a></td>
        <td><span class="parametername">inventory</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="Systems_Inventory_InventorySlot_IsSlotValid_" data-uid="Systems.Inventory.InventorySlot.IsSlotValid*"></a>
  <h4 id="Systems_Inventory_InventorySlot_IsSlotValid_ItemType_" data-uid="Systems.Inventory.InventorySlot.IsSlotValid(ItemType)">IsSlotValid(ItemType)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="2">Checks if the given item can be placed inside the slot</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool IsSlotValid(ItemType itemType)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">ItemType</span></td>
        <td><span class="parametername">itemType</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">The item type</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">bool</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">If the item can be added</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="Systems_Inventory_InventorySlot_MoveItemToSlot_" data-uid="Systems.Inventory.InventorySlot.MoveItemToSlot*"></a>
  <h4 id="Systems_Inventory_InventorySlot_MoveItemToSlot_Systems_Inventory_InventorySlot_" data-uid="Systems.Inventory.InventorySlot.MoveItemToSlot(Systems.Inventory.InventorySlot)">MoveItemToSlot(InventorySlot)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="2">Assigns an item to a slot by stacking if they're the same, or swapping if they're not</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void MoveItemToSlot(InventorySlot invSlot)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Systems.Inventory.InventorySlot.html">InventorySlot</a></td>
        <td><span class="parametername">invSlot</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">The slot to assign the item to</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="Systems_Inventory_InventorySlot_RemoveFromStack_" data-uid="Systems.Inventory.InventorySlot.RemoveFromStack*"></a>
  <h4 id="Systems_Inventory_InventorySlot_RemoveFromStack_System_Int32_" data-uid="Systems.Inventory.InventorySlot.RemoveFromStack(System.Int32)">RemoveFromStack(int)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="2">Removes a certain amount from the stack</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool RemoveFromStack(int amountToRemove)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">amountToRemove</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">The amount to remove</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">bool</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">If the slot has been emptied</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="Systems_Inventory_InventorySlot_RoomLeftInStack_" data-uid="Systems.Inventory.InventorySlot.RoomLeftInStack*"></a>
  <h4 id="Systems_Inventory_InventorySlot_RoomLeftInStack_System_Int32_System_Int32__" data-uid="Systems.Inventory.InventorySlot.RoomLeftInStack(System.Int32,System.Int32@)">RoomLeftInStack(int, out int)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="2">Checks if the slot has still space for other items</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool RoomLeftInStack(int amountToAdd, out int remainingAmount)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">amountToAdd</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">Amount to add</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">remainingAmount</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">Remaining amount if the stack size is full</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">bool</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">If there's still space in the inventory</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="Systems_Inventory_InventorySlot_RoomLeftInStack_" data-uid="Systems.Inventory.InventorySlot.RoomLeftInStack*"></a>
  <h4 id="Systems_Inventory_InventorySlot_RoomLeftInStack_System_Int32_" data-uid="Systems.Inventory.InventorySlot.RoomLeftInStack(System.Int32)">RoomLeftInStack(int)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="2">Checks if the slot has still space for other items</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool RoomLeftInStack(int amountToAdd)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">amountToAdd</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">The amount to add</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">bool</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">If there's still space in the inventory</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="Systems_Inventory_InventorySlot_SplitStack_" data-uid="Systems.Inventory.InventorySlot.SplitStack*"></a>
  <h4 id="Systems_Inventory_InventorySlot_SplitStack_Systems_Inventory_InventorySlot__" data-uid="Systems.Inventory.InventorySlot.SplitStack(Systems.Inventory.InventorySlot@)">SplitStack(out InventorySlot)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="2">Splits the quantity of items in the slot.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool SplitStack(out InventorySlot slotSplit)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Systems.Inventory.InventorySlot.html">InventorySlot</a></td>
        <td><span class="parametername">slotSplit</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">The split slot</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">bool</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">If it has been split</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="Systems_Inventory_InventorySlot_UpdateInventorySlot_" data-uid="Systems.Inventory.InventorySlot.UpdateInventorySlot*"></a>
  <h4 id="Systems_Inventory_InventorySlot_UpdateInventorySlot_Systems_Inventory_InventorySlot_InventoryItemData_System_Int32_Systems_Inventory_Inventory_" data-uid="Systems.Inventory.InventorySlot.UpdateInventorySlot(Systems.Inventory.InventorySlot,InventoryItemData,System.Int32,Systems.Inventory.Inventory)">UpdateInventorySlot(InventorySlot, InventoryItemData, int, Inventory)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="2">Updates the current inventory slot.
Also triggers an event to notify of the inventory slot change.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void UpdateInventorySlot(InventorySlot updatedSlot, InventoryItemData newItemData, int newStackSize, Inventory inventory = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Systems.Inventory.InventorySlot.html">InventorySlot</a></td>
        <td><span class="parametername">updatedSlot</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">The new data for the inventory slot.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">InventoryItemData</span></td>
        <td><span class="parametername">newItemData</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">The new item data for the inventory slot.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">newStackSize</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">The new stack size for the inventory slot.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="Systems.Inventory.Inventory.html">Inventory</a></td>
        <td><span class="parametername">inventory</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">Optional: the inventory object tied to this inventory slot. If provided, its OnInventorySlotChanged event will be invoked.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="Systems_Inventory_InventorySlot_UpdateInventorySlot_" data-uid="Systems.Inventory.InventorySlot.UpdateInventorySlot*"></a>
  <h4 id="Systems_Inventory_InventorySlot_UpdateInventorySlot_Systems_Inventory_InventorySlot_ToolInstance_System_Int32_Systems_Inventory_Inventory_" data-uid="Systems.Inventory.InventorySlot.UpdateInventorySlot(Systems.Inventory.InventorySlot,ToolInstance,System.Int32,Systems.Inventory.Inventory)">UpdateInventorySlot(InventorySlot, ToolInstance, int, Inventory)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="2">Updates the current inventory slot with the provided item data, quantity, and tool instance.
Also triggers an event to notify of the inventory slot change.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void UpdateInventorySlot(InventorySlot updatedSlot, ToolInstance toolInstance, int newStackSize, Inventory inventory = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Systems.Inventory.InventorySlot.html">InventorySlot</a></td>
        <td><span class="parametername">updatedSlot</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">The updated slot</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">ToolInstance</span></td>
        <td><span class="parametername">toolInstance</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">The ToolInstance object associated with the inventory slot.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">int</span></td>
        <td><span class="parametername">newStackSize</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">The new stack size for the inventory slot.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="Systems.Inventory.Inventory.html">Inventory</a></td>
        <td><span class="parametername">inventory</span></td>
        <td><p sourcefile="api/Systems.Inventory.InventorySlot.yml" sourcestartlinenumber="1">A reference to the Inventory object relating to the inventory slot.</p>
</td>
      </tr>
    </tbody>
  </table>
</article>
          </div>

          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>

      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
      Harvest Grove 
      
          </div>
        </div>
      </footer>
    </div>

    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
